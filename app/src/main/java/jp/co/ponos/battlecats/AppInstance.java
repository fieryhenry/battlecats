package jp.co.ponos.battlecats;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Calendar;
import java.util.Date;

import jp.co.ponos.library.game.BrowserOption;
import jp.co.ponos.library.game.Model;
import jp.co.ponos.library.game.ModelAnimation;
import jp.co.ponos.library.game.TextureRenderer;
import jp.co.ponos.library.game.aMath;
import jp.co.ponos.library.game.aString;
import jp.co.ponos.library.game.aStringBuffer;
import jp.co.ponos.library.game.Texture;
import jp.co.ponos.library.game.Sound;
import jp.co.ponos.library.game.stream.AssetTextStream;
import jp.co.ponos.library.score.MyUtility;
import jp.co.ponos.library.twitter.Twitter;

public class AppInstance extends Game {
   AppInstance() {
      this.scene2 = -1;
      this.scene = -1;
      this.W = -1;
      this.V = -1;
   }

   void stampLoad() {
      this.resetTextures();

      int var1;
      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
         this.fR[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[0] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.ag[0].a(this.dq[0], "FONT_SYSTEM_BOLD", 46, 0);
      this.ag[1].a(this.dq[1], "FONT_SYSTEM_BOLD", 24, 0);
      if (this.p == 0) {
         this.ag[2].a(this.dq[2], "FONT_SYSTEM_BOLD", 24, 0);
         this.ag[3].a(String.format("%s%d%s", this.dq[3], 30 - (this.bl + 1), this.dq[4]), "FONT_SYSTEM_BOLD", 24, 0);
      } else if (this.p == 1) {
         this.ag[2].a(String.format("%s %d %s", this.dq[2], 30 - (this.bl + 1), this.dq[18]), "FONT_SYSTEM_BOLD", 24, 0);
         this.ag[3].a(String.format("%s", this.dq[3]), "FONT_SYSTEM_BOLD", 24, 0);
      }

      this.ag[4].a(this.dq[16], "FONT_SYSTEM_BOLD", 22, 1);
      this.ag[5].a(this.dq[17], "FONT_SYSTEM_BOLD", 22, 1);
      this.fw[0][0] = this.excessWidth / 2 + 225;
      this.fw[0][1] = 485;
      this.fw[0][2] = 381;
      this.fw[0][3] = 88;
      this.gy = 230;
      this.eh[0] = -(this.gy * this.bl);
      this.bm[this.bl] = 1;
      if (this.aF[0].isLoaded()) {
         this.aF[0].reset();
      }

      if (!this.aF[0].isLoaded()) {
         this.aF[0].load(MyUtility.getString(String.format("i%03d_stamp_f.png", 0)), MyUtility.getString(String.format("%03d_stamp_f.imgcut", 0)));
      }

      this.aG[0].a(MyUtility.getString(String.format("%03d_stamp_f.mamodel", 0)));
      this.aH[0].load(MyUtility.getString(String.format("%03d_stamp_f00.maanim", 0)));
      this.aG[0].a(this.aF);
      this.aG[0].a();
      if (this.aF[1].isLoaded()) {
         this.aF[1].reset();
      }

      if (!this.aF[1].isLoaded()) {
         this.aF[1].load(MyUtility.getString(String.format("i%03d_img044.png", 1)), MyUtility.getString(String.format("i%03d_img044.imgcut", 1)));
      }

      this.aG[1].a(MyUtility.getString(String.format("%03d_img044.mamodel", 1)));
      this.aH[1].load(MyUtility.getString(String.format("stamp.maanim")));
      this.aG[1].a(this.aF);
      this.aG[1].a();
      if (this.ae[10].isLoaded()) {
         this.ae[10].reset();
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
      }

      if (this.bl >= 29) {
         this.eE[0] = true;
      } else {
         this.eE[0] = false;
      }

      this.eh[2] = this.getWidth() / 2;
      this.hI = false;
   }

   boolean stampProcess() {
      boolean var1 = false;
      int[] var2 = this.fQ;
      int var10002 = var2[4]++;
      if (!this.eb) {
         var2 = this.fQ;
         var10002 = var2[0]++;
         var2 = this.fQ;
         var10002 = var2[1]++;
         if (this.fQ[1] == 60) {
            Sound.getInstance().play(41);
         }

         if (this.fQ[1] >= this.aH[1].a() && this.bl <= 29 && this.bm[this.bl] == 1) {
            this.screenTransition();
            this.gu = true;
            this.gw = 9999;
            this.bm[this.bl] = 2;
            return var1;
         }

         if (this.fQ[1] >= this.aH[1].a()) {
            this.fQ[1] = this.aH[1].a();
            var2 = this.eh;
            var2[2] = (int)((double)var2[2] * 0.8);
            var2 = this.eh;
            var2[0] += this.ek[0];
            var2 = this.eh;
            var2[1] -= this.ek[0];
            var2 = this.ek;
            var2[0] = (int)((double)var2[0] * 0.9);
            if (this.eh[0] >= this.gy / 2 - 20) {
               this.eh[0] = this.gy / 2 - 20;
               this.eh[1] = this.gy * 100;
               this.ek[0] = 0;
            } else if (this.eh[0] < -(this.gy * 30 - 20) + this.gy / 2) {
               this.eh[0] = -(this.gy * 30 - 20) + this.gy / 2;
               this.ek[0] = 0;
               this.eh[1] = this.gy * 100;
            }

            if (this.R() && !this.eb) {
               if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
                  this.ek[0] = 0;
               } else {
                  this.hI = true;
               }

               if (this.hI) {
                  this.ek[0] = this.K() - this.O();
                  if (this.ek[0] != 0 && !this.eE[9]) {
                     this.eE[9] = true;
                  }
               }
            } else {
               this.hI = false;
               if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
                  this.ek[0] = 0;
                  if (this.eh[0] % this.gy != 0) {
                     if (-this.eh[0] >= 0) {
                        if (-this.eh[0] % this.gy >= this.gy / 2) {
                           this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                           if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                              this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                           }
                        } else {
                           this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                           if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                              this.eh[0] = this.eh[0] / this.gy * this.gy;
                           }
                        }
                     } else if (-this.eh[0] % this.gy >= this.gy / 2) {
                        this.eh[0] -= (this.eh[0] % this.gy + this.gy - 4) / 4;
                        if ((this.eh[0] % this.gy + this.gy - 4) / 4 == 0) {
                           this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                        }
                     } else {
                        this.eh[0] -= (this.eh[0] % this.gy + 4) / 4;
                        if ((this.eh[0] % this.gy + 4) / 4 == 0) {
                           this.eh[0] = this.eh[0] / this.gy * this.gy;
                        }
                     }
                  }

                  if (!this.S()) {
                     this.eE[9] = false;
                  }
               }
            }

            if (this.ek[0] < 0) {
               if (this.hq[0] != -(this.eh[0] / this.gy)) {
                  Sound.getInstance().play(10);
               }

               this.gp[3] = false;
            } else if (this.ek[0] > 0) {
               if (this.hq[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
                  Sound.getInstance().play(10);
               }

               this.gp[3] = false;
            } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[3]) {
               Sound.getInstance().play(10);
               this.gp[3] = true;
            }

            if (this.hq[0] != -(this.eh[0] / this.gy)) {
               this.hq[0] = -(this.eh[0] / this.gy);
            }

            if (this.hq[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               this.hq[1] = (this.gy * 100 + this.eh[0]) / this.gy;
            }

            if (-(this.eh[0] - this.gy / 2) / this.gy != this.hq[2]) {
               this.hq[2] = -(this.eh[0] - this.gy / 2) / this.gy;
            }

            if (!this.eE[9]) {
               if (this.fx[0] >= 1) {
                  var2 = this.fx;
                  var10002 = var2[0]++;
                  if (this.fx[0] > this.getLength(dv) - 1) {
                     this.fx[0] = 0;
                     this.screenTransition();
                     this.eb = true;
                     this.ed = 1;
                     return var1;
                  }
               } else {
                  if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                     if (!this.gp[0]) {
                        Sound.getInstance().play(10);
                        this.gp[0] = true;
                     }
                  } else {
                     this.gp[0] = false;
                  }

                  if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                     Sound.getInstance().play(11);
                     var2 = this.fx;
                     var10002 = var2[0]++;
                  }
               }
            }
         }
      }

      var1 = true;
      return var1;
   }

   void titleLoad() {
      this.gI = false;
      Sound.getInstance().stop(-1);
      Sound.getInstance().play(1);

      int var1;
      for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
         this.eM[var1] = false;
      }

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.gp[6] = true;
      //jp.co.ponos.library.a.a.b().d();

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      int var2;
      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.fB); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.fB[var1]); ++var2) {
            this.fB[var1][var2] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      this.ag[0].a(this.db[0], "FONT_SYSTEM_BOLD", 30, 1);
      this.resetTextures();

      for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      if (this.af[1].isLoaded()) {
         this.af[1].reset();
      }

      if (!this.af[1].isLoaded()) {
         this.af[1].load(MyUtility.getString(String.format("img%03d.png", 100)), MyUtility.getString(String.format("img%03d.imgcut", 100)));
      }

      if (!this.ae[0].isLoaded()) {
         this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 12)), MyUtility.getString(String.format("img%03d.imgcut", 12)));
      }

      if (!this.ae[1].isLoaded()) {
         this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 11)), MyUtility.getString(String.format("img%03d.imgcut", 11)));
      }

      if (!this.ae[2].isLoaded()) {
         this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
      }

      if (!this.ae[3].isLoaded()) {
         this.ae[3].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
      }

      if (!this.ae[4].isLoaded()) {
         this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
      }

      if (!this.ae[5].isLoaded()) {
         this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 33)), MyUtility.getString(String.format("img%03d.imgcut", 33)));
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 1)), MyUtility.getString(String.format("img%03d.imgcut", 1)));
      }

      if (!this.ae[7].isLoaded()) {
         this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 2)), MyUtility.getString(String.format("img%03d.imgcut", 2)));
      }

      if (!this.ae[8].isLoaded()) {
         this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 19)), MyUtility.getString(String.format("img%03d.imgcut", 19)));
      }

      if (!this.ae[9].isLoaded()) {
         this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 31)), MyUtility.getString(String.format("img%03d.imgcut", 31)));
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
         this.fR[var1] = 0;
      }

      this.fw[0][0] = this.excessWidth / 2 + 289;
      this.fw[0][1] = 341;
      this.fw[0][2] = 381;
      this.fw[0][3] = 88;
      this.fw[1][0] = this.excessWidth / 2 + 289;
      this.fw[1][1] = 433;
      this.fw[1][2] = 381;
      this.fw[1][3] = 88;
      this.fw[2][0] = this.excessWidth / 2 + 660;
      this.fw[2][1] = 30;
      this.fw[2][2] = 150;
      this.fw[2][3] = 150;
      this.fw[5][0] = this.excessWidth + 861;
      this.fw[5][1] = 194;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[6][0] = this.excessWidth + 677;
      this.fw[6][1] = 476;
      this.fw[6][2] = 287;
      this.fw[6][3] = 173;
      if (!this.gL) {
         this.eh[0] = this.getWidth() + 500;
         this.eE[0] = true;

         for(var1 = 0; var1 < this.getLength(this.go); ++var1) {
            for(var2 = 0; var2 < this.getLength(this.go[var1]); ++var2) {
               if (var2 == 0) {
                  this.go[var1][var2] = 229;
               } else if (var2 == 1) {
                  this.go[var1][var2] = 184;
               }
            }
         }

         for(var1 = 0; var1 < this.getLength(this.gC); ++var1) {
            this.gC[var1] = 0;
         }

         this.gC[0] = this.aX + 1;
         if (this.bq[0] >= 48) {
            this.gC[1] = this.aX + 1;
            this.gB[0] = this.aX + 0;
         } else {
            this.gC[1] = 1;
         }

         this.go[0][0] = 328;
         this.go[0][1] = 263;
         this.gy = 200;
         this.eh[2] = -(this.gy * this.gC[0]);
         this.eh[3] = this.gy * 100;
         this.fG[0] = 0;
         this.fG[1] = this.gC[0];
         this.fG[2] = this.gy * 100 + this.eh[0] / this.gy;
         this.fG[3] = 0;
      }

      if (this.gL) {
         this.fQ[0] = this.getLength(ds) - 1;
         this.eh[2] = -(this.gy * this.gC[0] + this.gy * this.fG[3]);
         this.eh[3] = this.gy * 100;
      }

      this.gL = false;
      if (this.eg == 0) {
         this.ee = false;
         this.ef = false;
      } else {
         this.fQ[0] = this.getLength(ds) - 1;
         this.eg = 0;
         this.eh[0] = 0;
         this.eE[0] = false;
         this.fQ[1] = 89;
         this.fG[0] = 0;
      }

      this.fB[0][0] = this.excessWidth / 2 + 280;
      this.fB[0][1] = 80;
      this.fB[0][2] = 88;
      this.fB[0][3] = 88;
      this.fB[1][0] = 0;
      this.fB[1][1] = 0;
      this.fB[1][2] = 0;
      this.fB[1][3] = 0;
      this.fB[2][0] = this.excessWidth / 2 + 535;
      this.fB[2][1] = 276;
      this.fB[2][2] = 106;
      this.fB[2][3] = 88;
      this.fB[3][0] = this.excessWidth / 2 + 248 + 252 - 2;
      this.fB[3][1] = 371;
      this.fB[3][2] = 88;
      this.fB[3][3] = 88;
      this.fB[4][0] = this.excessWidth / 2 + 248 + 356 - 2;
      this.fB[4][1] = 371;
      this.fB[4][2] = 88;
      this.fB[4][3] = 88;
      this.fB[5][0] = this.excessWidth / 2 + 248 + 404;
      this.fB[5][1] = 48;
      this.fB[5][2] = 95;
      this.fB[5][3] = 95;
      this.fB[6][0] = this.excessWidth / 2 + 248 + 40;
      this.fB[6][1] = 456;
      this.fB[6][2] = 381;
      this.fB[6][3] = 88;
      this.fB[7][0] = this.excessWidth / 2 + 248 + 40;
      this.fB[7][1] = 205;
      this.fB[7][2] = 168;
      this.fB[7][3] = 88;
      this.fB[8][0] = this.excessWidth / 2 + 288;
      this.fB[8][1] = 276;
      this.fB[8][2] = 170;
      this.fB[8][3] = 88;
      this.fB[9][0] = this.excessWidth / 2 + 288;
      this.fB[9][1] = 363;
      this.fB[9][2] = 168;
      this.fB[9][3] = 88;
      this.fB[10][0] = this.excessWidth / 2 + 251;
      this.fB[10][1] = 374;
      this.fB[10][2] = 168;
      this.fB[10][3] = 88;
      this.fB[11][0] = this.excessWidth / 2 + 541;
      this.fB[11][1] = 374;
      this.fB[11][2] = 168;
      this.fB[11][3] = 88;
      this.fB[12][0] = this.excessWidth / 2 + 500;
      this.fB[12][1] = 191;
      this.fB[12][2] = 172;
      this.fB[12][3] = 88;

      for(var1 = 0; var1 < 2; ++var1) {
         if (this.bq[var1] >= 48) {
            this.aX = var1 + 1;
            this.bj = 1;
         }
      }

      if (this.aX >= 2) {
         this.aX = 2;
      }

      if (this.aX >= 2) {
         this.bi = (this.aX - 1) * 10 + 10;
      } else {
         this.bi = 10;
      }

      this.hI = false;
   }

   boolean titleProcess() {
      boolean var1 = false;
      int[] var2;
      int var10002;
      int var3;
      if (!this.ee) {
         if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eE[4] && !this.eb) {
            if (this.fG[0] == 0) {
               if (this.fx[0] >= 1) {
                  var2 = this.fx;
                  var10002 = var2[0]++;
                  if (this.fx[0] > this.getLength(dv) - 1) {
                     this.eQ = 0;
                     this.fx[0] = 0;
                     if (this.bq[0] >= 48) {
                        this.eE[1] = true;
                        this.fQ[9] = 0;
                     } else {
                        this.dH = this.bp[this.eQ];
                        this.eb = true;
                        this.ed = 0;
                        this.bg = this.eQ;
                     }
                  }
               } else if (this.fx[1] >= 1) {
                  var2 = this.fx;
                  var10002 = var2[1]++;
                  if (this.fx[1] > this.getLength(dv) - 1) {
                     this.fx[1] = 0;
                     this.ee = true;
                     Sound.getInstance().setVolume(50);
                  }
               } else if (this.fx[6] >= 1) {
                  var2 = this.fx;
                  var10002 = var2[6]++;
                  if (this.fx[6] > this.getLength(dv) - 1) {
                     this.fx[6] = 0;
                     this.screenTransition();
                     this.menuType = 1;
                     this.j = true;
                     return var1;
                  }
               } else {
                  if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                     if (!this.gp[0]) {
                        Sound.getInstance().play(10);
                        this.gp[0] = true;
                     }
                  } else {
                     this.gp[0] = false;
                  }

                  if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                     if (!this.gp[1]) {
                        Sound.getInstance().play(10);
                        this.gp[1] = true;
                     }
                  } else {
                     this.gp[1] = false;
                  }

                  if (this.bq[0] >= 7) {
                     if (this.R() && this.b(this.fw[6][0], this.fw[6][1], this.fw[6][2], this.fw[6][3])) {
                        if (!this.gp[6]) {
                           Sound.getInstance().play(10);
                           this.gp[6] = true;
                        }
                     } else {
                        this.gp[6] = false;
                     }
                  }

                  if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                     var2 = this.fx;
                     var10002 = var2[0]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                     var2 = this.fx;
                     var10002 = var2[1]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fw[6][0], this.fw[6][1], this.fw[6][2], this.fw[6][3]) && this.bq[0] >= 7) {
                     var2 = this.fx;
                     var10002 = var2[6]++;
                     Sound.getInstance().play(11);
                  }
               }
            } else if (this.fG[0] == 1) {
               var2 = this.eh;
               var2[2] += this.ek[0];
               var2 = this.ek;
               var2[0] = (int)((double)var2[0] * 0.9);
               if (this.eh[2] > this.gy / 2 - this.gy * this.gC[0] - 20) {
                  this.eh[2] = this.gy / 2 - this.gy * this.gC[0] - 20;
                  this.eh[3] = this.gy * 100;
                  this.ek[0] = 0;
               } else if (this.eh[2] < -(this.gy * (this.gC[0] - 1) + this.gy * this.gC[1] + this.gy / 2 - 20)) {
                  this.eh[2] = -(this.gy * (this.gC[0] - 1) + this.gy * this.gC[1] + this.gy / 2 - 20);
                  this.ek[0] = 0;
                  this.eh[3] = this.gy * 100;
               }

               if (this.fx[3] == 0 && this.fx[5] == 0 && this.R()) {
                  if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
                     this.ek[0] = 0;
                  } else {
                     this.hI = true;
                  }

                  if (this.hI) {
                     this.ek[0] = this.K() - this.O();
                     if (this.ek[0] != 0 && !this.eE[9]) {
                        this.eE[9] = true;
                     }
                  }
               } else {
                  this.hI = false;
                  if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
                     this.ek[0] = 0;
                     if (this.eh[2] % this.gy != 0) {
                        if (-this.eh[2] % this.gy >= this.gy / 2) {
                           this.eh[2] -= (this.eh[2] % this.gy + this.gy + 4) / 4;
                           if ((this.eh[2] % this.gy + this.gy + 4) / 4 == 0) {
                              this.eh[2] = (this.eh[2] / this.gy - 1) * this.gy;
                           }
                        } else {
                           this.eh[2] -= (this.eh[2] % this.gy - 4) / 4;
                           if ((this.eh[2] % this.gy - 4) / 4 == 0) {
                              this.eh[2] = this.eh[2] / this.gy * this.gy;
                           }
                        }
                     }
                  }

                  if (!this.S()) {
                     this.eE[9] = false;
                  }
               }

               if (this.ek[0] < 0) {
                  if (this.fG[1] != -(this.eh[2] / this.gy)) {
                     Sound.getInstance().play(10);
                  }

                  this.gp[6] = false;
               } else if (this.ek[0] > 0) {
                  if (this.fG[2] != (this.gy * 100 + this.eh[2]) / this.gy) {
                     Sound.getInstance().play(10);
                  }

                  this.gp[6] = false;
               } else if (this.eh[2] % this.gy == 0 && this.ek[0] == 0 && !this.gp[6]) {
                  Sound.getInstance().play(10);
                  this.gp[6] = true;
               }

               if (this.fG[1] != -(this.eh[2] / this.gy)) {
                  this.fG[1] = -(this.eh[2] / this.gy);
               }

               if (this.fG[2] != (this.gy * 100 + this.eh[2]) / this.gy) {
                  this.fG[2] = (this.gy * 100 + this.eh[2]) / this.gy;
               }

               if (-this.eh[2] % this.gy >= this.gy / 2) {
                  if (this.fG[1] + 1 - this.gC[0] != this.fG[3]) {
                     this.fG[3] = this.fG[1] + 1 - this.gC[0];
                  }
               } else if (this.fG[1] - this.gC[0] != this.fG[3]) {
                  this.fG[3] = this.fG[1] - this.gC[0];
               }

               if (!this.eE[9]) {
                  if (this.fx[3] >= 1) {
                     var2 = this.fx;
                     var10002 = var2[3]++;
                     if (this.fx[3] > this.getLength(dv) - 1) {
                        this.fx[3] = 0;
                        if (this.fG[3] <= this.gB[0]) {
                           this.eb = true;
                           this.eQ = this.fG[3];
                           this.dH = this.bp[this.eQ];
                           if (this.eQ == 0) {
                              this.ed = 0;
                           } else if (this.bq[this.eQ] >= 48) {
                              this.ed = 0;
                           } else {
                              this.ed = 1;
                              this.hr = true;
                           }
                        } else if (this.fG[3] - this.gB[0] >= 1) {
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(7);
                           this.eE[3] = true;
                        }
                     }
                  } else if (this.fx[5] >= 1) {
                     var2 = this.fx;
                     var10002 = var2[5]++;
                     if (this.fx[5] > this.getLength(dv) - 1) {
                        this.fx[5] = 0;
                        this.ed = 0;
                        this.eE[1] = true;
                        this.fQ[9] = 1;
                     }
                  } else if (this.fx[4] >= 1) {
                     var2 = this.fx;
                     var10002 = var2[4]++;
                     if (this.fx[4] > this.getLength(dv) - 1) {
                        this.fx[4] = 0;
                        if (!MyUtility.isConnected()) {
                           MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        } else if (this.aW != 0) {
                           jp.co.ponos.library.score.a.b().a("battlecats_score", this.aW);
                        } else {
                           jp.co.ponos.library.score.a.b().a("battlecats_score");
                        }
                     }
                  } else {
                     if (this.eh[2] % this.gy == 0 && this.ek[0] == 0 && this.S() && this.b(this.getWidth() / 2 - 164, 257, 328, 263)) {
                        if (!this.gp[3]) {
                           Sound.getInstance().play(10);
                           this.gp[3] = true;
                        }
                     } else {
                        this.gp[3] = false;
                     }

                     if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
                        if (!this.gp[5]) {
                           Sound.getInstance().play(10);
                           this.gp[5] = true;
                        }
                     } else {
                        this.gp[5] = false;
                     }

                     if (this.fG[3] - this.gB[0] >= 1 && this.eh[2] % this.gy == 0 && this.ek[0] == 0 && this.S() && this.b(this.getWidth() / 2 - 164 + 271 - 40, 428, 68, 68)) {
                        var2 = this.fx;
                        var10002 = var2[4]++;
                     }

                     if (this.fx[4] == 0) {
                        if (this.eh[2] % this.gy == 0 && this.ek[0] == 0 && this.S() && this.b(this.getWidth() / 2 - 164, 257, 328, 263)) {
                           var2 = this.fx;
                           var10002 = var2[3]++;
                           Sound.getInstance().play(11);
                        } else if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
                           var2 = this.fx;
                           var10002 = var2[5]++;
                           Sound.getInstance().play(11);
                        } else if (this.T()) {
                           this.fx[5] = 0;
                           this.ed = 0;
                           this.eE[1] = true;
                           this.fQ[9] = 1;
                        }
                     }
                  }
               }
            }
         }

         int var4;
         if (this.eE[1]) {
            var2 = this.fQ;
            var2[1] -= 8;
            if (this.fQ[9] == 0) {
               if (this.fQ[1] <= 0) {
                  this.fQ[1] = 0;
               }

               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] == 1) {
                  this.eh[0] = 10;
               } else if (this.fQ[4] == 2) {
                  this.eh[0] = 25;
               } else if (this.fQ[4] == 3) {
                  this.eh[0] = 30;
               } else if (this.fQ[4] >= 1) {
                  var2 = this.eh;
                  var2[0] -= this.eh[1];
                  var2 = this.eh;
                  var2[1] += this.eh[1] + 1;
                  if (this.eh[1] >= this.getWidth() + this.getWidth() + 200) {
                     this.eh[0] = this.getWidth() + this.getWidth() + 200;
                     this.eh[1] = 0;
                     if (this.fG[0] == 0) {
                        this.fG[0] = 1;
                     } else if (this.fG[0] == 1) {
                        this.fG[0] = 0;
                     }

                     this.fQ[4] = 0;
                     this.eE[2] = true;
                     this.eE[1] = false;
                     this.fQ[1] = 0;
                     var3 = 0;

                     while(true) {
                        if (var3 >= this.getLength(this.go)) {
                           for(var3 = 0; var3 < this.getLength(this.gC); ++var3) {
                              this.gC[var3] = 0;
                           }

                           this.gC[0] = 2;
                           if (this.bq[0] >= 48) {
                              this.gC[1] = this.aX + 2;
                              this.gB[0] = this.aX + 0;
                           } else {
                              this.gC[1] = 1;
                           }

                           this.go[0][0] = 328;
                           this.go[0][1] = 263;
                           this.gy = 200;
                           this.eh[2] = -(this.gy * this.gC[0] + this.gy * this.bg);
                           this.eh[3] = this.gy * 100;
                           this.fG[1] = this.gC[0] + this.bg;
                           this.fG[2] = this.gy * 100 + this.eh[0] / this.gy;
                           this.fG[3] = 0;
                           this.gp[6] = true;
                           break;
                        }

                        for(var4 = 0; var4 < this.getLength(this.go[var3]); ++var4) {
                           if (var4 == 0) {
                              this.go[var3][var4] = 229;
                           } else if (var4 == 1) {
                              this.go[var3][var4] = 184;
                           }
                        }

                        ++var3;
                     }
                  }
               }
            } else if (this.fQ[9] == 1) {
               if (this.fQ[1] <= 0) {
                  this.fQ[1] = 0;
               }

               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] == 1) {
                  this.eh[0] = -10;
               } else if (this.fQ[4] == 2) {
                  this.eh[0] = -25;
               } else if (this.fQ[4] == 3) {
                  this.eh[0] = -30;
               } else if (this.fQ[4] >= 1) {
                  var2 = this.eh;
                  var2[0] += this.eh[1];
                  var2 = this.eh;
                  var2[1] += this.eh[1] + 1;
                  if (this.eh[1] >= this.getWidth() + this.getWidth() + 200) {
                     this.eh[0] = -this.getWidth() - 200;
                     this.eh[1] = 0;
                     if (this.fG[0] == 0) {
                        this.fG[0] = 1;
                     } else if (this.fG[0] == 1) {
                        this.fG[0] = 0;
                     }

                     this.fQ[4] = 0;
                     this.eE[2] = true;
                     this.eE[1] = false;
                     this.fQ[1] = 0;
                     var3 = 0;

                     while(true) {
                        if (var3 >= this.getLength(this.go)) {
                           for(var3 = 0; var3 < this.getLength(this.gC); ++var3) {
                              this.gC[var3] = 0;
                           }

                           this.gC[0] = 2;
                           if (this.bq[0] >= 48) {
                              this.gC[1] = this.aX + 2;
                              this.gB[0] = this.aX + 0;
                           } else {
                              this.gC[1] = 1;
                           }

                           this.go[0][0] = 328;
                           this.go[0][1] = 263;
                           this.gy = 200;
                           this.eh[2] = -(this.gy * this.gC[0] + this.gy * this.bg);
                           this.eh[3] = this.gy * 100;
                           this.fG[1] = this.gC[0] + this.bg;
                           this.fG[2] = this.gy * 100 + this.eh[0] / this.gy;
                           this.fG[3] = 0;
                           this.gp[6] = true;
                           break;
                        }

                        for(var4 = 0; var4 < this.getLength(this.go[var3]); ++var4) {
                           if (var4 == 0) {
                              this.go[var3][var4] = 229;
                           } else if (var4 == 1) {
                              this.go[var3][var4] = 184;
                           }
                        }

                        ++var3;
                     }
                  }
               }
            }
         }

         if (this.eE[2]) {
            this.eh[0] = (int)((double)this.eh[0] * 0.6);
            if (this.eh[0] == 0) {
               this.eE[2] = false;
            }
         }

         if (this.eE[3]) {
            if (!this.eE[4] && this.fR[0] == 0) {
               var2 = this.fQ;
               var10002 = var2[7]++;
               if (this.fQ[7] >= this.getLength(cu)) {
                  this.fR[0] = 1;
                  this.fQ[7] = 0;
                  this.eE[4] = true;
               }
            }

            this.eh[4] = this.eh[4] * 2 + 1;
            if (this.eh[4] >= this.getWidth()) {
               this.eh[4] = this.getWidth();
            }
         }

         if (this.eE[4]) {
            var2 = this.fQ;
            var10002 = var2[8]++;
            if (this.fQ[8] >= 10) {
               var2 = this.fQ;
               var10002 = var2[7]++;
               if (this.fQ[7] >= this.getLength(cv)) {
                  this.fR[0] = 2;
               }

               if (this.fQ[7] >= 60) {
                  this.eQ = 0;
                  this.eb = true;
                  this.ed = 1;
               }
            }
         }

         if (!this.eb && this.eE[0]) {
            var2 = this.fQ;
            var10002 = var2[0]++;
            if (this.fQ[0] > this.getLength(ds) - 1) {
               this.fQ[0] = this.getLength(ds) - 1;
               this.eh[0] = this.eh[0] * 100 / 150;
               if (this.eh[0] <= 0) {
                  this.eE[0] = false;
               }
            }
         }

         if (!this.eE[0] && !this.eE[1] && !this.eE[2]) {
            var2 = this.fQ;
            var2[1] += 4;
            if (this.fQ[1] >= 89) {
               this.fQ[1] = 89;
            }
         }

         for(var3 = 0; var3 < this.getLength(this.go); ++var3) {
            for(var4 = 0; var4 < this.getLength(this.go[var3]); ++var4) {
               if (var4 == 0) {
                  if (var3 == this.fG[1]) {
                     this.go[var3][var4] = this.eh[2] % this.gy * 100 / this.gy * 99 / 100 + 328;
                     if (this.eh[2] > 0) {
                        this.go[var3][var4] = 328 - this.eh[2] % this.gy * 100 / this.gy * 99 / 100;
                     }
                  } else if (var3 == this.fG[1] + 1) {
                     this.go[var3][var4] = 229 - this.eh[2] % this.gy * 100 / this.gy * 99 / 100;
                  } else {
                     this.go[var3][var4] = 229;
                  }

                  if (this.go[var3][var4] >= 328) {
                     this.go[var3][var4] = 328;
                  } else if (this.go[var3][var4] <= 229) {
                     this.go[var3][var4] = 229;
                  }
               } else if (var4 == 1) {
                  if (var3 == this.fG[1]) {
                     this.go[var3][var4] = this.eh[2] % this.gy * 100 / this.gy * 79 / 100 + 263;
                     if (this.eh[2] > 0) {
                        this.go[var3][var4] = 263 - this.eh[2] % this.gy * 100 / this.gy * 79 / 100;
                     }
                  } else if (var3 == this.fG[1] + 1) {
                     this.go[var3][var4] = 184 - this.eh[2] % this.gy * 100 / this.gy * 79 / 100;
                  } else {
                     this.go[var3][var4] = 184;
                  }

                  if (this.go[var3][var4] >= 263) {
                     this.go[var3][var4] = 263;
                  } else if (this.go[var3][var4] <= 184) {
                     this.go[var3][var4] = 184;
                  }
               }
            }
         }

         var2 = this.fQ;
         var10002 = var2[6]++;
      } else if (this.ee && !this.eb) {
         if (this.fC[1] >= 1) {
            var2 = this.fC;
            var10002 = var2[1]++;
            if (this.fC[1] > this.getLength(dv) - 1) {
               this.fC[1] = 0;
               if (!MyUtility.isConnected()) {
                  MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
               } else {
                  this.t = true;
                  MyUtility.getInstance().addProgressDialog(MyUtility.getString("connecting"));
                  MyUtility.getInstance().addAlertAppliPage("facebook", this.r);
               }
            }
         } else if (this.fC[2] >= 1) {
            var2 = this.fC;
            var10002 = var2[2]++;
            if (this.fC[2] > this.getLength(dv) - 1) {
               this.fC[2] = 0;
               //if (!jp.co.ponos.library.c.a.b().e()) {
               //   jp.co.ponos.library.c.a.b().c();
               //} else {
               //   jp.co.ponos.library.c.a.b().d();
               //}
            }
         } else if (this.fC[3] >= 1) {
            var2 = this.fC;
            var10002 = var2[3]++;
            if (this.fC[3] > this.getLength(dv) - 1) {
               this.fC[3] = 0;
               if (!Sound.getInstance().isMutedBGM()) {
                  Sound.getInstance().muteBGM(true);
               } else {
                  Sound.getInstance().muteBGM(false);
                  Sound.getInstance().reloadSounds();
               }
            }
         } else if (this.fC[4] >= 1) {
            var2 = this.fC;
            var10002 = var2[4]++;
            if (this.fC[4] > this.getLength(dv) - 1) {
               this.fC[4] = 0;
               if (!Sound.getInstance().isMutedSE()) {
                  Sound.getInstance().muteSE(true);
               } else {
                  Sound.getInstance().muteSE(false);
               }
            }
         } else if (this.fC[5] >= 1) {
            var2 = this.fC;
            var10002 = var2[5]++;
            if (this.fC[5] > this.getLength(dv) - 1) {
               this.fC[5] = 0;
               this.ee = false;
               this.ef = false;
               Sound.getInstance().setVolume(100);
            }
         } else if (this.fC[6] >= 1) {
            var2 = this.fC;
            var10002 = var2[6]++;
            if (this.fC[6] > this.getLength(dv) - 1) {
               this.fC[6] = 0;
               this.screenTransition();
               this.j = true;
               this.menuType = 3;
               return var1;
            }
         } else if (this.fC[7] >= 1) {
            var2 = this.fC;
            var10002 = var2[7]++;
            if (this.fC[7] > this.getLength(dv) - 1) {
               this.fC[7] = 0;
               this.screenTransition();
               this.j = true;
               this.menuType = 2;
               return var1;
            }
         } else if (this.fC[8] >= 1) {
            var2 = this.fC;
            var10002 = var2[8]++;
            if (this.fC[8] > this.getLength(dv) - 1) {
               this.fC[8] = 0;
               this.eg = 1;
               this.eb = true;
               this.ed = 0;
            }
         } else if (this.fC[9] >= 1) {
            var2 = this.fC;
            var10002 = var2[9]++;
            if (this.fC[9] > this.getLength(dv) - 1) {
               this.fC[9] = 0;
               if (this.bj != 0) {
                  this.eg = 2;
                  this.eb = true;
                  this.ed = 0;
               }
            }
         } else if (this.fC[12] >= 1) {
            var2 = this.fC;
            var10002 = var2[12]++;
            if (this.fC[12] > this.getLength(dv) - 1) {
               this.fC[12] = 0;
               if (!MyUtility.isConnected()) {
                  MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
               } else {
                  this.t = true;
                  this.o = true;
                  MyUtility.getInstance().addProgressDialog(MyUtility.getString("connecting"));
                  MyUtility.getInstance().addAlertAppliPage("facebook", this.r);
               }
            }
         } else {
            if (!this.ef) {
               for(var3 = 0; var3 < this.getLength(this.fB); ++var3) {
                  if (var3 != 0 && var3 != 1 && (var3 != 2) && var3 != 5 && (var3 != 9 || this.bj != 0) && var3 != 10 && var3 != 11) {
                     if (this.R() && this.b(this.fB[var3][0], this.fB[var3][1], this.fB[var3][2], this.fB[var3][3])) {
                        if (!this.gp[var3]) {
                           Sound.getInstance().play(10);
                           this.gp[var3] = true;
                        }
                     } else {
                        this.gp[var3] = false;
                     }
                  }
               }
            } else {
               if (this.R() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3])) {
                  if (!this.gp[10]) {
                     Sound.getInstance().play(10);
                     this.gp[10] = true;
                  }
               } else {
                  this.gp[10] = false;
               }

               if (this.R() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3])) {
                  if (!this.gp[11]) {
                     Sound.getInstance().play(10);
                     this.gp[11] = true;
                  }
               } else {
                  this.gp[11] = false;
               }
            }

            if (this.R() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
               if (!this.gp[5]) {
                  Sound.getInstance().play(10);
                  this.gp[5] = true;
               }
            } else {
               this.gp[5] = false;
            }

            if (!this.ef) {
               if ((!this.S() || !this.b(this.fB[0][0], this.fB[0][1], this.fB[0][2], this.fB[0][3])) && (!this.S() || !this.b(this.fB[1][0], this.fB[1][1], this.fB[1][2], this.fB[1][3]))) {
                  if (this.S() && this.b(this.fB[2][0], this.fB[2][1], this.fB[2][2], this.fB[2][3])) {
                     //if (!jp.co.ponos.library.c.a.b().f()) {
                     //   var2 = this.fC;
                     //   var10002 = var2[2]++;
                      //  jp.co.ponos.library.b.y.b().c(11);
                     //}
                  } else if (this.S() && this.b(this.fB[3][0], this.fB[3][1], this.fB[3][2], this.fB[3][3])) {
                     var2 = this.fC;
                     var10002 = var2[3]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fB[4][0], this.fB[4][1], this.fB[4][2], this.fB[4][3])) {
                     var2 = this.fC;
                     var10002 = var2[4]++;
                  } else if (this.S() && this.b(this.fB[6][0], this.fB[6][1], this.fB[6][2], this.fB[6][3])) {
                     var2 = this.fC;
                     var10002 = var2[6]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fB[7][0], this.fB[7][1], this.fB[7][2], this.fB[7][3])) {
                     var2 = this.fC;
                     var10002 = var2[7]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fB[8][0], this.fB[8][1], this.fB[8][2], this.fB[8][3])) {
                     var2 = this.fC;
                     var10002 = var2[8]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fB[9][0], this.fB[9][1], this.fB[9][2], this.fB[9][3]) && this.bj != 0) {
                     if (this.bj != 0) {
                        var2 = this.fC;
                        var10002 = var2[9]++;
                        Sound.getInstance().play(11);
                     }
                  } else if (this.S() && this.b(this.fB[12][0], this.fB[12][1], this.fB[12][2], this.fB[12][3])) {
                     var2 = this.fC;
                     var10002 = var2[12]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
                     var2 = this.fC;
                     var10002 = var2[5]++;
                     Sound.getInstance().play(11);
                  } else if (this.T()) {
                     if (!this.ef) {
                        this.ee = false;
                        this.ef = false;
                        Sound.getInstance().setVolume(100);
                     } else {
                        this.fC[11] = 0;
                        this.ef = false;
                     }
                  }
               }
            } else if (this.S() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3])) {
               var2 = this.fC;
               var10002 = var2[10]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3])) {
               var2 = this.fC;
               var10002 = var2[11]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
               var2 = this.fC;
               var10002 = var2[5]++;
               Sound.getInstance().play(11);
            } else if (this.T()) {
               if (!this.ef) {
                  this.ee = false;
                  this.ef = false;
                  Sound.getInstance().setVolume(100);
               } else {
                  this.fC[11] = 0;
                  this.ef = false;
               }
            }
         }
      }

      var2 = this.fQ;
      var10002 = var2[5]++;
      var1 = true;
      return var1;
   }

   void treasureLoad() {
      //jp.co.ponos.library.a.a.b().f();
      this.resetTextures();

      int var1;
      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.gp[3] = true;

      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(int var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      this.fR[0] = 0;
      this.U();

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      if (this.gQ == 0) {
         this.fQ[0] = this.getLength(cu) - 1;
      }

      this.fw[1][0] = 36;
      this.fw[1][1] = 171;
      this.fw[1][2] = 88;
      this.fw[1][3] = 97;
      this.fw[2][0] = this.excessWidth + 836;
      this.fw[2][1] = 171;
      this.fw[2][2] = 88;
      this.fw[2][3] = 97;
      if (this.gQ == 0) {
         for(var1 = 0; var1 < this.getLength(this.fq); ++var1) {
            this.fq[var1] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
         this.ei[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gC); ++var1) {
         this.gC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      this.gC[0] = 0;
      this.gC[1] = 11;
      this.gC[2] = 0;
      this.gy = this.getWidth();
      this.eh[0] = -(this.gy * this.gC[0]);
      this.fr = -1;
      this.h(this.fq[2]);
      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;

      for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
         this.gm[var1] = 0;
      }

      this.gm[1] = 297;

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      if (this.ae[6].isLoaded()) {
         this.ae[6].reset();
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 17)), MyUtility.getString(String.format("img%03d.imgcut", 17)));
      }

      if (this.ae[8].isLoaded()) {
         this.ae[8].reset();
      }

      if (!this.ae[8].isLoaded()) {
         this.ae[8].load(MyUtility.getString(String.format("ot%03d_c.png", 11)), MyUtility.getString(String.format("ot%03d_c.imgcut", 11)));
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      this.eE[0] = true;
      this.hI = false;
   }

   boolean treasureProcess() {
      boolean var1 = false;
      int[] var2 = this.fQ;
      int var10002 = var2[3]++;
      if (!this.eE[0] && !this.eE[1] && !this.eb && !this.eE[13]) {
         var2 = this.eh;
         var2[0] += this.ek[0];
         var2 = this.eh;
         var2[1] -= this.ek[0];
         var2 = this.ek;
         var2[0] = (int)((double)var2[0] * 0.9);
         if (this.eh[0] >= this.gy / 2 - 20) {
            this.eh[0] = this.gy / 2 - 20;
            this.eh[1] = this.gy * 100;
            this.ek[0] = 0;
         } else if (this.eh[0] < -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) - this.gy + this.gy / 2 - 20)) {
            this.eh[0] = -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) - this.gy + this.gy / 2 - 20);
            this.ek[0] = 0;
            this.eh[1] = this.gy * 100;
         }

         if (this.R() && !this.eE[5]) {
            if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
               this.ek[0] = 0;
            } else {
               this.hI = true;
            }

            if (this.hI) {
               this.ek[0] = this.K() - this.O();
               if (this.ek[0] != 0 && !this.eE[9]) {
                  this.eE[9] = true;
               }
            }
         } else {
            this.hI = false;
            if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
               this.ek[0] = 0;
               if (this.eh[0] % this.gy != 0) {
                  if (-this.eh[0] >= 0) {
                     if (-this.eh[0] % this.gy >= this.gy / 2) {
                        this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                        if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                           this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                        }
                     } else {
                        this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                        if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                           this.eh[0] = this.eh[0] / this.gy * this.gy;
                        }
                     }
                  } else if (-this.eh[0] % this.gy >= this.gy / 2) {
                     this.eh[0] -= (this.eh[0] % this.gy + this.gy - 4) / 4;
                     if ((this.eh[0] % this.gy + this.gy - 4) / 4 == 0) {
                        this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                     }
                  } else {
                     this.eh[0] -= (this.eh[0] % this.gy + 4) / 4;
                     if ((this.eh[0] % this.gy + 4) / 4 == 0) {
                        this.eh[0] = this.eh[0] / this.gy * this.gy;
                     }
                  }
               }

               if (!this.S()) {
                  this.eE[9] = false;
               }
            }
         }

         if (this.ek[0] < 0) {
            if (this.fq[0] != -(this.eh[0] / this.gy)) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.ek[0] > 0) {
            if (this.fq[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[3]) {
            Sound.getInstance().play(10);
            this.gp[3] = true;
         }

         if (this.fq[0] != -(this.eh[0] / this.gy) && -(this.eh[0] / this.gy) >= 0) {
            this.fq[0] = -(this.eh[0] / this.gy);
         }

         if (this.fq[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
            this.fq[1] = (this.gy * 100 + this.eh[0]) / this.gy;
         }

         if (-(this.eh[0] - this.gy / 2) / this.gy != this.fq[2]) {
            this.fq[2] = -(this.eh[0] - this.gy / 2) / this.gy;
            this.fr = -1;
            this.fq[3] = 0;
         }

         if (!this.gu && !this.eb && !this.eE[9]) {
            if (this.fx[5] >= 1) {
               var2 = this.fx;
               var10002 = var2[5]++;
               if (this.fx[5] > this.getLength(dv) - 1) {
                  this.fx[5] = 0;
                  this.eE[1] = true;
               }
            } else if (this.fx[13] >= 1) {
               var2 = this.fx;
               var10002 = var2[13]++;
               if (this.fx[13] > this.getLength(dv) - 1) {
                  this.fx[13] = 0;
                  if (this.be >= 1) {
                     this.eE[13] = true;
                  }
               }
            } else {
               int var3;
               if (this.fx[14] >= 1) {
                  var2 = this.fx;
                  var10002 = var2[14]++;
                  if (this.fx[14] > this.getLength(dv) - 1) {
                     this.fx[14] = 0;
                     if (this.bB[8] == 0) {
                        this.screenTransition();
                        this.bB[8] = 1;
                        this.gU = true;

                        for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                           this.gV[var3] = 0;
                        }

                        Sound.getInstance().setVolume(50);
                        return var1;
                     } else {
                        if (this.aL >= 900000) {
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 10000;
                        } else {
                           this.screenTransition();
                           this.menuType = 0;
                           this.j = true;
                        }

                        return var1;
                     }
                  }
               } else {
                  if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
                     if (!this.gp[5]) {
                        Sound.getInstance().play(10);
                        this.gp[5] = true;
                     }
                  } else {
                     this.gp[5] = false;
                  }

                  if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
                     var2 = this.fx;
                     var10002 = var2[5]++;
                     Sound.getInstance().play(11);
                  } else if (this.T()) {
                     this.eE[1] = true;
                  } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                     if (this.bf >= 1) {
                        Sound.getInstance().play(11);
                        var2 = this.fx;
                        var10002 = var2[14]++;
                     }
                  } else if (this.R() && !this.eE[9]) {
                     for(var3 = 0; var3 < cy[this.fq[2]]; ++var3) {
                        if (this.b(this.getWidth() / 2 - 254 + var3 % 4 * 127 + 8, var3 / 4 * 90 + 342 - 6, 112, 88) && this.fq[3] != var3) {
                           Sound.getInstance().play(10);
                           this.fq[3] = var3;
                           this.eE[5] = true;
                        }
                     }
                  } else {
                     this.eE[5] = false;
                  }

                  if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                     if (!this.gp[14]) {
                        this.gp[14] = true;
                        Sound.getInstance().play(10);
                     }
                  } else {
                     this.gp[14] = false;
                  }
               }
            }
         }
      }

      if (this.eE[0]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[0] = this.gm[0] * 2 + 1;
         if (this.gm[0] >= 297) {
            this.gm[0] = 297;
            this.gm[1] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = this.getWidth();
            if (this.gm[1] <= 0) {
               this.eE[0] = false;
               this.fQ[2] = 0;
               this.gQ = 0;
            }
         } else {
            this.fP = fM[this.fQ[2]];
         }
      } else if (this.eE[1]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[1] = this.gm[1] * 2 + 1;
         if (this.gm[1] >= 297) {
            this.gm[1] = 297;
            this.gm[0] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = 0;
            if (this.gm[0] <= 0) {
               this.fQ[2] = 0;
               this.screenTransition();
               this.screen = 5;
               this.fF = -1;
               this.eE[1] = false;
               return var1;
            }
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }
      }

      var2 = this.fQ;
      var10002 = var2[4]++;
      var2 = this.fQ;
      var10002 = var2[0]--;
      if (this.fQ[0] <= 0) {
         this.fQ[0] = 0;
      }

      if (this.eE[13]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fP = 0;
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }

         if (this.fQ[2] > this.getLength(fM)) {
            this.fP = 0;
            this.fQ[2] = 0;
            this.screenTransition();
            this.screen = 999;
            this.fF = -1;
            this.gQ = 4;
            return var1;
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && !this.gI && !this.eE[9]) {
         if ((this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
            this.eE[10] = true;
         } else if (this.fx[5] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }
      } else if (this.fx[5] == 0 && !this.eE[1]) {
         this.eE[10] = false;
      }

      this.h(this.fq[2]);
      var1 = true;
      return var1;
   }

   void G() {
      int[] var1 = this.gV;
      int var10002 = var1[0]++;
      if (this.gV[0] == 1) {
         Sound.getInstance().play(42);
      }

      var1 = this.gV;
      var10002 = var1[3]++;
      if (this.bB[4] == 1) {
         float[] var3 = this.hb;
         var3[0] += 0.5F;
      }

      if (this.bB[3] == 1) {
         if (this.gV[1] >= 20) {
            var1 = this.gV;
            var1[2] += 4;
            if (this.gV[2] >= 100) {
               this.gV[2] = 100;
               if (this.gW == 0) {
                  if (!this.eE[0]) {
                     this.el[0] = 1;
                     this.eD[6] = 1;
                  } else if (this.el[0] == 1) {
                     if (this.eD[6] == 0) {
                        this.el[0] = -1;
                     }
                  } else if (this.el[0] == -1 && this.eD[6] == 1) {
                     this.el[0] = 1;
                  }

                  this.ek[0] = 0;
                  this.eE[0] = true;
                  this.eE[2] = true;
               }
            }
         }

         if (this.gW == 1) {
            if (this.R()) {
               if (!this.eE[2] && !this.eE[3]) {
                  this.ei[0] = this.L() - this.N();
                  this.ej[0] = (int) aMath.atan2((float)(this.L() - this.N()), (float)(this.K() - this.M()));
                  if (this.gO && !this.eE[4]) {
                     if (this.ei[0] <= -60 && this.ej[0] >= 225 && this.ej[0] <= 315) {
                        this.ek[0] = 0;
                        if (!this.eE[0]) {
                           this.el[0] = 1;
                           this.eD[6] = 0;
                        } else if (this.el[0] == 1) {
                           if (this.eD[6] == 1) {
                              this.el[0] = -1;
                           }
                        } else if (this.el[0] == -1 && this.eD[6] == 0) {
                           this.el[0] = 1;
                        }

                        this.eE[0] = true;
                        this.eE[2] = true;
                     } else if (this.ei[0] >= 60 && this.ej[0] >= 45 && this.ej[0] <= 135) {
                        if (!this.eE[0]) {
                           this.el[0] = 1;
                           this.eD[6] = 1;
                        } else if (this.el[0] == 1) {
                           if (this.eD[6] == 0) {
                              this.el[0] = -1;
                           }
                        } else if (this.el[0] == -1 && this.eD[6] == 1) {
                           this.el[0] = 1;
                        }

                        this.ek[0] = 0;
                        this.eE[0] = true;
                        this.eE[2] = true;
                     }
                  }
               }
            } else {
               this.eE[2] = false;
               this.eE[4] = false;
            }
         }

         this.f(this.eD[6]);
         if (this.gW == 0) {
            if (!this.eE[0] && this.gV[2] >= 100) {
               this.gV[2] = 0;
            }
         } else if (this.gV[2] >= 100) {
            this.gV[2] = 0;
         }
      } else {
         var1 = this.gV;
         var10002 = var1[2]++;
      }

      int var2;
      if (this.gV[0] == 1) {
         this.gX[0][0] = this.excessWidth / 2 + 615;
         this.gX[0][1] = 380;
         this.gX[0][2] = 168;
         this.gX[0][3] = 88;
         this.gt[0] = false;
         this.gZ[0] = 0;

         for(var2 = 0; var2 < this.getLength(this.ai); ++var2) {
            if (this.ai[var2].isLoaded()) {
               this.ai[var2].reset();
            }
         }

         if (this.hH == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.cW[this.gW + 1][var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.cW[this.gW + 1][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[0] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[0][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[0][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[1] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[1][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[1][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[2] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[2][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[2][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[3] == 1) {
            this.gX[0][1] = 230;

            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[3][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[3][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[4] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[4][var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[4][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[5] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[5][var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[5][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[6] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[6][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[6][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[7] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[7][var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[7][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[8] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[8][this.gW * 4 + var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[8][this.gW * 4 + var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.bB[9] == 1) {
            for(var2 = 0; var2 < 4; ++var2) {
               if (!this.ai[var2].isLoaded()) {
                  if (aString.equals(this.df[9][var2], "＠")) {
                     break;
                  }

                  this.ai[var2].a(this.df[9][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }
      }

      if (this.gV[0] > this.getLength(eO) - 1) {
         this.gV[0] = this.getLength(eO) - 1;
         var1 = this.gV;
         var10002 = var1[1]++;
      }

      if (this.gV[1] >= 20) {
         if (this.gZ[0] >= 1) {
            var1 = this.gZ;
            var10002 = var1[0]++;
            if (this.gZ[0] > this.getLength(dv) - 1) {
               this.gZ[0] = 0;

               for(var2 = 0; var2 < this.getLength(this.gV); ++var2) {
                  this.gV[var2] = 0;
               }

               for(var2 = 0; var2 < this.getLength(this.ai); ++var2) {
                  if (this.ai[var2].isLoaded()) {
                     this.ai[var2].reset();
                  }
               }

               if (this.hH == 1) {
                  if (this.gW == 0) {
                     this.screenTransition();
                     ++this.gW;
                     this.gV[0] = 0;
                     this.gV[1] = 0;
                     this.gV[3] = 0;
                  } else {
                     this.gU = false;
                     if (this.cj[0] == 0) {
                        Sound.getInstance().setVolume(100);
                     }

                     this.gW = 0;
                     this.hH = 2;
                  }
               } else if (this.bB[0] == 1) {
                  if (this.gW == 0) {
                     this.screenTransition();
                     ++this.gW;
                     this.gV[0] = 0;
                     this.gV[1] = 0;
                     this.gV[3] = 0;
                  } else {
                     this.bB[0] = 2;
                     this.gU = false;
                     if (this.cj[0] == 0) {
                        Sound.getInstance().setVolume(100);
                     }

                     this.gW = 0;
                  }
               } else if (this.bB[1] == 1) {
                  if (this.gW == 0) {
                     ++this.gW;
                     this.gV[0] = 0;
                     this.gV[1] = 0;
                     this.gV[3] = 0;
                  } else {
                     this.bB[1] = 2;
                     this.gU = false;
                     if (this.cj[0] == 0) {
                        Sound.getInstance().setVolume(100);
                     }

                     this.gW = 0;
                  }
               } else if (this.bB[2] == 1) {
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }

                  this.bB[2] = 2;
               } else if (this.bB[3] == 1) {
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }

                  this.bB[3] = 2;
               } else if (this.bB[4] == 1) {
                  this.bB[4] = 2;
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }
               } else if (this.bB[5] == 1) {
                  this.bB[5] = 2;
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }
               } else if (this.bB[6] == 1) {
                  if (this.gW == 0) {
                     this.screenTransition();
                     ++this.gW;
                     this.gV[0] = 0;
                     this.gV[1] = 0;
                     this.gV[3] = 0;
                  } else {
                     this.gU = false;
                     if (this.cj[0] == 0) {
                        Sound.getInstance().setVolume(100);
                     }

                     this.gW = 0;
                     this.bB[6] = 2;
                  }
               } else if (this.bB[7] == 1) {
                  this.bB[7] = 2;
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }
               } else if (this.bB[8] == 1) {
                  if (this.gW == 0) {
                     this.screenTransition();
                     ++this.gW;
                     this.gV[0] = 0;
                     this.gV[1] = 0;
                     this.gV[3] = 0;
                  } else {
                     this.gW = 0;
                     this.gU = false;
                     if (this.cj[0] == 0) {
                        Sound.getInstance().setVolume(100);
                     }

                     this.bB[8] = 2;
                  }
               } else if (this.bB[9] == 1) {
                  this.bB[9] = 2;
                  this.hc[28] = this.gV[2];
                  this.gU = false;
                  if (this.cj[0] == 0) {
                     Sound.getInstance().setVolume(100);
                  }
               }
            }
         } else {
            if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3])) {
               if (!this.gt[0]) {
                  this.gt[0] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gt[0] = false;
            }

            if (this.S() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3])) {
               var1 = this.gZ;
               var10002 = var1[0]++;
               Sound.getInstance().play(11);
            }
         }
      }

   }

   void equipLoad() {
      this.ct = 0;

      int var1;
      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.gp[0] = true;

      for(var1 = 0; var1 < 10; ++var1) {
         if (this.bk[var1] - 2 <= -1) {
            this.eV[var1] = 0;
         } else {
            this.eV[var1] = this.bw[this.bk[var1] - 2];
         }
      }

      //jp.co.ponos.library.a.a.b().f();

      int var4;
      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(var4 = 0; var4 < this.getLength(this.fw[var1]); ++var4) {
            this.fw[var1][var4] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.go); ++var1) {
         for(var4 = 0; var4 < this.getLength(this.go[var1]); ++var4) {
            if (var4 == 0) {
               this.go[var1][var4] = 229;
            } else if (var4 == 1) {
               this.go[var1][var4] = 184;
            }
         }
      }

      this.go[0][0] = 328;
      this.go[0][1] = 263;

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
         this.ei[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.bK); ++var1) {
         this.bK[var1] = -1;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      this.bC[0] = 1;
      if (!this.gF[0]) {
         for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
            this.gm[var1] = 0;
         }

         this.gm[1] = 297;
         this.fR[0] = 0;

         for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
            this.fQ[var1] = 0;
         }

         if (this.gQ == 0) {
            this.fQ[0] = this.getLength(cu) - 1;
         }

         for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
            this.eE[var1] = false;
         }

         this.eE[0] = true;

         for(var1 = 0; var1 < this.getLength(this.ff); ++var1) {
            this.ff[var1] = 0;
         }
      } else {
         this.gF[1] = true;
         if (this.ff[2] + this.ff[5] <= -1) {
            this.ff[3] = this.gE[-(this.ff[2] + this.ff[5]) - 1];
            this.bC[this.gE[-(this.ff[2] + this.ff[5]) - 1]] = 1;
         } else if (this.ff[2] + this.ff[5] - (this.gC[1] + 1) >= 0) {
            this.ff[3] = this.gE[this.ff[2] + this.ff[5] - this.gC[1] - 1];
            this.bC[this.gE[this.ff[2] + this.ff[5] - this.gC[1] - 1]] = 1;
         }

         this.eE[11] = false;
         this.ff[5] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.bL); ++var1) {
         this.bL[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.bL); ++var1) {
         if (this.bq[this.bJ[var1][15]] >= this.bJ[var1][0] && this.bu[var1] != 0) {
            this.bL[var1] = this.bJ[var1][13];
         }
      }

      int var2;
      for(var1 = 0; var1 < this.getLength(this.bL); ++var1) {
         for(var4 = this.getLength(this.bL) - 1; var4 > var1; --var4) {
            if (this.bL[var4] < this.bL[var4 - 1]) {
               var2 = this.bL[var4];
               this.bL[var4] = this.bL[var4 - 1];
               this.bL[var4 - 1] = var2;
            }
         }
      }

      var1 = 0;
      var2 = -1;
      int var3 = 0;

      int var9;
      for(var4 = 0; var3 < this.getLength(this.bL); var2 = var9) {
         int var7 = var4;
         int var8 = var1;
         var9 = var2;
         if (this.bL[var3] > var2) {
            var9 = this.bL[var3];
            var2 = var4;
            if (this.ff[3] != this.bL[var3]) {
               if (this.gQ == 0) {
                  this.gE[var4] = this.bL[var3];
               }

               var2 = var4 + 1;
            }

            var8 = var1 + 1;
            var7 = var2;
         }

         ++var3;
         var4 = var7;
         var1 = var8;
      }

      if (this.ff[3] >= 1) {
         var1 = 2;
      }

      this.gC[0] = var1;
      this.gC[2] = var1 - 1;
      this.gy = 200;

      for(var1 = 0; var1 < 10; ++var1) {
         if (this.ak[var1].isLoaded()) {
            this.ak[var1].reset();
         }
      }

      this.resetTextures();
      this.eh[0] = -(this.gy * this.gC[0]);
      this.ff[0] = this.gC[0];
      this.ff[2] = 0;
      this.ff[1] = this.gy * 100 + this.eh[0] / this.gy;
      if (this.gQ >= 1) {
         var4 = 0;

         for(var1 = 0; var1 < this.getLength(this.ff); ++var1) {
            this.ff[var1] = this.gT[var1];
            var4 = var1 + 1;
         }

         this.eh[0] = this.gT[var4];
      }

      for(var1 = 0; var1 < this.getLength(this.gA); ++var1) {
         this.gA[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      for(var1 = 0; var1 < 26; ++var1) {
         if (this.bJ[var1][13] == this.ff[3] && this.bq[this.bJ[var1][15]] >= this.bJ[var1][0] && this.bu[var1] != 0) {
            for(var4 = 0; var4 < this.getLength(this.bK); ++var4) {
               if (this.bK[var4] == -1) {
                  this.bK[var4] = var1;
                  break;
               }
            }
         }
      }

      for(var1 = 0; var1 < this.getLength(this.bK) - 1; ++var1) {
         for(var4 = this.getLength(this.bK) - 1; var4 > var1; --var4) {
            if (this.bK[var4] != -1 && this.bK[var4 - 1] != -1 && this.bJ[this.bK[var4]][14] < this.bJ[this.bK[var4 - 1]][14]) {
               var2 = this.bK[var4];
               this.bK[var4] = this.bK[var4 - 1];
               this.bK[var4 - 1] = var2;
            }
         }
      }

      var4 = 0;

      for(var1 = 0; var1 < this.getLength(this.bK); ++var1) {
         if (this.bK[var1] != -1) {
            if (this.bw[this.bK[var1]] == 0) {
               this.ag[var4].a(this.cT[this.bK[var1]][0][0], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.bw[this.bK[var1]] == 1) {
               this.ag[var4].a(this.cT[this.bK[var1]][1][0], "FONT_SYSTEM_BOLD", 30, 1);
            }

            this.gA[0] = var4 + 1;
            this.gC[1] = var4++;
         }
      }

      int[] var5 = this.gA;
      int[] var6 = this.gA;
      var1 = this.gA[0];
      var6[1] = var1;
      var5[2] = var1;

      for(var1 = this.gA[2]; var1 < this.getLength(this.cD) + this.gA[2]; ++var1) {
         this.ag[var1].a(this.cD[var1 - this.gA[2]], "FONT_SYSTEM_BOLD", 30, 1);
         this.gA[3] = var1 + 1;
      }

      for(var4 = this.gA[3]; var4 < this.gA[3] + 3; var4 = var1 + 1) {
         if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
            if (this.bw[this.bK[this.ff[2]]] == 0) {
               var1 = var4;
               if (!this.ag[var4].isLoaded()) {
                  this.ag[var4].a(this.cT[this.bK[this.ff[2]]][0][var4 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  var1 = var4;
               }
            } else {
               var1 = var4;
               if (this.bw[this.bK[this.ff[2]]] == 1) {
                  var1 = var4;
                  if (!this.ag[var4].isLoaded()) {
                     this.ag[var4].a(this.cT[this.bK[this.ff[2]]][1][var4 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     var1 = var4;
                  }
               }
            }
         } else if (this.ff[3] == 0) {
            var4 = this.gA[3];

            while(true) {
               var1 = var4;
               if (var4 >= this.gA[3] + 3) {
                  break;
               }

               this.ag[var4].a(this.dp[0][var4 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               ++var4;
            }
         } else {
            var4 = this.gA[3];

            while(true) {
               var1 = var4;
               if (var4 >= this.gA[3] + 3) {
                  break;
               }

               this.ag[var4].a(this.dp[1][var4 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               ++var4;
            }
         }

         this.gA[4] = var1 + 1;
      }

      if (!this.ag[this.gA[4]].isLoaded()) {
         if (this.ff[3] == 0) {
            this.ag[this.gA[4]].a(this.cY[0], "FONT_SYSTEM_BOLD", 30, 1);
         } else {
            this.ag[this.gA[4]].a(this.cY[5], "FONT_SYSTEM_BOLD", 30, 1);
         }
      }

      for(var1 = 0; var1 < 10; ++var1) {
         if (!this.ak[var1].isLoaded()) {
            if (this.bk[var1] == -1) {
               this.ak[var1].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
            } else if (this.eV[var1] == 0) {
               this.ak[var1].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var1] - 2, 0)));
            } else if (this.eV[var1] == 1) {
               this.ak[var1].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var1] - 2, 0)));
            }
         }
      }

      if (this.ae[6].isLoaded()) {
         this.ae[6].reset();
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
      }

      if (this.ae[7].isLoaded()) {
         this.ae[7].reset();
      }

      if (!this.ae[7].isLoaded()) {
         this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 29)), MyUtility.getString(String.format("img%03d.imgcut", 29)));
      }

      if (this.ff[3] == 0) {
         if (this.ae[8].isLoaded()) {
            this.ae[8].reset();
         }

         if (!this.ae[8].isLoaded()) {
            this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 23)), MyUtility.getString(String.format("img%03d.imgcut", 23)));
         }
      } else if (this.ff[3] >= 1) {
         if (this.ae[8].isLoaded()) {
            this.ae[8].reset();
         }

         if (!this.ae[8].isLoaded()) {
            this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 27)), MyUtility.getString(String.format("img%03d.imgcut", 27)));
         }
      }

      if (this.ae[9].isLoaded()) {
         this.ae[9].reset();
      }

      if (!this.ae[9].isLoaded()) {
         this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 28)), MyUtility.getString(String.format("img%03d.imgcut", 28)));
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].reset();
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
      }

      for(var1 = 0; var1 < this.gC[1] + 1; ++var1) {
         if (this.ae[var1 + 11].isLoaded()) {
            this.ae[var1 + 11].reset();
         }

         if (!this.ae[var1 + 11].isLoaded()) {
            if (this.bw[this.bK[var1]] == 0) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[var1])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[var1])));
            } else {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[var1])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[var1])));
            }
         }
      }

      this.fh = 0;
      this.fi = 0;

      for(var1 = 0; var1 < this.getLength(this.fj); ++var1) {
         for(var4 = 0; var4 < this.getLength(this.fj[var1]); ++var4) {
            this.fj[var1][var4] = 0;
         }
      }

      this.fi = 0;
      this.fl = 0;
      this.fm = 0;
      this.fn = false;

      for(var1 = 0; var1 < this.getLength(this.fo); ++var1) {
         this.fo[var1] = 0;
      }

      for(var1 = 0; var1 > this.getLength(this.fp); ++var1) {
         this.fp[var1] = 0;
      }

      for(var1 = 0; var1 < 2; ++var1) {
         for(var4 = 0; var4 < 5; ++var4) {
            this.fg[var1 * 5 + var4][0] = this.excessWidth / 2 + 176 + var4 * 146;
            this.fg[var1 * 5 + var4][1] = var1 * 48 * 179 / 100 + var1 * 10 + 90;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.fg); ++var1) {
         this.fw[var1][0] = this.fg[var1][0];
         this.fw[var1][1] = this.fg[var1][1] - 2;
         this.fw[var1][2] = 110;
         this.fw[var1][3] = 89;
      }

      this.fw[10][0] = 4;
      this.fw[10][1] = 541;
      this.fw[10][2] = 95;
      this.fw[10][3] = 95;
      this.fw[11][0] = this.excessWidth + 652;
      this.fw[11][1] = 280;
      this.fw[11][2] = 304;
      this.fw[11][3] = 88;
      this.fw[12][0] = this.getWidth() / 2 - 164 + 285 - 10;
      this.fw[12][1] = 506;
      this.fw[12][2] = 89;
      this.fw[12][3] = 89;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;
      this.gJ = false;
      this.gK = 0;
      this.gF[0] = false;
      this.hI = false;
   }

   boolean equipProcess() {
      boolean var1 = false;
      int[] var2 = this.eh;
      var2[0] += this.ek[0];
      var2 = this.ek;
      var2[0] = (int)((double)var2[0] * 0.9);
      if (this.eh[0] >= this.gy / 2 - this.gy - 20) {
         this.eh[0] = this.gy / 2 - this.gy - 20;
         this.eh[1] = this.gy * 100;
         this.ek[0] = 0;
      } else if (this.eh[0] < -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20)) {
         this.eh[0] = -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20);
         this.ek[0] = 0;
         this.eh[1] = this.gy * 100;
      }

      int var3;
      if (!this.eE[0] && this.bB[6] == 0) {
         this.screenTransition();
         this.bB[6] = 1;
         this.gU = true;

         for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
            this.gV[var3] = 0;
         }
      } else {
         if (this.R() && this.fh == 0 && !this.fn && !this.eE[6] && !this.eE[11] && this.fx[10] == 0 && this.fx[11] == 0 && this.fx[12] == 0 && !this.gI && !this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eb && !this.gJ && !this.gF[0] && !this.gF[1]) {
            if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
               this.ek[0] = 0;
            } else {
               this.hI = true;
            }

            if (this.hI) {
               this.ek[0] = this.K() - this.O();
               if (this.ek[0] != 0 && !this.eE[5]) {
                  this.eE[5] = true;
               }
            }
         } else {
            this.hI = false;
            if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
               this.ek[0] = 0;
               if (this.eh[0] % this.gy != 0) {
                  if (-this.eh[0] % this.gy >= this.gy / 2) {
                     this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                     if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                        this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                     }
                  } else {
                     this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                     if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                        this.eh[0] = this.eh[0] / this.gy * this.gy;
                     }
                  }
               }
            }

            if (!this.S()) {
               this.eE[5] = false;
            }
         }

         if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eb) {
            if (this.ek[0] < 0) {
               if (this.ff[0] != -(this.eh[0] / this.gy)) {
                  Sound.getInstance().play(10);
               }

               this.gp[0] = false;
            } else if (this.ek[0] > 0) {
               if (this.ff[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
                  Sound.getInstance().play(10);
               }

               this.gp[0] = false;
            } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[0]) {
               Sound.getInstance().play(10);
               this.gp[0] = true;
            }
         }

         if (this.ff[0] != -(this.eh[0] / this.gy)) {
            this.ff[0] = -(this.eh[0] / this.gy);
         }

         if (this.ff[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
            this.ff[1] = (this.gy * 100 + this.eh[0]) / this.gy;
         }

         if (-this.eh[0] % this.gy >= this.gy / 2) {
            if (this.ff[0] + 1 - this.gC[0] != this.ff[2]) {
               this.ff[2] = this.ff[0] + 1 - this.gC[0];
               if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
                        if (this.bw[this.bK[this.ff[2]]] == 0) {
                           this.ag[var3].a(this.cT[this.bK[this.ff[2]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                        } else if (this.bw[this.bK[this.ff[2]]] == 1) {
                           this.ag[var3].a(this.cT[this.bK[this.ff[2]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }
                  }
               } else if (this.ff[3] == 0) {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     this.ag[var3].a(this.dp[0][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               } else {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     this.ag[var3].a(this.dp[1][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            }
         } else if (this.ff[0] - this.gC[0] != this.ff[2]) {
            this.ff[2] = this.ff[0] - this.gC[0];
            if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  if (this.bw[this.bK[this.ff[2]]] == 0) {
                     this.ag[var3].a(this.cT[this.bK[this.ff[2]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  } else if (this.bw[this.bK[this.ff[2]]] == 1) {
                     this.ag[var3].a(this.cT[this.bK[this.ff[2]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            } else if (this.ff[3] == 0) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.dp[0][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.dp[1][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }

         int var10002;
         boolean var4;
         if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eE[5] && !this.eb && !this.gF[0] && !this.gF[1]) {
            if (this.fx[2] >= 1) {
               var2 = this.fx;
               var10002 = var2[2]++;
               if (this.fx[2] > this.getLength(dv) - 1) {
                  this.fx[2] = 0;
                  this.gF[0] = true;
               }
            } else if (this.fx[11] >= 1) {
               var2 = this.fx;
               var10002 = var2[11]++;
               if (this.fx[11] > this.getLength(dv) - 1) {
                  this.fx[11] = 0;
                  if (!this.gJ) {
                     this.gJ = true;
                     this.gK = 0;
                     Sound.getInstance().play(42);
                  } else {
                     this.gJ = false;
                  }
               }
            } else if (this.fx[12] >= 1) {
               var2 = this.fx;
               var10002 = var2[12]++;
               if (this.fx[12] > this.getLength(dv) - 1) {
                  this.fx[12] = 0;
                  this.gI = true;
               }
            } else if (this.fx[10] >= 1) {
               var2 = this.fx;
               var10002 = var2[10]++;
               this.eE[10] = true;
               if (this.fx[10] > this.getLength(dv) - 1) {
                  this.fx[10] = 0;
                  var4 = false;

                  for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
                     if (this.bk[var3] >= 2) {
                        var4 = true;
                     }
                  }

                  if (!var4) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 0;
                     return var1;
                  }

                  if (var4) {
                     this.eE[1] = true;
                  }
               }
            } else if (this.fx[13] >= 1) {
               var2 = this.fx;
               var10002 = var2[13]++;
               if (this.fx[13] > this.getLength(dv) - 1) {
                  this.fx[13] = 0;
                  if (this.be >= 1) {
                     var4 = false;

                     for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
                        if (this.bk[var3] >= 2) {
                           var4 = true;
                        }
                     }

                     if (!var4) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 0;
                        return var1;
                     }

                     if (var4) {
                        this.eE[13] = true;
                     }
                  }
               }
            } else if (this.fx[14] >= 1) {
               var2 = this.fx;
               var10002 = var2[14]++;
               if (this.fx[14] > this.getLength(dv) - 1) {
                  this.fx[14] = 0;
                  if (this.bB[8] == 0) {
                     this.screenTransition();
                     this.bB[8] = 1;
                     this.gU = true;

                     for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                        this.gV[var3] = 0;
                     }

                     Sound.getInstance().setVolume(50);
                     return var1;
                  }

                  if (!this.eE[5] && this.eh[0] % this.gy == 0 && this.ek[0] == 0) {
                     var4 = false;

                     for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
                        if (this.bk[var3] >= 2) {
                           var4 = true;
                        }
                     }

                     if (!var4) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 0;
                        return var1;
                     } else {
                        if (this.aL >= 900000) {
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 10000;
                        } else {
                           this.screenTransition();
                           this.menuType = 0;
                           this.j = true;
                        }

                        return var1;
                     }
                  }
               }
            } else {
               if ((this.ff[2] <= -1 || this.ff[2] >= this.gC[1] + 1) && !this.eE[5] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && this.R() && this.b(this.getWidth() / 2 - this.go[this.ff[0]][0] / 2 + this.gy * this.ff[0] + this.eh[0] - (328 - this.go[this.ff[0]][0]), 559 - this.go[this.ff[0]][1], this.go[this.ff[0]][0], this.go[this.ff[0]][1])) {
                  if (!this.gp[2]) {
                     Sound.getInstance().play(10);
                     this.gp[2] = true;
                  }
               } else {
                  this.gp[2] = false;
               }

               if (!this.gJ && !this.gI && !this.fn && !this.eE[6] && this.fh == 0) {
                  if (this.R() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && !this.eE[5] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[11]) {
                        Sound.getInstance().play(10);
                        this.gp[11] = true;
                     }
                  } else {
                     this.gp[11] = false;
                  }

                  if (this.bq[0] >= 48) {
                     if (this.R() && this.b(this.fw[12][0], this.fw[12][1], this.fw[12][2], this.fw[12][3])) {
                        if (!this.gp[12] && !this.eE[5] && this.bv[this.ff[2]] + 1 >= 10 && this.eh[0] % this.gy == 0 && this.ek[0] == 0) {
                           Sound.getInstance().play(10);
                           this.gp[12] = true;
                        }
                     } else {
                        this.gp[12] = false;
                     }
                  }

                  if (this.R() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
                     if (!this.eE[5] && !this.gp[10]) {
                        Sound.getInstance().play(10);
                        this.gp[10] = true;
                     }
                  } else {
                     this.gp[10] = false;
                  }

                  if (this.fx[2] == 0 && this.ff[0] - 2 >= 0 && this.ff[2] <= 0 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.S() && this.b(this.getWidth() / 2 - this.go[this.ff[0] - 1][0] / 2 + this.gy * (this.ff[0] - 1) + this.eh[0] - (328 - this.go[this.ff[0] - 1][0] + (328 - this.go[this.ff[0] - 1 + 1][0]) / 2), 559 - this.go[this.ff[0] - 1][1], this.go[this.ff[0] - 1][0], this.go[this.ff[0] - 1][1])) {
                     var2 = this.fx;
                     var10002 = var2[2]++;
                     this.ff[5] = -1;
                     Sound.getInstance().play(11);
                     this.eE[11] = true;
                  }

                  if (this.fx[2] == 0 && this.ff[0] - 2 <= this.gC[1] && this.ff[2] >= this.gC[1] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.S() && this.b(this.getWidth() / 2 - this.go[this.ff[0] + 1][0] / 2 + this.gy * (this.ff[0] + 1) + this.eh[0] + (328 - this.go[this.ff[0] + 1][0]), 559 - this.go[this.ff[0] + 1][1], this.go[this.ff[0] + 1][0], this.go[this.ff[0] + 1][1])) {
                     var2 = this.fx;
                     var10002 = var2[2]++;
                     this.ff[5] = 1;
                     Sound.getInstance().play(11);
                     this.eE[11] = true;
                  }

                  if (this.fx[2] == 0 && (this.ff[2] <= -1 || this.ff[2] >= this.gC[1] + 1) && !this.eE[5] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && this.S() && this.b(this.getWidth() / 2 - this.go[this.ff[0]][0] / 2 + this.gy * this.ff[0] + this.eh[0] - (328 - this.go[this.ff[0]][0]), 559 - this.go[this.ff[0]][1], this.go[this.ff[0]][0], this.go[this.ff[0]][1])) {
                     var2 = this.fx;
                     var10002 = var2[2]++;
                     Sound.getInstance().play(11);
                     this.ff[5] = 0;
                     this.eE[11] = true;
                  } else if (!this.eE[11] && this.S() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && !this.eE[5] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gJ) {
                        Sound.getInstance().play(11);
                        var2 = this.fx;
                        var10002 = var2[11]++;
                     }
                  } else if (!this.eE[11] && this.S() && this.b(this.fw[12][0], this.fw[12][1], this.fw[12][2], this.fw[12][3])) {
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && !this.eE[5] && this.bv[this.bK[this.ff[2]]] + 1 >= 10 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && this.bq[0] >= 48) {
                        Sound.getInstance().play(11);
                        var2 = this.fx;
                        var10002 = var2[12]++;
                     }
                  } else if (!this.eE[11] && this.S() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
                     if (!this.eE[5]) {
                        Sound.getInstance().play(11);
                        var2 = this.fx;
                        var10002 = var2[10]++;
                        this.eE[10] = true;
                     }
                  } else if (this.T()) {
                     this.eE[10] = true;
                     var4 = false;

                     for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
                        if (this.bk[var3] >= 2) {
                           var4 = true;
                        }
                     }

                     if (!var4) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 0;
                        return var1;
                     }

                     if (var4) {
                        this.eE[1] = true;
                     }
                  } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                     Sound.getInstance().play(11);
                     var2 = this.fx;
                     var10002 = var2[14]++;
                  }

                  if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                     if (!this.gp[14]) {
                        this.gp[14] = true;
                        Sound.getInstance().play(10);
                     }
                  } else {
                     this.gp[14] = false;
                  }
               }

               if (this.gJ) {
                  if (this.S()) {
                     if (this.gK >= this.getLength(eO) - 1) {
                        Sound.getInstance().play(11);
                        var2 = this.fx;
                        var10002 = var2[11]++;
                     }
                  } else if (this.T()) {
                     this.gJ = false;
                  }
               }
            }
         }

         if (-this.eh[0] % this.gy != 0) {
            if (-this.eh[0] % this.gy >= this.gy / 2) {
               this.eH[0] = 1;
               this.eH[1] = 328 - this.go[this.ff[0] + this.eH[0]][0];
            } else {
               this.eH[0] = 0;
               this.eH[1] = -(328 - this.go[this.ff[0] + this.eH[0]][0]);
            }
         } else {
            this.eH[0] = 0;
            this.eH[1] = -(328 - this.go[this.ff[0] + this.eH[0]][0]);
         }

         boolean var7 = false;

         boolean var5;
         int var6;
         for(var6 = 0; var6 < 10; var7 = var5) {
            var5 = var7;
            if (this.ff[2] >= 0) {
               var5 = var7;
               if (this.ff[2] <= this.gC[1]) {
                  var5 = var7;
                  if (this.bk[var6] - 2 == this.bK[this.ff[2]]) {
                     var5 = true;
                  }
               }
            }

            ++var6;
         }

         if (this.ff[2] <= -1 || this.ff[2] >= this.gC[1] + 1) {
            var7 = true;
         }

         var4 = var7;
         if (this.ff[2] >= 0) {
            var4 = var7;
            if (this.ff[2] <= this.gC[1]) {
               var4 = var7;
               if (this.bu[this.bK[this.ff[2]]] == 0) {
                  var4 = true;
               }
            }
         }

         if (!var4 && !this.gJ && !this.gI && this.R() && !this.eE[4] && this.b(this.getWidth() / 2 - this.go[this.ff[0] + this.eH[0]][0] / 2 + this.gy * (this.ff[0] + this.eH[0]) + this.eh[0] + this.eH[1], 559 - this.go[this.ff[0] + this.eH[0]][1], this.go[this.ff[0] + this.eH[0]][0], this.go[this.ff[0] + this.eH[0]][1])) {
            if (this.ek[0] == 0) {
               var2 = this.fk;
               var10002 = var2[10]++;
            } else {
               this.fk[10] = 0;
            }

            if (this.fk[10] >= 3 && this.fh == 0 && !this.eE[6]) {
               this.fo[0] = 55;
               this.fo[1] = 55;
               this.eE[6] = true;
            }
         } else {
            this.fk[10] = 0;
         }

         if (!this.gJ && !this.gI && this.R() && !this.eE[4] && this.eE[6]) {
            if (!this.eE[3] && this.b(this.getWidth() / 2 - this.go[this.ff[0] + this.eH[0]][0] / 2 + this.gy * (this.ff[0] + this.eH[0]) + this.eh[0] + this.eH[1], 559 - this.go[this.ff[0] + this.eH[0]][1], this.go[this.ff[0] + this.eH[0]][0], this.go[this.ff[0] + this.eH[0]][1])) {
               this.fn = true;
            }

            this.ei[1] = this.L();
            this.eh[1] = this.K();
            if (this.fn && !this.eE[3] && this.b(0, 80, this.getWidth(), 200)) {
               for(var3 = 0; var3 < 10; ++var3) {
                  if (this.bk[var3] == -1) {
                     this.fl = 55;
                     this.fm = 42;
                     this.fh = var3 + 1;
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
                        this.bk[var3] = this.bK[this.ff[2]] + 2;
                     }

                     this.eV[var3] = this.bw[this.bk[var3] - 2];
                     this.eE[3] = true;
                     if (this.ak[var3].isLoaded()) {
                        this.ak[var3].reset();
                     }

                     if (!this.ak[var3].isLoaded()) {
                        if (this.bk[var3] == -1) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                        } else if (this.eV[var3] == 0) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var3] - 2, 0)));
                        } else if (this.eV[var3] == 1) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var3] - 2, 0)));
                        }
                     }
                     break;
                  }
               }
            }

            if (this.eE[3]) {
               if (!this.b(0, 80, this.getWidth(), 200)) {
                  if (this.fn) {
                     this.fo[0] = this.fo[0] * 2 + 1;
                     this.fo[1] = this.fo[1] * 2 + 1;
                     if (this.fo[0] >= 75) {
                        this.fo[0] = 75;
                     }

                     if (this.fo[1] >= 75) {
                        this.fo[1] = 75;
                     }

                     this.eE[7] = true;
                  }
               } else if (this.fn) {
                  var2 = this.fo;
                  var2[0] = (int)((double)var2[0] * 0.6);
                  var2 = this.fo;
                  var2[1] = (int)((double)var2[1] * 0.6);
                  if (this.fo[0] <= 0) {
                     this.fo[0] = 0;
                  }

                  if (this.fo[1] <= 0) {
                     this.fo[1] = 0;
                  }

                  this.eE[7] = false;
               }
            } else {
               var4 = false;

               for(var3 = 0; var3 < 10; ++var3) {
                  if (this.b(this.fw[var3][0], this.fw[var3][1], this.fw[var3][2], this.fw[var3][3])) {
                     var2 = this.fp;
                     var10002 = var2[var3]++;
                     if (this.fp[var3] >= 15) {
                        this.fp[var3] = 15;
                        var2 = this.fo;
                        var2[0] = (int)((double)var2[0] * 0.6);
                        var2 = this.fo;
                        var2[1] = (int)((double)var2[1] * 0.6);
                        if (this.fo[0] <= 0) {
                           this.fo[0] = 0;
                        }

                        if (this.fo[1] <= 0) {
                           this.fo[1] = 0;
                        }

                        this.eE[7] = false;
                        var4 = true;
                     }
                  } else {
                     this.fp[var3] = 0;
                  }
               }

               if (!var4) {
                  this.fo[0] = this.fo[0] * 2 + 1;
                  this.fo[1] = this.fo[1] * 2 + 1;
                  if (this.fo[0] >= 75) {
                     this.fo[0] = 75;
                  }

                  if (this.fo[1] >= 75) {
                     this.fo[1] = 75;
                  }

                  this.eE[7] = true;
               }
            }
         } else {
            for(var3 = 0; var3 < 10; ++var3) {
               if (this.b(this.fw[var3][0], this.fw[var3][1], this.fw[var3][2], this.fw[var3][3])) {
                  if (this.fp[var3] >= 15) {
                     if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
                        this.bk[var3] = this.bK[this.ff[2]] + 2;
                     }

                     this.eV[var3] = this.bw[this.bk[var3] - 2];
                     if (this.ak[var3].isLoaded()) {
                        this.ak[var3].reset();
                     }

                     if (!this.ak[var3].isLoaded()) {
                        if (this.bk[var3] == -1) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                        } else if (this.eV[var3] == 0) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var3] - 2, 0)));
                        } else if (this.eV[var3] == 1) {
                           this.ak[var3].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var3] - 2, 0)));
                        }
                     }
                  }

                  this.fp[var3] = 0;
               }
            }

            if (!this.eE[7]) {
               this.fn = false;
            }

            if (this.eE[7]) {
               this.eE[4] = true;
            } else {
               this.eE[4] = false;
            }

            if (this.fn) {
               var2 = this.fo;
               var2[0] -= 20;
               var2 = this.fo;
               var2[1] -= 20;
               if (this.fo[0] <= -45) {
                  this.fo[0] = -45;
               }

               if (this.fo[1] <= -45) {
                  this.fo[1] = -45;
               }

               if (this.fo[0] <= -45 && this.fo[1] <= -45) {
                  this.fn = false;
                  this.fo[0] = 0;
                  this.fo[1] = 0;
                  this.eE[4] = false;
                  this.eE[7] = false;
                  if (this.fh >= 1) {
                     this.fj[this.fh - 1][2] = -100;
                     this.fj[this.fh - 1][3] = -100;
                     this.bk[this.fh - 1] = -1;
                  }
               }
            } else {
               this.fn = false;
               this.fo[0] = 0;
               this.fo[1] = 0;
               this.eE[4] = false;
               this.eE[7] = false;
            }

            this.eE[6] = false;
         }

         for(var3 = 0; var3 < 10; ++var3) {
            if (this.bk[var3] == -1) {
               this.fk[var3] = 0;
            } else if (!this.gJ && !this.gI && this.R() && this.b(this.fw[var3][0], this.fw[var3][1], this.fw[var3][2], this.fw[var3][3]) && !this.eE[5] && !this.fn) {
               var2 = this.fk;
               var10002 = var2[var3]++;
               if (this.fk[var3] >= 3 && this.fh == 0) {
                  this.fh = var3 + 1;
                  this.fl = this.K() - this.fg[this.fh - 1][0];
                  this.fm = this.L() - this.fg[this.fh - 1][1];
                  this.eE[3] = true;
               }
            } else {
               this.fk[var3] = 0;
            }
         }

         if (!this.gJ && !this.gI && this.R() && this.fh >= 1 && this.eE[3] && !this.eE[8]) {
            this.fi += 20;
            if (this.fi >= 127) {
               this.fi = 127;
            }

            this.fj[this.fh - 1][2] = this.fj[this.fh - 1][2] * 2 + 1;
            this.fj[this.fh - 1][3] = this.fj[this.fh - 1][3] * 2 + 1;
            if (this.fj[this.fh - 1][2] >= 40) {
               this.fj[this.fh - 1][2] = 40;
            }

            if (this.fj[this.fh - 1][3] >= 40) {
               this.fj[this.fh - 1][3] = 40;
            }

            var2 = this.fj[this.fh - 1];
            var2[0] += this.K() - this.O();
            var2 = this.fj[this.fh - 1];
            var2[1] += this.L() - this.P();
            var6 = 0;

            while(true) {
               if (var6 >= 10) {
                  this.ei[0] = this.L();
                  break;
               }

               if (this.fh - 1 != var6 && this.bk[var6] != -1) {
                  if (this.b(this.fw[var6][0], this.fw[var6][1], this.fw[var6][2], this.fw[var6][3])) {
                     this.eH[0] = var6 - (this.fh - 1);
                     var3 = 0;

                     while(this.eH[0] != 0) {
                        if (this.eH[0] > 0) {
                           var2 = this.eH;
                           var10002 = var2[0]--;
                           this.fj[this.fh - 1 + 1 + var3][2] = this.fj[this.fh - 1 + var3][2];
                           this.fj[this.fh - 1 + 1 + var3][3] = this.fj[this.fh - 1 + var3][3];
                           this.fj[this.fh - 1 + var3][2] = 0;
                           this.fj[this.fh - 1 + var3][3] = 0;
                           this.fj[this.fh - 1 + 1 + var3][0] = this.fg[this.fh - 1 + 1 + var3][0] - (this.K() - this.fl);
                           this.fj[this.fh - 1 + 1 + var3][1] = this.fg[this.fh - 1 + 1 + var3][1] - (this.L() + this.fm);
                           this.fj[this.fh - 1 + var3][0] = this.fg[this.fh - 1 + 1 + var3][0] - this.fg[this.fh - 1 + var3][0];
                           this.fj[this.fh - 1 + var3][1] = this.fg[this.fh - 1 + 1 + var3][1] - this.fg[this.fh - 1 + var3][1];
                           this.ak[10] = this.ak[this.fh - 1 + 1 + var3];
                           this.ak[this.fh - 1 + 1 + var3] = this.ak[this.fh - 1 + var3];
                           this.ak[this.fh - 1 + var3] = this.ak[10];
                           this.eH[1] = this.bk[this.fh - 1 + 1 + var3];
                           this.bk[this.fh - 1 + 1 + var3] = this.bk[this.fh - 1 + var3];
                           this.bk[this.fh - 1 + var3] = this.eH[1];
                           ++var3;
                        } else {
                           var2 = this.eH;
                           var10002 = var2[0]++;
                           this.fj[this.fh - 1 - 1 + var3][2] = this.fj[this.fh - 1 + var3][2];
                           this.fj[this.fh - 1 - 1 + var3][3] = this.fj[this.fh - 1 + var3][3];
                           this.fj[this.fh - 1 + var3][2] = 0;
                           this.fj[this.fh - 1 + var3][3] = 0;
                           this.fj[this.fh - 1 - 1 + var3][0] = this.fg[this.fh - 1 - 1 + var3][0] - (this.K() - this.fl);
                           this.fj[this.fh - 1 - 1 + var3][1] = this.fg[this.fh - 1 - 1 + var3][1] - (this.L() + this.fm);
                           this.fj[this.fh - 1 + var3][0] = this.fg[this.fh - 1 - 1 + var3][0] - this.fg[this.fh - 1 + var3][0];
                           this.fj[this.fh - 1 + var3][1] = this.fg[this.fh - 1 - 1 + var3][1] - this.fg[this.fh - 1 + var3][1];
                           this.ak[10] = this.ak[this.fh - 1 - 1 + var3];
                           this.ak[this.fh - 1 - 1 + var3] = this.ak[this.fh - 1 + var3];
                           this.ak[this.fh - 1 + var3] = this.ak[10];
                           this.eH[1] = this.bk[this.fh - 1 - 1 + var3];
                           this.bk[this.fh - 1 - 1 + var3] = this.bk[this.fh - 1 + var3];
                           this.bk[this.fh - 1 + var3] = this.eH[1];
                           --var3;
                        }
                     }

                     this.fh = var6 + 1;
                  }

                  var2 = this.fj[var6];
                  var2[0] /= 2;
                  var2 = this.fj[var6];
                  var2[1] /= 2;
               }

               ++var6;
            }
         } else {
            if (this.eE[3]) {
               this.fj[this.fh - 1][0] = this.K() - this.fl - this.fg[this.fh - 1][0];
               this.fj[this.fh - 1][1] = this.L() - this.fm - this.fg[this.fh - 1][1];
            }

            this.eE[3] = false;
            if (this.fh >= 1) {
               if (this.ei[0] >= 80 && this.ei[0] <= 280) {
                  var2 = this.fj[this.fh - 1];
                  var2[0] /= 2;
                  var2 = this.fj[this.fh - 1];
                  var2[1] /= 2;
                  var2 = this.fj[this.fh - 1];
                  var2[2] /= 2;
                  var2 = this.fj[this.fh - 1];
                  var2[3] /= 2;
                  this.eE[8] = true;
                  if (this.fj[this.fh - 1][0] == 0 && this.fj[this.fh - 1][1] == 0) {
                     this.fj[this.fh - 1][2] = 0;
                     this.fj[this.fh - 1][3] = 0;
                     this.fh = 0;
                     this.fi = 0;
                     this.eE[8] = false;
                  }
               } else {
                  var2 = this.fj[this.fh - 1];
                  var2[2] -= 20;
                  var2 = this.fj[this.fh - 1];
                  var2[3] -= 20;
                  if (this.fj[this.fh - 1][2] <= -100) {
                     this.fj[this.fh - 1][2] = -100;
                  }

                  if (this.fj[this.fh - 1][3] <= -100) {
                     this.fj[this.fh - 1][3] = -100;
                  }

                  this.eE[8] = true;
               }

               if ((this.ei[0] < 80 || this.ei[0] > 280) && this.fj[this.fh - 1][2] <= -100 && this.fj[this.fh - 1][3] <= -100) {
                  this.eE[8] = false;
                  this.fj[this.fh - 1][0] = 0;
                  this.fj[this.fh - 1][1] = 0;
                  this.fj[this.fh - 1][2] = 0;
                  this.fj[this.fh - 1][3] = 0;
                  this.bk[this.fh - 1] = -1;
                  if (this.ak[this.fh - 1].isLoaded()) {
                     this.ak[this.fh - 1].reset();
                  }

                  this.eH[0] = 9 - (this.fh - 1);
                  var3 = 0;

                  while(this.eH[0] != 0) {
                     if (this.eH[0] > 0) {
                        var2 = this.eH;
                        var10002 = var2[0]--;
                        this.fj[this.fh - 1 + 1 + var3][2] = this.fj[this.fh - 1 + var3][2];
                        this.fj[this.fh - 1 + 1 + var3][3] = this.fj[this.fh - 1 + var3][3];
                        this.fj[this.fh - 1 + var3][2] = 0;
                        this.fj[this.fh - 1 + var3][3] = 0;
                        this.fj[this.fh - 1 + 1 + var3][0] = this.fg[this.fh - 1 + 1 + var3][0] - (this.K() - this.fl);
                        this.fj[this.fh - 1 + 1 + var3][1] = this.fg[this.fh - 1 + 1 + var3][1] - (this.L() + this.fm);
                        this.fj[this.fh - 1 + var3][0] = this.fg[this.fh - 1 + 1 + var3][0] - this.fg[this.fh - 1 + var3][0];
                        this.fj[this.fh - 1 + var3][1] = this.fg[this.fh - 1 + 1 + var3][1] - this.fg[this.fh - 1 + var3][1];
                        this.ak[10] = this.ak[this.fh - 1 + 1 + var3];
                        this.ak[this.fh - 1 + 1 + var3] = this.ak[this.fh - 1 + var3];
                        this.ak[this.fh - 1 + var3] = this.ak[10];
                        this.eH[1] = this.bk[this.fh - 1 + 1 + var3];
                        this.bk[this.fh - 1 + 1 + var3] = this.bk[this.fh - 1 + var3];
                        this.bk[this.fh - 1 + var3] = this.eH[1];
                        ++var3;
                     } else {
                        var2 = this.eH;
                        var10002 = var2[0]++;
                        this.fj[this.fh - 1 - 1 + var3][2] = this.fj[this.fh - 1 + var3][2];
                        this.fj[this.fh - 1 - 1 + var3][3] = this.fj[this.fh - 1 + var3][3];
                        this.fj[this.fh - 1 + var3][2] = 0;
                        this.fj[this.fh - 1 + var3][3] = 0;
                        this.fj[this.fh - 1 - 1 + var3][0] = this.fg[this.fh - 1 - 1 + var3][0] - (this.K() - this.fl);
                        this.fj[this.fh - 1 - 1 + var3][1] = this.fg[this.fh - 1 - 1 + var3][1] - (this.L() + this.fm);
                        this.fj[this.fh - 1 + var3][0] = this.fg[this.fh - 1 - 1 + var3][0] - this.fg[this.fh - 1 + var3][0];
                        this.fj[this.fh - 1 + var3][1] = this.fg[this.fh - 1 - 1 + var3][1] - this.fg[this.fh - 1 + var3][1];
                        this.ak[10] = this.ak[this.fh - 1 - 1 + var3];
                        this.ak[this.fh - 1 - 1 + var3] = this.ak[this.fh - 1 + var3];
                        this.ak[this.fh - 1 + var3] = this.ak[10];
                        this.eH[1] = this.bk[this.fh - 1 - 1 + var3];
                        this.bk[this.fh - 1 - 1 + var3] = this.bk[this.fh - 1 + var3];
                        this.bk[this.fh - 1 + var3] = this.eH[1];
                        --var3;
                     }
                  }

                  this.fh = 0;
               }
            } else {
               this.eE[8] = false;
            }

            for(var3 = 0; var3 < 10; ++var3) {
               if (this.fh - 1 != var3) {
                  var2 = this.fj[var3];
                  var2[0] /= 2;
                  var2 = this.fj[var3];
                  var2[1] /= 2;
               }
            }
         }

         if (this.eE[0]) {
            var2 = this.fQ;
            var10002 = var2[2]++;
            this.gm[0] = this.gm[0] * 2 + 1;
            if (this.gm[0] >= 297) {
               this.gm[0] = 297;
               this.gm[1] /= 2;
            }

            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fQ[2] = this.getLength(fM) - 1;
               this.fP = this.getWidth();
               if (this.gm[1] <= 0) {
                  this.eE[0] = false;
                  this.fQ[2] = 0;
                  this.gQ = 0;
               }
            } else {
               this.fP = fM[this.fQ[2]];
            }
         } else if (this.eE[1]) {
            var2 = this.fQ;
            var10002 = var2[2]++;
            this.gm[1] = this.gm[1] * 2 + 1;
            if (this.gm[1] >= 297) {
               this.gm[1] = 297;
               this.gm[0] /= 2;
            }

            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fQ[2] = this.getLength(fM) - 1;
               this.fP = 0;
               if (this.gm[0] <= 0) {
                  this.fQ[2] = 0;
                  this.screenTransition();
                  this.screen = 5;
                  this.fF = -1;
                  this.eE[1] = false;
                  return var1;
               }
            } else {
               this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
            }
         } else if (this.gF[0]) {
            var2 = this.fQ;
            var10002 = var2[6]++;
            if (this.fQ[6] > this.getLength(fM) - 1) {
               this.fP = 0;
            } else {
               this.fP = fM[this.getLength(fM) - 1 - this.fQ[6]];
            }

            if (this.fQ[6] > this.getLength(fM)) {
               this.fQ[6] = 0;
               this.screenTransition();
               this.screen = 3;
               this.fF = -1;
               return var1;
            }
         } else if (this.gF[1]) {
            var2 = this.fQ;
            var10002 = var2[6]++;
            if (this.fQ[6] > this.getLength(fM) - 1) {
               this.fQ[6] = this.getLength(fM) - 1;
               this.fP = this.getWidth();
               this.fQ[6] = 0;
               this.gF[1] = false;
            } else {
               this.fP = fM[this.fQ[6]];
            }
         }

         var2 = this.fQ;
         var10002 = var2[0]--;
         if (this.fQ[0] <= 0) {
            this.fQ[0] = 0;
         }

         if (!this.gJ) {
            var2 = this.fQ;
            var10002 = var2[3]++;
            var2 = this.fQ;
            var10002 = var2[4]++;
         }

         if (this.eE[13]) {
            var2 = this.fQ;
            var10002 = var2[2]++;
            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fP = 0;
            } else {
               this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
            }

            if (this.fQ[2] > this.getLength(fM)) {
               this.fP = 0;
               this.fQ[2] = 0;
               this.screenTransition();
               this.screen = 999;
               this.fF = -1;
               this.gQ = 3;
               var6 = 0;

               for(var3 = 0; var3 < this.getLength(this.ff); ++var3) {
                  this.gT[var3] = this.ff[var3];
                  var6 = var3 + 1;
               }

               this.gT[var6] = this.eh[0];
               return var1;
            }
         }

         for(var3 = 0; var3 < this.getLength(this.go); ++var3) {
            for(var6 = 0; var6 < this.getLength(this.go[var3]); ++var6) {
               if (var6 == 0) {
                  if (var3 == this.ff[0]) {
                     this.go[var3][var6] = this.eh[0] % this.gy * 100 / this.gy * 99 / 100 + 328;
                     if (this.eh[0] > 0) {
                        this.go[var3][var6] = 328 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
                     }
                  } else if (var3 == this.ff[0] + 1) {
                     this.go[var3][var6] = 229 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
                  } else {
                     this.go[var3][var6] = 229;
                  }

                  if (this.go[var3][var6] >= 328) {
                     this.go[var3][var6] = 328;
                  } else if (this.go[var3][var6] <= 229) {
                     this.go[var3][var6] = 229;
                  }
               } else if (var6 == 1) {
                  if (var3 == this.ff[0]) {
                     this.go[var3][var6] = this.eh[0] % this.gy * 100 / this.gy * 79 / 100 + 263;
                     if (this.eh[0] > 0) {
                        this.go[var3][var6] = 263 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
                     }
                  } else if (var3 == this.ff[0] + 1) {
                     this.go[var3][var6] = 184 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
                  } else {
                     this.go[var3][var6] = 184;
                  }

                  if (this.go[var3][var6] >= 263) {
                     this.go[var3][var6] = 263;
                  } else if (this.go[var3][var6] <= 184) {
                     this.go[var3][var6] = 184;
                  }
               }
            }
         }

         if (this.gJ) {
            ++this.gK;
            if (this.gK > this.getLength(eO) - 1) {
               this.gK = this.getLength(eO) - 1;
            }
         }

         if (this.gI) {
            ++this.gH;
            if (this.gH > this.getLength(cC) - 1) {
               this.gH = 0;
               this.gI = false;
            }

            if (cC[this.gH] == 100 && this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
               if (this.bw[this.bK[this.ff[2]]] == 0) {
                  this.bw[this.bK[this.ff[2]]] = 1;
                  this.ag[this.ff[2]].a(this.cT[this.bK[this.ff[2]]][1][0], "FONT_SYSTEM_BOLD", 30, 1);

                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     if (this.bw[this.bK[this.ff[2]]] == 1) {
                        this.ag[var3].a(this.cT[this.bK[this.ff[2]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }

                  for(var3 = 0; var3 < 10; ++var3) {
                     if (this.bk[var3] - 2 == this.bK[this.ff[2]]) {
                        this.eV[var3] = this.bw[this.bk[var3] - 2];
                        if (this.ak[var3].isLoaded()) {
                           this.ak[var3].reset();
                        }

                        if (!this.ak[var3].isLoaded()) {
                           if (this.bk[var3] == -1) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                           } else if (this.eV[var3] == 0) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var3] - 2, 0)));
                           } else if (this.eV[var3] == 1) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var3] - 2, 0)));
                           }
                        }
                     }
                  }
               } else if (this.bw[this.bK[this.ff[2]]] == 1) {
                  this.bw[this.bK[this.ff[2]]] = 0;
                  this.ag[this.ff[2]].a(this.cT[this.bK[this.ff[2]]][0][0], "FONT_SYSTEM_BOLD", 30, 1);

                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     if (this.bw[this.bK[this.ff[2]]] == 0) {
                        this.ag[var3].a(this.cT[this.bK[this.ff[2]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }

                  for(var3 = 0; var3 < 10; ++var3) {
                     if (this.bk[var3] - 2 == this.bK[this.ff[2]]) {
                        this.eV[var3] = this.bw[this.bk[var3] - 2];
                        if (this.ak[var3].isLoaded()) {
                           this.ak[var3].reset();
                        }

                        if (!this.ak[var3].isLoaded()) {
                           if (this.bk[var3] == -1) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                           } else if (this.eV[var3] == 0) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var3] - 2, 0)));
                           } else if (this.eV[var3] == 1) {
                              this.ak[var3].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var3] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var3] - 2, 0)));
                           }
                        }
                     }
                  }
               }

               if (this.ae[this.ff[2] + 11].isLoaded()) {
                  this.ae[this.ff[2] + 11].reset();
               }

               if (this.ae[this.ff[2] + 11].isLoaded()) {
                  this.ae[this.ff[2] + 11].reset();
               }

               if (!this.ae[this.ff[2] + 11].isLoaded()) {
                  if (this.bw[this.bK[this.ff[2]]] == 0) {
                     this.ae[this.ff[2] + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[this.ff[2]])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[this.ff[2]])));
                  } else {
                     this.ae[this.ff[2] + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[this.ff[2]])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[this.ff[2]])));
                  }
               }
            }
         }

         if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && !this.gI && !this.eE[9]) {
            if ((this.R() || this.S()) && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
               this.eE[10] = true;
            } else if (this.fx[10] == 0 && !this.eE[1]) {
               this.eE[10] = false;
            }
         } else if (this.fx[10] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }

         var1 = true;
      }

      return var1;
   }

   int a(int var1, int var2, int var3) {
      int var4;
      if (var1 == 0) {
         var4 = 1;
      } else {
         var4 = 0;
      }

      int var5;
      int var6;
      if (var1 == 0) {
         var5 = this.bR[0][var2][3] - this.bR[0][var2][13];
         var6 = this.bR[0][var2][3];
         var2 = var5;
      } else {
         var5 = this.bR[1][var2][3];
         var6 = this.bR[1][var2][3] + this.bR[1][var2][13];
         var2 = var5;
      }

      byte var7;
      if (this.bR[var4][var3][0] > 0 && this.bR[var4][var3][1] <= 2) {
         if (var1 == 0) {
            var1 = this.bR[var4][var3][3] - this.bR[var4][var3][14];
            var4 = this.bR[var4][var3][3] - this.bR[var4][var3][15];
            var3 = var1;
            var1 = var4;
         } else {
            var5 = this.bR[var4][var3][3] + this.bR[var4][var3][15];
            var1 = this.bR[var4][var3][3];
            var1 += this.bR[var4][var3][14];
            var3 = var5;
         }

         if (var2 <= var3 && var6 >= var1) {
            var7 = 1;
            return var7;
         }
      }

      var7 = 0;
      return var7;
   }

   int a(int var1, int var2, int var3, int var4, int var5, int var6) {
      int var7;
      if (var2 == -1) {
         var7 = -2;
      } else {
         var7 = 1;

         while(true) {
            if (var7 >= this.getLength(this.bR[var1])) {
               var7 = -1;
               break;
            }

            if (this.bR[var1][var7][0] == 0 && this.bR[var1][var7][0] == 0) {
               this.bR[var1][var7][0] = var2;
               this.bR[var1][var7][1] = 0;
               this.bR[var1][var7][2] = 0;
               this.bR[var1][var7][4] = 4480;
               this.bR[var1][var7][5] = var4;
               var5 = var5 - var4 + 1;
               var4 = var5;
               if (var5 <= 0) {
                  var4 = 1;
               }

               int[] var8 = this.bR[var1][var7];
               var5 = var8[5];
               var8[5] = aMath.rand(var4) + var5;
               this.bR[var1][var7][6] = var3;
               this.bR[var1][var7][18] = 0;
               this.bR[var1][var7][19] = 0;
               this.bR[var1][var7][22] = 0;
               this.bR[var1][var7][23] = 0;
               if (var1 == 0) {
                  this.bR[var1][var7][3] = this.bV[0] - 2800;
                  this.bR[var1][var7][7] = (this.bX[var2][var6][0] * (var3 * 2 + 10) + 5) / 10;
                  var4 = 0;

                  for(var5 = 0; var5 < 10; ++var5) {
                     var4 += cB[6] * this.bO[var5][6] / 100;
                  }

                  var8 = this.bR[var1][var7];
                  var5 = var8[7];
                  var8[7] = var4 * this.bR[var1][var7][7] / 100 + var5;
                  this.bR[var1][var7][8] = this.bR[var1][var7][7];
                  this.bR[var1][var7][9] = this.bX[var2][var6][1];
                  this.bR[var1][var7][10] = this.bX[var2][var6][2];
                  this.bR[var1][var7][11] = (this.bX[var2][var6][3] * (var3 * 2 + 10) + 5) / 10;
                  var3 = 0;

                  for(var4 = 0; var4 < 10; ++var4) {
                     var3 += cB[7] * this.bO[var4][7] / 100;
                  }

                  var8 = this.bR[var1][var7];
                  var4 = var8[11];
                  var8[11] = var3 * this.bR[var1][var7][11] / 100 + var4;
                  this.bR[var1][var7][12] = this.bX[var2][var6][4];
                  this.bR[var1][var7][13] = this.bX[var2][var6][5];
                  this.bR[var1][var7][14] = this.bX[var2][var6][8];
                  this.bR[var1][var7][15] = this.bX[var2][var6][9];
                  this.bR[var1][var7][16] = this.bX[var2][var6][10];
                  this.bR[var1][var7][17] = this.bX[var2][var6][11];
                  this.bR[var1][var7][20] = this.bX[var2][var6][12];
                  this.bR[var1][var7][21] = this.bX[var2][var6][13];
               } else {
                  this.bR[var1][var7][3] = 2800;
                  this.bR[var1][var7][7] = (this.bY[var2][0] * (Y[this.eQ] + 10) + 5) / 10;
                  this.bR[var1][var7][8] = this.bR[var1][var7][7];
                  this.bR[var1][var7][9] = this.bY[var2][1];
                  this.bR[var1][var7][10] = this.bY[var2][2];
                  this.bR[var1][var7][11] = (this.bY[var2][3] * (Y[this.eQ] + 10) + 5) / 10;
                  this.bR[var1][var7][12] = this.bY[var2][4];
                  this.bR[var1][var7][13] = this.bY[var2][5];
                  this.bR[var1][var7][14] = this.bY[var2][7];
                  this.bR[var1][var7][15] = this.bY[var2][8];
                  this.bR[var1][var7][16] = this.bY[var2][9];
                  this.bR[var1][var7][17] = this.bY[var2][10];
                  this.bR[var1][var7][20] = this.bY[var2][11];
                  this.bR[var1][var7][21] = this.bY[var2][12];
               }
               break;
            }

            ++var7;
         }
      }

      return var7;
   }

   int a(Date var1) {
      return (int)(var1.getTime() / 1000L);
   }

   String a(int var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, int var9, int var10, int var11, int var12, int[] var13, int var14, int var15, int var16, int[] var17, int[] var18) {
      aStringBuffer var19 = new aStringBuffer();
      var19.append(String.format("log=1&l=%s&sts=%d&rd=%d&ps=%d&aris=%d&cfrd=%d&cfps=%d&gf=%d&inv=%d&fb=%d&tw=%d&ln=%d&rv=%d", MyUtility.getString("lang"), var1, var2 + 1, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12));

      for(var1 = 0; var1 < 8; ++var1) {
         var19.append(String.format("&cf%d=%d", var1, var13[var1]));
      }

      var19.append(String.format("&ucu=%d&uco=%d&uch=%d", var14, var15, var16));

      for(var1 = 0; var1 < 11; ++var1) {
         var19.append(String.format("&uit%d=%d", var1, var17[var1]));
      }

      for(var1 = 0; var1 < 4; ++var1) {
         var19.append(String.format("&ugo%d=%d", var1, var18[var1]));
      }

      return var19.toString();
   }

   @Override
   public void onCreate() {
      this.setConstants();

      int var1;
      for(var1 = 0; var1 < this.getLength(this.bF); ++var1) {
         this.bF[var1] = false;
      }

      //jp.co.ponos.library.a.a.b().k();
      this.e = null;
      this.ag();
      if (aString.equals(MyUtility.getString("lang"), "ja")) {
         this.q = 30;
         this.p = 0;
      } else if (aString.equals(MyUtility.getString("lang"), "en")) {
         this.q = 15;
         this.p = 1;
      }

      Sound.getInstance().loadMany(this.hL, 43);
      AssetTextStream var2 = new AssetTextStream();
      if (var2.openRead(String.format("OP_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cJ); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            this.cJ[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("ED_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cK); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            this.cK[var1] = var2.getLine(0);
         }
      }

      var2.close();
      int var3;
      if (var2.openRead(String.format("EnemyPictureBook_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cQ); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cQ[var1]); ++var3) {
               this.cQ[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("EnemyPictureBookQuestion_%s.csv", MyUtility.getString("lang")))) {
         var2.readLine();

         for(var1 = 0; var1 < this.getLength(this.cR); ++var1) {
            this.cR[var1] = var2.getLine(var1);
         }
      }

      var2.close();
      if (var2.openRead(String.format("StageName_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cF); ++var1) {
            var2.readLine();
            this.cF[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("Treasure1_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cG); ++var1) {
            var2.readLine();
            this.cG[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("Treasure2_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cH); ++var1) {
            var2.readLine();
            this.cH[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("Treasure3_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cI); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.cI[var1]); ++var3) {
               this.cI[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("Warning1_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cD); ++var1) {
            var2.readLine();
            this.cD[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("Warning2_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cE); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cE[var1]); ++var3) {
               this.cE[var1][var3] = var2.getLine(var3);
            }
         }
      }

      if (var2.openRead(String.format("MainMenuW_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cL); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cL[var1]); ++var3) {
               this.cL[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("MainMenuP_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cM); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cM[var1]); ++var3) {
               this.cM[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("MainMenuU_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cN); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cN[var1]); ++var3) {
               this.cN[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("MainMenuT_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cO); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cO[var1]); ++var3) {
               this.cO[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("MainMenuB_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cP); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.cP[var1]); ++var3) {
               this.cP[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("Unit_Explanation_Off_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cS); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.cS[var1]); ++var3) {
               this.cS[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();

      int var4;
      for(var1 = 0; var1 < 26; ++var1) {
         if (var2.openRead(String.format("Unit_Explanation%d_%s.csv", var1 + 1, MyUtility.getString("lang")))) {
            for(var3 = 0; var3 < this.getLength(this.cT[var1]); ++var3) {
               var2.readLine();

               for(var4 = 0; var4 < this.getLength(this.cT[var1][var3]); ++var4) {
                  this.cT[var1][var3][var4] = var2.getLine(var4);
               }
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("God_Explanation_%s.csv", MyUtility.getString("lang")))) {
         var2.readLine();

         for(var1 = 0; var1 < this.getLength(this.cU); ++var1) {
            this.cU[var1] = var2.getLine(var1);
         }
      }

      var2.close();
      if (var2.openRead(String.format("StageFirstMessage_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cW); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.cW[var1]); ++var3) {
               this.cW[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();

      for(var1 = 0; var1 < this.getLength(this.cV); ++var1) {
         if (var2.openRead(String.format("Cat_Explanation%d_%s.csv", var1 + 1, MyUtility.getString("lang")))) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.cV[var1]); ++var3) {
               this.cV[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("ChallengeMode_%s.csv", MyUtility.getString("lang")))) {
         var2.readLine();

         for(var1 = 0; var1 < this.getLength(this.cX); ++var1) {
            this.cX[var1] = var2.getLine(var1);
         }
      }

      var2.close();
      if (var2.openRead(String.format("PageName_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.cY); ++var1) {
            var2.readLine();
            this.cY[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("FirstLose_%s.csv", MyUtility.getString("lang")))) {
         var2.readLine();

         for(var1 = 0; var1 < this.getLength(this.cZ); ++var1) {
            this.cZ[var1] = var2.getLine(var1);
         }
      }

      var2.close();

      for(var1 = 0; var1 < this.getLength(this.da); ++var1) {
         if (var2.openRead(String.format("Lose%d_%s.csv", var1 + 1, MyUtility.getString("lang")))) {
            for(var3 = 0; var3 < this.getLength(this.da[var1]); ++var3) {
               if (this.p == 0) {
                  var2.readLine();
               } else if (this.p == 1) {
                  var2.readLine("\\*");
               }

               for(var4 = 0; var4 < this.getLength(this.da[var1][var3]); ++var4) {
                  this.da[var1][var3][var4] = var2.getLine(var4);
               }
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("Option_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.db); ++var1) {
            var2.readLine();
            this.db[var1] = var2.getLine(0);
         }
      }

      if (var2.openRead(String.format("ItemName_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dc); ++var1) {
            var2.readLine();
            this.dc[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("Item_Explanation_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dd); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dd[var1]); ++var3) {
               this.dd[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("MainMenuPopUp_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.de); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.de[var1]); ++var3) {
               this.de[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("Tutorial_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.df); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.df[var1]); ++var3) {
               this.df[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("God1_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dh); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dh[var1]); ++var3) {
               this.dh[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("God2_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.di); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            for(var3 = 0; var3 < this.getLength(this.di[var1]); ++var3) {
               this.di[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("God3_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dj); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dj[var1]); ++var3) {
               this.dj[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("God4_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dk); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dk[var1]); ++var3) {
               this.dk[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("GodName_%s.csv", MyUtility.getString("lang")))) {
         var2.readLine();
         this.dl = var2.getLine(0);
      }

      var2.close();
      if (var2.openRead(String.format("GodItemName_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dm); ++var1) {
            var2.readLine();
            this.dm[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("GodItemExplanation_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dn); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dn[var1]); ++var3) {
               this.dn[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("ED_Message_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dg); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dg[var1]); ++var3) {
               this.dg[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("PopUpMessage_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.do1); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.do1[var1]); ++var3) {
               this.do1[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("Category_Explanation_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dp); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dp[var1]); ++var3) {
               this.dp[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      if (var2.openRead(String.format("StampMessage_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dq); ++var1) {
            if (this.p == 0) {
               var2.readLine();
            } else if (this.p == 1) {
               var2.readLine("\\*");
            }

            this.dq[var1] = var2.getLine(0);
         }
      }

      var2.close();
      if (var2.openRead(String.format("GiftMessage_%s.csv", MyUtility.getString("lang")))) {
         for(var1 = 0; var1 < this.getLength(this.dr); ++var1) {
            var2.readLine();

            for(var3 = 0; var3 < this.getLength(this.dr[var1]); ++var3) {
               this.dr[var1][var3] = var2.getLine(var3);
            }
         }
      }

      var2.close();
      this.a = Calendar.getInstance();
      this.fv = this.a.get(1);

      for(var1 = 0; var1 < this.getLength(this.bM); ++var1) {
         this.bM[var1] = 0;
      }

      this.b(true);
      this.z = 10000;
      this.pointerID = -1;
      if (MyUtility.shouldOffsetY()) {
         this.eZ = 40;
      } else {
         this.eZ = 0;
      }

      this.gu = false;
      this.gw = 0;

      for(var1 = 0; var1 < this.getLength(this.gv); ++var1) {
         this.gv[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         this.ag[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
         this.ae[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.af); ++var1) {
         this.af[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ar); ++var1) {
         this.ar[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.as); ++var1) {
         this.as[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.av); ++var1) {
         this.av[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ay); ++var1) {
         this.ay[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.aC); ++var1) {
         this.aC[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ak); ++var1) {
         this.ak[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ao); ++var1) {
         this.ao[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.aF); ++var1) {
         this.aF[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.aI); ++var1) {
         this.aI[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ap); ++var1) {
         this.ap[var1] = new Model();
      }

      for(var1 = 0; var1 < this.getLength(this.at); ++var1) {
         this.at[var1] = new Model();
      }

      for(var1 = 0; var1 < this.getLength(this.aw); ++var1) {
         this.aw[var1] = new Model();
      }

      for(var1 = 0; var1 < this.getLength(this.az); ++var1) {
         for(var3 = 0; var3 < this.getLength(this.az[var1]); ++var3) {
            this.az[var1][var3] = new Model();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.aD); ++var1) {
         this.aD[var1] = new Model();
      }

      for(var1 = 0; var1 < this.getLength(this.aG); ++var1) {
         this.aG[var1] = new Model();
      }

      this.aJ = new Model();

      for(var1 = 0; var1 < this.getLength(this.aq); ++var1) {
         this.aq[var1] = new ModelAnimation();
      }

      for(var1 = 0; var1 < this.getLength(this.au); ++var1) {
         for(var3 = 0; var3 < this.getLength(this.au[var1]); ++var3) {
            this.au[var1][var3] = new ModelAnimation();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.ax); ++var1) {
         for(var3 = 0; var3 < this.getLength(this.ax[var1]); ++var3) {
            this.ax[var1][var3] = new ModelAnimation();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.aA); ++var1) {
         for(var3 = 0; var3 < this.getLength(this.aA[var1]); ++var3) {
            this.aA[var1][var3] = new ModelAnimation();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.aE); ++var1) {
         for(var3 = 0; var3 < this.getLength(this.aE[var1]); ++var3) {
            this.aE[var1][var3] = new ModelAnimation();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.aH); ++var1) {
         this.aH[var1] = new ModelAnimation();
      }

      for(var1 = 0; var1 < this.getLength(this.aK); ++var1) {
         this.aK[var1] = new ModelAnimation();
      }

      this.al = new Texture();
      this.am = new Texture();
      this.an = new Texture();

      for(var1 = 0; var1 < this.getLength(this.aj); ++var1) {
         this.aj[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ah); ++var1) {
         this.ah[var1] = new Texture();
      }

      for(var1 = 0; var1 < this.getLength(this.ai); ++var1) {
         this.ai[var1] = new Texture();
      }

      if (this.ab()) {
         if (this.aZ == 0) {
            this.aV = 2;
            this.aM = 100;
            this.a = Calendar.getInstance();

            for(var1 = 0; var1 < 2; ++var1) {
               this.aN[var1] = this.a.get(1);
               this.aO[var1] = this.a.get(2);
               this.aP[var1] = this.a.get(5);
            }

            this.aN[1] = 0;
            this.aO[1] = 0;
            this.aP[1] = 0;
            this.aR = this.a.get(11);
            this.aS = this.a.get(12);
            this.aT = this.a.get(13);
            this.bl = 0;

            for(var1 = 0; var1 < this.getLength(this.bm); ++var1) {
               this.bm[var1] = 0;
            }

            this.bn = 0;
            this.bo = 0;
            this.aU = 0;
            this.aW = 0;
            this.aX = 0;
            this.aY = 0;
            this.aZ = 0;
            this.ba = 0;

            for(var1 = 0; var1 < this.getLength(this.bc); ++var1) {
               this.bc[var1] = 0;
            }

            this.bd = 0;
            this.gQ = 0;
            this.bf = 0;

            for(var1 = 0; var1 < 10; ++var1) {
               this.bp[var1] = 0;
            }

            for(var1 = 0; var1 < 10; ++var1) {
               this.bq[var1] = 0;
            }

            var1 = 0;

            while(true) {
               if (var1 >= 10) {
                  for(var1 = 0; var1 < 10; ++var1) {
                     for(var3 = 0; var3 < this.getLength(this.bs[var1]); ++var3) {
                        this.bs[var1][var3] = 0;
                     }
                  }

                  for(var1 = 0; var1 < 30; ++var1) {
                     this.bt[var1] = 0;
                  }

                  for(var1 = 0; var1 < 26; ++var1) {
                     this.bu[var1] = 0;
                  }

                  this.bu[0] = 1;

                  for(var1 = 0; var1 < 26; ++var1) {
                     this.bv[var1] = 0;
                  }

                  for(var1 = 0; var1 < this.getLength(this.bk); ++var1) {
                     this.bk[var1] = -1;
                  }

                  this.bk[0] = 2;

                  for(var1 = 0; var1 < 26; ++var1) {
                     this.bw[var1] = 0;
                  }

                  for(var1 = 0; var1 < this.getLength(this.bx); ++var1) {
                     this.bx[var1] = 0;
                  }

                  this.bh = 0;
                  this.bi = 10;
                  this.bj = 0;

                  for(var1 = 0; var1 < this.getLength(this.by); ++var1) {
                     this.by[var1] = 0;
                  }

                  for(var1 = 0; var1 < this.getLength(this.bz); ++var1) {
                     this.bz[var1] = 0;
                  }

                  for(var1 = 0; var1 < this.getLength(this.bB); ++var1) {
                     this.bB[var1] = 0;
                  }

                  this.bg = 0;
                  break;
               }

               for(var3 = 0; var3 < this.getLength(this.br[var1]); ++var3) {
                  this.br[var1][var3] = 0;
               }

               ++var1;
            }
         }

         this.v = false;
         if (this.ht[1] == 0) {
            this.ht[0] = (int) MyUtility.getTimeStamp();
            this.ht[1] = 1;
            this.hu[1] = (int) MyUtility.getTimeStamp();
            this.hw[2] = (int) MyUtility.getTimeStamp();
         } else {
            int var10002;
            int[] var5;
            if ((int) MyUtility.getTimeStamp() - this.hu[1] >= 86400) {
               this.hu[1] = (int) MyUtility.getTimeStamp();
               var5 = this.hu;
               var10002 = var5[0]++;
               if (this.hu[0] >= 999999999) {
                  this.hu[0] = 999999999;
               }
            }

            var5 = this.hw;
            var5[0] *= this.hw[1];
            var5 = this.hw;
            var10002 = var5[1]++;
            var5 = this.hw;
            var5[0] += (int) MyUtility.getTimeStamp() - this.hw[2];
            this.hw[2] = (int) MyUtility.getTimeStamp();
            var5 = this.hw;
            var5[0] /= this.hw[1];
         }

         var1 = 0;

         for(var3 = 9; var3 < 26; ++var3) {
            var1 += this.bu[var3] << var3 - 9;
         }

         var4 = this.aX;
         var3 = var4;
         if (this.aX >= 2) {
            var3 = var4;
            if (this.bq[this.aX] >= 48) {
               var3 = var4 + 1;
            }
         }

         String var6 = this.a(this.ht[0], this.hu[0], this.hv, this.hw[0], this.hy, this.hz, var3, this.hB, this.hC[0], this.hC[1], this.hC[2], this.hC[3], this.hx, this.hG, this.hF, var1, this.hD, this.hE);
         //jp.co.ponos.library.a.a.b().a(var6);
         this.ae();
         this.hI = false;
         jp.co.ponos.library.score.a.b().a(this.C);
         jp.co.ponos.library.score.a.b().c();
         if (this.al.isLoaded()) {
            this.al.reset();
         }

         if (!this.al.isLoaded()) {
            this.al.load(MyUtility.getString(String.format("img%03d.png", 5)), MyUtility.getString(String.format("img%03d.imgcut", 5)));
         }

         if (this.am.isLoaded()) {
            this.am.reset();
         }

         if (!this.am.isLoaded()) {
            this.am.load(MyUtility.getString(String.format("img%03d.png", 34)), MyUtility.getString(String.format("img%03d.imgcut", 34)));
         }

         if (this.an.isLoaded()) {
            this.an.reset();
         }

         if (!this.an.isLoaded()) {
            this.an.load(MyUtility.getString(String.format("img%03d.png", 39)), MyUtility.getString(String.format("img%03d.imgcut", 39)));
         }

         MyUtility.getInstance().setWebClientViewer(this.c);
         this.U();
         this.D = 2;
         var2 = new AssetTextStream();
            if (var2.openRead(String.format("stage.csv"))) {
               for(var1 = 0; var1 < this.getLength(this.bG); ++var1) {
                  var2.readLine();
                  this.bG[var1] = var2.getInt(0);
               }
            }

            var2.close();
               if (var2.openRead(String.format("StampData.csv"))) {
                  for(var1 = 0; var1 < this.getLength(this.ho); ++var1) {
                     var2.readLine();

                     for(var3 = 0; var3 < this.getLength(this.ho[var1]); ++var3) {
                        this.ho[var1][var3] = var2.getInt(var3);
                     }
                  }
               }

               var2.close();
               this.eQ = 0;

               for(var1 = 0; var1 < 26; ++var1) {
                  this.d(var1);
               }

               for(var1 = 0; var1 < 26; ++var1) {
                  this.e(var1);
               }

               this.g();


      }

   }

   void a(int var1) {
      int var2 = 0;

      int var3;
      while(true) {
         if (var2 >= 10) {
            var3 = 0;
            break;
         }

         var3 = var2;
         if (this.bk[var2] == this.bR[0][var1][0]) {
            break;
         }

         ++var2;
      }

      if (this.bR[0][var1][1] == 0) {
         int[] var4 = this.bR[0][var1];
         int var10002 = var4[2]++;
      } else if (this.bR[0][var1][1] == 1) {
         if (this.au[var3][1].b() == 0) {
            this.bR[0][var1][2] = (this.bR[0][var1][2] + 1) % 1;
         } else {
            this.bR[0][var1][2] = (this.bR[0][var1][2] + 1) % this.au[var3][1].b();
         }
      } else if (this.bR[0][var1][1] == 2) {
         this.bR[0][var1][2] = (this.bR[0][var1][2] + 1) % this.au[var3][2].a();
      } else if (this.bR[0][var1][1] == 3) {
         this.bR[0][var1][2] = (this.bR[0][var1][2] + 1) % 24;
      } else if (this.bR[0][var1][1] == 4) {
         ++this.bR[0][var1][2];
      }

   }

   void a(int var1, int var2) {
      if (this.ft == -1) {
         if (this.ft == -1 && var1 != 0 && var1 == 1) {
            var1 = 0;

            label115:
            while(true) {
               if (var1 >= this.getLength(this.bR)) {
                  this.bR[1][0][8] = 10;
                  this.bR[1][0][10] = this.bY[dt[var2]][2];

                  for(var1 = 0; var1 < this.getLength(this.av); ++var1) {
                     if (this.av[var1].isLoaded()) {
                        this.av[var1].reset();
                     }
                  }

                  for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
                     if (this.ag[var1].isLoaded()) {
                        this.ag[var1].reset();
                     }
                  }

                  if (var2 < 0) {
                     break;
                  }

                  if (this.bt[dt[var2] - 2] == 0) {
                     var1 = 0;

                     while(true) {
                        if (var1 >= this.getLength(this.cR)) {
                           break label115;
                        }

                        if (!this.ag[var1].isLoaded()) {
                           this.ag[var1].a(this.cR[var1], "FONT_SYSTEM_BOLD", 30, 0);
                        }

                        ++var1;
                     }
                  }

                  if (var2 < 0) {
                     break;
                  }

                  if (!this.av[dt[var2] - 2].isLoaded()) {
                     if (dt[var2] - 2 == 21) {
                        this.av[dt[var2] - 2].load(MyUtility.getString(String.format("i%03d_e.png", dt[var2] - 2)), MyUtility.getString(String.format("i%03d_e.imgcut", dt[var2] - 2)));
                     } else {
                        this.av[dt[var2] - 2].load(MyUtility.getString(String.format("i%03d_e.png", dt[var2] - 2)), MyUtility.getString(String.format("%03d_e.imgcut", dt[var2] - 2)));
                     }

                     this.aw[0].a(String.format("%03d_e.mamodel", dt[var2] - 2));

                     for(var1 = 0; var1 < this.getLength(this.ax[0]); ++var1) {
                        this.ax[0][var1].load(String.format("%03d_e%02d.maanim", dt[var2] - 2, var1));
                     }

                     this.aw[0].a(this.av);
                     this.aw[0].a();
                  }

                  var1 = 0;

                  while(true) {
                     if (var1 >= this.getLength(this.cQ[dt[var2] - 2])) {
                        break label115;
                     }

                     if (!this.ag[var1].isLoaded()) {
                        this.ag[var1].a(this.cQ[dt[var2] - 2][var1], "FONT_SYSTEM_BOLD", 30, 0);
                     }

                     ++var1;
                  }
               }

               for(int var3 = 0; var3 < this.getLength(this.bR[var1]); ++var3) {
                  for(int var4 = 0; var4 < this.getLength(this.bR[var1][var3]); ++var4) {
                     this.bR[var1][var3][var4] = 0;
                  }
               }

               ++var1;
            }
         }

         this.ft = 1;
      }

   }

   @Override
   public void onTouchEvent(int eventID, int xCord, int yCord, int pointerID) {
      byte var5 = 0;
      int var6 = MyUtility.transCoordWindowToGLViewX(xCord);
      yCord = MyUtility.transCoordWindowToGLViewY(yCord);
      xCord = yCord;
      if (MyUtility.shouldOffsetY()) {
         xCord = yCord - 40;
      }

      if (var6 < 0) {
         yCord = 0;
      } else {
         yCord = var6;
         if (var6 > this.getWidth()) {
            yCord = this.getWidth();
         }
      }

      if (xCord < 0) {
         xCord = var5;
      } else if (xCord > 639) {
         xCord = 639;
      }

      this.zoom.onTouchEvent(eventID, yCord, xCord, pointerID);
      switch (eventID) {
         case 0:
            this.pointerID = pointerID;
            this.isPressEvent = true;
            this.touchY = yCord;
            this.touchX = xCord;
            break;
         case 1:
            if (pointerID == this.pointerID) {
               this.touchY = yCord;
               this.touchX = xCord;
            }
            break;
         case 2:
            if (pointerID == this.pointerID) {
               this.isReleaseEvent = true;
               this.touchY = yCord;
               this.touchX = xCord;
            }
      }

   }

   void a(TextureRenderer var1) {
      int var2;
      int var3;
      int var4;
      Texture var5;
      int var10;
      if (this.eE[0]) {
         int var6;
         int var7;
         int var8;
         int var9;
         int var11;
         if (this.eD[0] == 0) {
            if (this.eD[5] <= 3) {
               var2 = (100 - this.eD[4]) * 110 / 100;
               var3 = (100 - this.eD[4]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 10];
                  var6 = fb[var4 + 5];
                  var7 = (110 - var2) / 2;
                  var8 = this.excessWidth / 2;
                  var9 = this.eI[0];
                  var10 = this.eD[2];
                  var11 = (85 - var3) / 2;
                  var1.drawScaledImageI(var5, var8 + var6 + var7, this.eZ + var9 + 544 + var10 + var11, var2, var3, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4 + 5] + (110 - var2) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var3) / 2 + this.eZ, var2, var3);
                  var1.setAlpha(255);
               }

               var3 = (100 - this.eD[3]) * 110 / 100;
               var2 = (100 - this.eD[3]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 5];
                  var8 = fb[var4];
                  var11 = (110 - var3) / 2;
                  var9 = this.excessWidth / 2;
                  var6 = this.eI[0];
                  var7 = this.eD[1];
                  var10 = (85 - var2) / 2;
                  var1.drawScaledImageI(var5, var9 + var8 + var11, this.eZ + var6 + 544 + var7 + var10, var3, var2, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4] + (110 - var3) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var2) / 2 + this.eZ, var3, var2);
                  var1.setAlpha(255);
               }
            } else {
               var3 = (100 - this.eD[3]) * 110 / 100;
               var2 = (100 - this.eD[3]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 5];
                  var11 = fb[var4];
                  var10 = (110 - var3) / 2;
                  var8 = this.excessWidth / 2;
                  var6 = this.eI[0];
                  var7 = this.eD[1];
                  var9 = (85 - var2) / 2;
                  var1.drawScaledImageI(var5, var8 + var11 + var10, this.eZ + var6 + 544 + var7 + var9, var3, var2, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4] + (110 - var3) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var2) / 2 + this.eZ, var3, var2);
                  var1.setAlpha(255);
               }

               var2 = (100 - this.eD[4]) * 110 / 100;
               var3 = (100 - this.eD[4]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 10];
                  var8 = fb[var4 + 5];
                  var11 = (110 - var2) / 2;
                  var10 = this.excessWidth / 2;
                  var6 = this.eI[0];
                  var7 = this.eD[2];
                  var9 = (85 - var3) / 2;
                  var1.drawScaledImageI(var5, var10 + var8 + var11, this.eZ + var6 + 544 + var7 + var9, var2, var3, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4 + 5] + (110 - var2) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var3) / 2 + this.eZ, var2, var3);
                  var1.setAlpha(255);
               }
            }
         } else if (this.eD[0] == 1) {
            if (this.eD[5] <= 3) {
               var2 = (100 - this.eD[4]) * 110 / 100;
               var3 = (100 - this.eD[4]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 5];
                  var9 = fb[var4];
                  var7 = (110 - var2) / 2;
                  var11 = this.excessWidth / 2;
                  var10 = this.eI[0];
                  var8 = this.eD[2];
                  var6 = (85 - var3) / 2;
                  var1.drawScaledImageI(var5, var11 + var9 + var7, this.eZ + var10 + 544 + var8 + var6, var2, var3, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4] + (110 - var2) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var3) / 2 + this.eZ, var2, var3);
                  var1.setAlpha(255);
               }

               var2 = (100 - this.eD[3]) * 110 / 100;
               var3 = (100 - this.eD[3]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 10];
                  var10 = fb[var4 + 5];
                  var7 = (110 - var2) / 2;
                  var6 = this.excessWidth / 2;
                  var11 = this.eI[0];
                  var8 = this.eD[1];
                  var9 = (85 - var3) / 2;
                  var1.drawScaledImageI(var5, var6 + var10 + var7, this.eZ + var11 + 544 + var8 + var9, var2, var3, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4 + 5] + (110 - var2) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var3) / 2 + this.eZ, var2, var3);
                  var1.setAlpha(255);
               }
            } else {
               var2 = (100 - this.eD[3]) * 110 / 100;
               var3 = (100 - this.eD[3]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 10];
                  var10 = fb[var4 + 5];
                  var9 = (110 - var2) / 2;
                  var7 = this.excessWidth / 2;
                  var8 = this.eI[0];
                  var11 = this.eD[1];
                  var6 = (85 - var3) / 2;
                  var1.drawScaledImageI(var5, var7 + var10 + var9, this.eZ + var8 + 544 + var11 + var6, var2, var3, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4 + 5] + (110 - var2) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var3) / 2 + this.eZ, var2, var3);
                  var1.setAlpha(255);
               }

               var3 = (100 - this.eD[4]) * 110 / 100;
               var2 = (100 - this.eD[4]) * 85 / 100;

               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 5];
                  var7 = fb[var4];
                  var8 = (110 - var3) / 2;
                  var9 = this.excessWidth / 2;
                  var10 = this.eI[0];
                  var11 = this.eD[2];
                  var6 = (85 - var2) / 2;
                  var1.drawScaledImageI(var5, var9 + var7 + var8, this.eZ + var10 + 544 + var11 + var6, var3, var2, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4] + (110 - var3) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var2) / 2 + this.eZ, var3, var2);
                  var1.setAlpha(255);
               }
            }
         }
      } else {
         byte var12;
         if (this.eD[0] == 0) {
            if (this.gO) {
               for(var4 = 0; var4 < 5; ++var4) {
                  var5 = this.ae[var4 + 10];
                  var3 = fb[var4 + 5];
                  var10 = this.excessWidth / 2;
                  var2 = this.eI[0];
                  var1.drawScaledImageI(var5, var10 + var3, this.eZ + var2 + 544 + 12, 110, 85, 0);
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(100);
                  var1.drawRectangle(fb[var4 + 5] + this.excessWidth / 2, this.eI[0] + 544 + 12 + this.eZ, 110, 85);
                  var1.setAlpha(255);
               }
            }

            for(var4 = 0; var4 < 5; ++var4) {
               var5 = this.ae[var4 + 5];
               var3 = fb[var4];
               var2 = dv[this.fy[var4]] / 2;
               var1.drawScaledImageI(var5, this.excessWidth / 2 + (var3 - var2), this.eI[0] + 544 + this.eZ - dv[this.fy[var4]] / 2, dv[this.fy[var4]] + 110, dv[this.fy[var4]] + 85, 0);
               if (this.bk[var4] != -1) {
                  if (this.bM[10] >= this.bX[this.bk[var4]][this.eV[var4]][6] + this.bX[this.bk[var4]][this.eV[var4]][6] * this.eQ * 50 / 100) {
                     var12 = 0;
                  } else {
                     var12 = 1;
                  }

                  if (var12 == 1 || this.eW[var4] != 0) {
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(100);
                     var1.drawRectangle(fb[var4] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                  }

                  var1.setAlpha(255);
                  if (this.eW[var4] != 0) {
                     this.a(var1, var4, 0, 0);
                  } else if (this.bk[var4] != -1) {
                     this.a(var1, this.bX[this.bk[var4]][this.eV[var4]][6] / 100 + this.bX[this.bk[var4]][this.eV[var4]][6] / 100 * this.eQ * 50 / 100, fb[var4] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var12, 0, 0);
                  }
               }
            }
         } else if (this.eD[0] == 1) {
            for(var4 = 0; var4 < 5; ++var4) {
               var5 = this.ae[var4 + 5];
               var3 = fb[var4];
               var2 = this.excessWidth / 2;
               var10 = this.eI[0];
               var1.drawScaledImageI(var5, var2 + var3, this.eZ + var10 + 544 + 12, 110, 85, 0);
               var1.setColor(0, 0, 0);
               var1.setAlpha(100);
               var1.drawRectangle(fb[var4] + this.excessWidth / 2, this.eI[0] + 544 + 12 + this.eZ, 110, 85);
               var1.setAlpha(255);
            }

            for(var4 = 0; var4 < 5; ++var4) {
               var5 = this.ae[var4 + 10];
               var3 = fb[var4 + 5];
               var2 = dv[this.fy[var4]] / 2;
               var1.drawScaledImageI(var5, this.excessWidth / 2 + (var3 - var2), this.eI[0] + 544 + this.eZ - dv[this.fy[var4]] / 2, dv[this.fy[var4]] + 110, dv[this.fy[var4]] + 85, 0);
               if (this.bk[var4 + 5] != -1) {
                  if (this.bM[10] >= this.bX[this.bk[var4 + 5]][this.eV[var4 + 5]][6] + this.bX[this.bk[var4 + 5]][this.eV[var4 + 5]][6] * this.eQ * 50 / 100) {
                     var12 = 0;
                  } else {
                     var12 = 1;
                  }

                  if (var12 == 1 || this.eW[var4 + 5] != 0) {
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(100);
                     var1.drawRectangle(fb[var4 + 5] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                  }

                  var1.setAlpha(255);
                  if (this.eW[var4 + 5] != 0) {
                     this.a(var1, var4 + 5, 0, 0);
                  } else if (this.bk[var4 + 5] != -1) {
                     this.a(var1, this.bX[this.bk[var4 + 5]][this.eV[var4 + 5]][6] / 100 + this.bX[this.bk[var4 + 5]][this.eV[var4 + 5]][6] / 100 * this.eQ * 50 / 100, fb[var4 + 5] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var12, 0, 0);
                  }
               }
            }
         }
      }

      var1.setImageAlpha(255);
      var1.setImageColor(255, 255, 255);
      if (this.bR[0][0][12] == 0) {
         if (this.fc[1] == 0) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 96 + this.eI[0], 11);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 84 + this.eI[0], 12);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 72 + this.eI[0], 13);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 60 + this.eI[0], 14);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 48 + this.eI[0], 15);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 36 + this.eI[0], 16);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 24 + this.eI[0], 17);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 12 + this.eI[0], 18);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 0 + this.eI[0], 19);
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + this.eI[0], 20);
            var1.drawScaledImageI(this.ae[15], this.getWidth() - 125 - 4, this.eI[0] + 581 + this.eZ, 9);
         } else {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + this.eI[0], 7);
            var1.drawScaledImageI(this.ae[15], this.getWidth() - 125 - 4, this.eI[0] + 581 + this.eZ, 10);
         }
      } else {
         var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + this.eI[0], 8);
         this.eH[0] = (this.bR[0][0][11] - this.bR[0][0][12]) * 130 / this.bR[0][0][11];
         if (this.eH[0] >= 13) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 96 + this.eI[0], 11);
         }

         if (this.eH[0] >= 26) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 84 + this.eI[0], 12);
         }

         if (this.eH[0] >= 39) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 72 + this.eI[0], 13);
         }

         if (this.eH[0] >= 52) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 60 + this.eI[0], 14);
         }

         if (this.eH[0] >= 65) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 48 + this.eI[0], 15);
         }

         if (this.eH[0] >= 78) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 36 + this.eI[0], 16);
         }

         if (this.eH[0] >= 91) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 24 + this.eI[0], 17);
         }

         if (this.eH[0] >= 104) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 12 + this.eI[0], 18);
         }

         if (this.eH[0] >= 117) {
            var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 0 + this.eI[0], 19);
         }
      }

      if (this.bN[0] == 7) {
         var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
         var1.drawScaledImageI(this.ae[4], this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 81);
         var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
         var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
      } else if (this.bM[11] + 1 >= 8) {
         if (this.bM[10] >= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
            if (this.fc[1] == 0) {
               var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
            } else {
               var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 24);
            }

            this.a(var1, ((this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 2, 0, 0);
            var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
            var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
         } else {
            var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 5);
            this.a(var1, ((this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 3, 0, 0);
            var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 24);
            var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 25 + 1);
         }
      } else if (this.bM[10] >= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
         if (this.fc[1] == 0) {
            var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
         } else {
            var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 24);
         }

         this.a(var1, ((this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 2, 0, 0);
         var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
         var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
      } else {
         var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 5);
         this.a(var1, ((this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 3, 0, 0);
         var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 24);
         var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 25 + 1);
      }

   }

   void a(TextureRenderer var1, int var2) {
      var1.removeAnimTransformer();
      if (this.eb) {
         if (var2 == 0) {
            var1.setColor(0, 0, 0);
            if (this.ec <= 25) {
               if (this.ec * 10 <= 255) {
                  var1.setAlpha(this.ec * 10);
               }
            } else if (this.ec == 26) {
               var1.setAlpha(255);
            } else if (this.ec <= 50) {
               if (255 - (this.ec - 25) * 10 >= 0) {
                  var1.setAlpha(255 - (this.ec - 25) * 10);
               }
            } else {
               var1.setAlpha(0);
            }

            var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
         } else if (var2 == 1) {
            var1.setColor(0, 0, 0);
            if (this.ec <= 11) {
               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() - 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 - 13;
                  this.gk[0][1] = this.getWidth() - this.ec * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 - 68;
                  this.gk[0][2] = this.getWidth() - this.ec * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 42;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() - 55 - this.ec * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 + 66;
                  this.gk[0][1] = this.getWidth() - this.ec * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 + 42;
                  this.gk[0][2] = this.getWidth() - this.ec * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 90;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() * 2 + 110 + 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 - 13;
                  this.gk[0][1] = this.getWidth() * 2 + 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 - 68;
                  this.gk[0][2] = this.getWidth() * 2 + 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 42;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() * 2 + 110 + 55 - this.ec * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 + 66;
                  this.gk[0][1] = this.getWidth() * 2 + 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 + 42;
                  this.gk[0][2] = this.getWidth() * 2 + 110 - this.ec * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 90;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               var1.setColor(0, 0, 0);
               var1.drawRectangle(this.getWidth() - this.ec * this.getWidth() / 10, -this.eZ, this.getWidth() + 110, this.getHeight());
               if (this.ec == 11) {
                  var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               }
            } else {
               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() - 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 - 13;
                  this.gk[0][1] = this.getWidth() - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 - 68;
                  this.gk[0][2] = this.getWidth() - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 42;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() - 55 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 + 66;
                  this.gk[0][1] = this.getWidth() - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 + 42;
                  this.gk[0][2] = this.getWidth() - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 90;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() * 2 + 110 + 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 - 13;
                  this.gk[0][1] = this.getWidth() * 2 + 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 - 68;
                  this.gk[0][2] = this.getWidth() * 2 + 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 42;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               for(var2 = 0; var2 < 10; ++var2) {
                  this.gk[0][0] = this.getWidth() * 2 + 110 + 55 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][0] = (var2 - 2) * 158 + 66;
                  this.gk[0][1] = this.getWidth() * 2 + 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][1] = (var2 - 2) * 158 + 42;
                  this.gk[0][2] = this.getWidth() * 2 + 110 - (this.ec - 1) * this.getWidth() / 10;
                  this.gk[1][2] = (var2 - 2) * 158 + 90;
                  var1.drawVertices(this.gk[0], this.gk[1], 3);
               }

               var1.setColor(0, 0, 0);
               var1.drawRectangle(this.getWidth() - (this.ec - 1) * this.getWidth() / 10, -this.eZ, this.getWidth() + 110, this.getHeight());
            }
         }
      }

   }

   int b(int var1, int var2, int var3, int var4, int var5, int var6) {
      String var7 = String.format("%04d%02d%02d%02d%02d%02d", var1, var2, var3, var4, var5, var6);
      Date var8 = this.hJ.parse(var7, new ParsePosition(0));
      var7 = this.hK.format(var8);
       try {
           return this.a(DateFormat.getDateTimeInstance().parse(var7));
       } catch (ParseException exc) {
           throw new RuntimeException(exc);
       }
   }
   @Override
   public void onRestart() {
      this.D = 3;
      int[] var1 = this.hw;
      var1[0] *= this.hw[1];
      var1 = this.hw;
      int var10002 = var1[1]++;
      var1 = this.hw;
      var1[0] += (int) MyUtility.getTimeStamp() - this.hw[2];
      this.hw[2] = (int) MyUtility.getTimeStamp();
      var1 = this.hw;
      var1[0] /= this.hw[1];
      int var2 = 0;

      int var3;
      for(var3 = 9; var3 < 26; ++var3) {
         var2 += this.bu[var3] << var3 - 9;
      }

      int var4 = this.aX;
      var3 = var4;
      if (this.aX >= 2) {
         var3 = var4;
         if (this.bq[this.aX] >= 48) {
            var3 = var4 + 1;
         }
      }

      String var5 = this.a(this.ht[0], this.hu[0], this.hv, this.hw[0], this.hy, this.hz, var3, this.hB, this.hC[0], this.hC[1], this.hC[2], this.hC[3], this.hx, this.hG, this.hF, var2, this.hD, this.hE);
      if ((int) MyUtility.getTimeStamp() - this.hu[1] >= 86400) {
         this.hu[1] = (int) MyUtility.getTimeStamp();
         var1 = this.hu;
         var10002 = var1[0]++;
         if (this.hu[0] >= 999999999) {
            this.hu[0] = 999999999;
         }
      }

      //jp.co.ponos.library.a.a.b().a(var5);
      this.ae();
   }

   void b(int var1) {
      int var2 = 0;

      int var3;
      while(true) {
         if (var2 >= 10) {
            var3 = 0;
            break;
         }

         var3 = var2;
         if (this.eU[var2] == this.bR[1][var1][0]) {
            break;
         }

         ++var2;
      }

      if (this.bR[1][var1][1] == 0) {
         int[] var4 = this.bR[1][var1];
         int var10002 = var4[2]++;
      } else if (this.bR[1][var1][1] == 1) {
         if (this.ax[var3][1].b() == 0) {
            this.bR[1][var1][2] = (this.bR[1][var1][2] + 1) % 1;
         } else {
            this.bR[1][var1][2] = (this.bR[1][var1][2] + 1) % this.ax[var3][1].b();
         }
      } else if (this.bR[1][var1][1] == 2) {
         this.bR[1][var1][2] = (this.bR[1][var1][2] + 1) % this.ax[var3][2].a();
      } else if (this.bR[1][var1][1] == 3) {
         this.bR[1][var1][2] = (this.bR[1][var1][2] + 1) % 24;
      } else if (this.bR[1][var1][1] == 4) {
         ++this.bR[1][var1][2];
      } else if (this.bR[1][var1][1] == 5) {
         this.bR[1][var1][2] = (this.bR[1][var1][2] + 1) % 12;
      }

   }

   void b(TextureRenderer var1) {
      int var2;
      int var3;
      if (this.bM[15] >= 1) {
         var2 = this.bM[16];
         if (this.bM[15] != 1) {
            var3 = this.getLength(cq) - 1;
         } else {
            var3 = var2;
            if (var2 > this.getLength(cq) - 1) {
               var3 = this.getLength(cq) - 1;
            }
         }

         var1.drawScaledImageI(this.ae[19], this.getWidth() / 2 - 239 - cq[var3], 190, 0);
      }

      int var4;
      if (this.bM[15] >= 2) {
         var2 = this.bM[16];
         if (this.bM[15] != 2) {
            var3 = this.getLength(cq) - 1;
         } else {
            var3 = var2;
            if (var2 > this.getLength(cq) - 1) {
               var3 = this.getLength(cq) - 1;
            }
         }

         var1.setBlendMode(3);
         var1.setColor(40, 40, 77);
         var1.drawRectangle(0 - cq[var3], 315, this.getWidth(), 55);
         var1.setBlendMode(0);
         var4 = 10;

         for(var2 = 0; var4 <= this.bM[17]; --var2) {
            var4 *= 10;
         }

         int var5 = this.getWidth() / 2;
         int var6 = cq[var3];
         var1.drawScaledImageI(this.ae[19], var5 - 14 - 99 + var2 * 14 - var6 - 20, 322, 1);

         for(var4 /= 10; var4 >= 1; var4 /= 10) {
            var5 = this.getWidth() / 2;
            var6 = cq[var3];
            var1.drawScaledImageI(this.ae[4], var5 - 14 + var2 * 14 - var6, 321, this.bM[17] / var4 % 10);
            var2 += 2;
         }

         var4 = this.getWidth() / 2;
         var3 = cq[var3];
         var1.drawScaledImageI(this.ae[19], var2 * 14 + (var4 - 14) - var3 + 20, 324, 2);
      }

      if (this.bM[15] == 4 && this.bM[18] >= 1) {
         var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.eP] * 690 / 100 / 2, 490 - eO[this.eP] * 179 / 100 / 2, eO[this.eP] * 690 / 100, eO[this.eP] * 179 / 100, 0);
         if (this.eP >= this.getLength(eO) - 1) {
            var1.setColor(255, 255, 0);
            if (this.p == 0) {
               var2 = Texture.b(this.cH[3], 30) + 15 + Texture.b(this.cH[this.bM[18] - 1], 30) + Texture.b(this.cG[this.bM[20]], 30);
               var1.drawScaledImage(this.ag[0], this.getWidth() / 2 - var2 / 2, 444, 0);
               var3 = this.getWidth() / 2;
               var2 /= 2;
               var4 = Texture.b(this.cH[3], 30);
               var1.setColor(255, 255, 255);
               var1.drawScaledImage(this.ag[1], var3 - var2 + var4 + 15, 444, 0);
               if (this.bM[16] % 4 != 0 && this.bM[16] % 4 != 1) {
                  var1.setColor(255, 0, 255);
               } else {
                  var1.setColor(255, 255, 0);
               }

               var3 = Texture.b(this.cH[6], 30);
               var1.drawScaledImage(this.ag[2], this.getWidth() / 2 - var3 / 2, 492, 0);
            } else if (this.p == 1) {
               if (this.bM[16] % 4 != 0 && this.bM[16] % 4 != 1) {
                  var1.setColor(255, 0, 255);
               } else {
                  var1.setColor(255, 255, 0);
               }

               var2 = Texture.b(this.cH[6], 30) + 15 + Texture.b(this.cH[9], 30);
               var1.drawScaledImage(this.ag[0], this.getWidth() / 2 - var2 / 2, 444, 0);
               var3 = this.getWidth() / 2;
               var3 = var2 / 2;
               var1.setColor(255, 255, 255);
               var3 = Texture.b(this.cH[this.bM[18] - 1], 30);
               var2 = Texture.b(this.cG[this.bM[20]], 30);
               var1.drawScaledImage(this.ag[1], this.getWidth() / 2 - (var3 + 15 + var2) / 2, 492, 0);
            }
         }
      }

      if (this.bM[15] == 5) {
         var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.eP] * 690 / 100 / 2, 490 - eO[this.eP] * 179 / 100 / 2, eO[this.eP] * 690 / 100, eO[this.eP] * 179 / 100, 0);
         if (this.eP >= this.getLength(eO) - 1) {
            if (this.p == 0) {
               var3 = Texture.b(this.cI[this.bM[19]][0], 30);
               var1.setColor(255, 255, 255);
               var1.drawScaledImage(this.ag[0], this.getWidth() / 2 - var3 / 2, 444, 0);
               if (this.bM[16] % 4 != 0 && this.bM[16] % 4 != 1) {
                  var1.setColor(255, 0, 255);
               } else {
                  var1.setColor(255, 255, 0);
               }

               var3 = Texture.b(this.cH[5], 30);
               var1.drawScaledImage(this.ag[1], this.getWidth() / 2 - var3 / 2, 492, 0);
            } else if (this.p == 1) {
               var3 = Texture.b(this.cI[this.bM[19]][0], 30);
               var1.setColor(255, 255, 255);
               var1.drawScaledImage(this.ag[0], this.getWidth() / 2 - var3 / 2, 492, 0);
               if (this.bM[16] % 4 != 0 && this.bM[16] % 4 != 1) {
                  var1.setColor(255, 0, 255);
               } else {
                  var1.setColor(255, 255, 0);
               }

               var3 = Texture.b(this.cH[5], 30);
               var1.drawScaledImage(this.ag[1], this.getWidth() / 2 - var3 / 2, 444, 0);
            }
         }
      }

   }
    @Override
   public void onResume() {
      this.b = true;
      Sound.getInstance().resume();

      for(int i = 0; i < 43; ++i) {
         Sound.getInstance().load(i);
      }

      Sound.getInstance().reloadSounds();
      this.zoom.reset();
      this.pointerDownNow = false;
      this.isPressEvent = false;
      this.isReleaseEvent = false;
      this.pointerUp = false;
      this.pointerDown = false;
   }

   void c(int var1) {
      if (this.bk[var1] == -1) {
         Sound.getInstance().play(15);
      } else if (this.eW[var1] != 0) {
         Sound.getInstance().play(15);
      } else if (this.bM[10] < this.bX[this.bk[var1]][this.eV[var1]][6] + this.bX[this.bk[var1]][this.eV[var1]][6] * this.eQ * 50 / 100) {
         Sound.getInstance().play(15);
      } else if (this.a(0, this.bk[var1], this.bv[this.bk[var1] - 2], 0, 9, this.eV[var1]) >= 0) {
         this.fU = 0;
         int[] var2 = this.bM;
         var2[10] -= this.bX[this.bk[var1]][this.eV[var1]][6] + this.bX[this.bk[var1]][this.eV[var1]][6] * this.eQ * 50 / 100;
         this.eW[var1] = this.bX[this.bk[var1]][this.eV[var1]][7];
         var2 = this.eW;
         var2[var1] -= ad[7] + this.bx[7] * 6;

         for(int var3 = 0; var3 < 10; ++var3) {
            var2 = this.eW;
            var2[var1] -= cB[2] * this.bO[var3][2] / 100;
         }

         if (this.eW[var1] <= 60) {
            this.eW[var1] = 60;
         }

         if (this.hm[3] == 1) {
            this.eW[var1] = 0;
         }

         Sound.getInstance().play(19);
      } else {
         Sound.getInstance().play(15);
      }

   }

   void c(TextureRenderer var1) {
      int var2;
      int var3;
      if (this.bM[15] >= 2) {
         var2 = 80;
         if (this.bM[15] == 2) {
            var2 = this.bM[16];
         }

         var3 = var2;
         if (var2 > 80) {
            var3 = 80;
         }

         var2 = var3 * 255 / 80;
         var1.setBlendMode(3);
         var1.setColor(255 - var2, 255 - var2, 255 - var2);
         var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
         var1.setBlendMode(0);
      }

      var1.setAlpha(255);
      if (this.bM[15] >= 1) {
         var3 = this.bM[16];
         if (this.bM[15] != 1) {
            var2 = this.getLength(cs) - 1;
         } else {
            var2 = var3;
            if (var3 > this.getLength(cs) - 1) {
               var2 = this.getLength(cs) - 1;
            }
         }

         var1.drawScaledImageI(this.ae[19], this.getWidth() / 2 - 152, cs[var2] + this.ei[2], 3);
      }

      if (this.bM[15] == 3) {
         if (!this.eb) {
            var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.eP] * 690 / 100 / 2, 462 - eO[this.eP] * 229 / 100 / 2, eO[this.eP] * 690 / 100, eO[this.eP] * 229 / 100, 0);
            if (this.eP >= this.getLength(eO) - 1) {
               var1.setColor(255, 255, 255);
               var2 = 0;

               for(var3 = 0; var3 < 4 && !aString.equals(this.cE[2][var3], "＠"); ++var3) {
                  var2 = -var3;
               }

               for(var3 = 0; var3 < this.getLength(this.cE[2]) && !aString.equals(this.cE[2][var3], "＠"); ++var3) {
                  var1.drawScaledImage(this.ag[var3], this.getWidth() / 2, var2 * 18 + 404, 1);
                  var2 += 2;
               }

               var2 = 30;
               var3 = 0;

               int var4;
               int var5;
               do {
                  var1.drawScaledImageI(this.ae[4], 825 - var3 * 29 - 30 + this.excessWidth / 2, 306, var2 % 10);
                  var4 = var2 / 10;
                  var5 = var3 + 1;
                  var3 = var5;
                  var2 = var4;
               } while(var4 > 0);

               if (var5 >= 5) {
                  var2 = var5 - 4;
               } else {
                  var2 = 0;
               }

               var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (642 - var2 * 29), 306, 55, 42, 21);
               var1.drawScaledImage(this.ae[15], (float)(593 - var2 * 29 + this.excessWidth / 2), 320.0F, 47.0F, 28.0F, 43);
               var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 116 - dv[this.fx[0]] / 2, 480 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 168, dv[this.fx[0]] + 72, 2);
               var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 406 - dv[this.fx[1]] / 2, 480 - dv[this.fx[1]] / 2, dv[this.fx[1]] + 168, dv[this.fx[1]] + 72, 2);
               var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 125 - dv[this.fx[0]] / 2, 488 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 150, dv[this.fx[0]] + 55, 4);
               var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 415 - dv[this.fx[1]] / 2, 488 - dv[this.fx[1]] / 2, dv[this.fx[1]] + 150, dv[this.fx[1]] + 55, 5);
               if (this.fx[0] == 0 && this.fx[1] == 0 && !this.gu && !this.gU && this.R() && (this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) || this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3]))) {
                  if (this.bM[16] % 4 != 0 && this.bM[16] % 4 != 1) {
                     if (this.fa == 0) {
                        var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 115, 479, 170, 75, 7);
                     } else if (this.fa == 1) {
                        var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 405, 479, 170, 75, 7);
                     }
                  } else if (this.fa == 0) {
                     var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 115, 479, 170, 75, 6);
                  } else if (this.fa == 1) {
                     var1.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 345 + 405, 479, 170, 75, 6);
                  }
               }

               Texture var6 = this.ae[21];
               var2 = dv[this.fx[14]] / 2;
               var1.drawScaledImageI(var6, this.excessWidth + (688 - var2), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
               var6 = this.ae[21];
               var2 = dv[this.fx[14]] / 2;
               var1.drawScaledImageI(var6, this.excessWidth + (733 - var2), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
               var2 = this.aL;
               var3 = 0;

               do {
                  var1.drawScaledImageI(this.ae[4], 924 - var3 * 29 + this.excessWidth, 592, var2 % 10);
                  var5 = var2 / 10;
                  ++var3;
                  var2 = var5;
               } while(var5 > 0);

               var1.drawScaledImageI(this.ae[21], this.excessWidth + 610, 607, 76, 25, 24);
            }
         }
      } else if (this.bM[15] == 4 && this.bM[24] == 1) {
         var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.eP] * 690 / 100 / 2, 490 - eO[this.eP] * 229 / 100 / 2, eO[this.eP] * 690 / 100, eO[this.eP] * 229 / 100, 0);
         if (this.eP >= this.getLength(eO) - 1) {
            var1.setColor(255, 255, 255);
            var3 = 0;

            for(var2 = 0; var2 < this.getLength(this.da[this.eQ][this.eS]) && !aString.equals(this.da[this.eQ][this.eS][var2], "＠"); ++var2) {
               var3 = -(var2 - 1);
            }

            --var3;

            for(var2 = 0; var2 < this.getLength(this.da[this.eQ][this.eS]) && !aString.equals(this.da[this.eQ][this.eS][var2], "＠"); ++var2) {
               var1.drawScaledImage(this.ag[var2 + 2], this.getWidth() / 2, var3 * 18 + 472, 1);
               var3 += 2;
            }
         }
      }

   }

   boolean c(int var1, int var2, int var3, int var4, int var5, int var6) {
      int var7 = 0;

      int var8;
      int var9;
      label45: {
         label44: {
            label49: {
               boolean var10001;
               try {
                  var8 = this.b(this.aN[0], this.aO[0] + 1, this.aP[0], this.aR, this.aS, this.aT);
               } catch (Exception var12) {
                  var10001 = false;
                  break label49;
               }

               var7 = var8;

               try {
                  var9 = this.b(var1, var2 + 1, var3, var4, var5, var6);
                  break label44;
               } catch (Exception var11) {
                  var10001 = false;
               }
            }

            var9 = 0;
            var8 = var7;
            break label45;
         }

         var9 = var9;
      }

      var7 = var9 - var8;
      if (var7 >= 60) {
         this.aN[0] = var1;
         this.aO[0] = var2;
         this.aP[0] = var3;
         this.aR = var4;
         this.aS = var5;
         this.aT = var6;
         var1 = this.aM;
         this.aM = var7 / 60 + var1;
         var2 = 0;

         for(var1 = 0; var1 < 10; ++var1) {
            var2 += cB[10] * this.bO[var1][10] / 100;
         }

         if (this.aM >= ad[10] + this.bx[10] * 10 + var2) {
            this.aM = var2 + ad[10] + this.bx[10] * 10;
         }
      } else if (var7 <= -1 && var7 < -86400) {
         Calendar var10 = Calendar.getInstance();
         var10.set(var1, var2, var3, var4, var5, var6);
         var10.add(5, 1);
         this.aN[0] = var10.get(1);
         this.aO[0] = var10.get(2);
         this.aP[0] = var10.get(5);
         this.aR = var10.get(11);
         this.aS = var10.get(12);
         this.aT = var10.get(13);
      }

      return true;
   }

   @Override
   public void onPause() {
      this.b = false;
      Sound.getInstance().stopAll();

      for(int var1 = 0; var1 < 43; ++var1) {
         Sound.getInstance().unloadSoundEffect(var1);
      }

      Sound.getInstance().d();
      this.zoom.reset();
      this.pointerDownNow = false;
      this.isPressEvent = false;
      this.isReleaseEvent = false;
      this.pointerUp = false;
      this.pointerDown = false;
   }

   void d(int var1) {
      int var2 = 0;
      //if (!jp.co.ponos.library.b.aa.equals(jp.co.ponos.library.b.stream.b.d(String.format("unitbuy%03d.csv", var1 + 1)), (new String[]{"804ffc7cbfb735e79d355538117f602a", "da00d88cc9c3127e88a999879e203a80", "3cf141900d9b21d99811dc850408f901", "4960b382d7171aa0340ae7559f380bea", "47b5dc4ab2521d191b92c7b2f9a5ba2c", "8f9a611bb43e9252e7469274eba48ecb", "1dc60dd4e820a3367da711966904ffbf", "d0cba580b0d3ef8dd3c084912ffd437a", "83d503725ab63f834afda0f11b7027ba", "1e7c9194142f634fc2b7cd01cdef3ef4", "553afaf8a7b6d47304269a93c9f76636", "fb9fe18da89f1b96f739adbe931c7fe0", "3d260bfb7d74ab43f9f31495a257b5f1", "bd06858427bdea0199d2d7e12c24e903", "9761b3638597a99b9dfef46d097d0ed2", "61a2e033ae724d6ae337294ed3db38cd", "3591f4ee40440ed4e73494b4c9eef85a", "74330d071ce91eb822951f64104d1b30", "dab38fe098106d2ac187fa410c978486", "22f151fe39ffa40b088f2d64a182c9e5", "191afdccc437d2917500675ced12fb3f", "fd09308a974adeaf7db94cc205f6b10b", "30bb912a4cf7b19c23136af2f3804cbd", "d6ea2f2b783d3ba4ba9cee5caa92550b", "363076546cdfe5f0f6448844f571e353", "e49bd23022e28870bee5cf9315df487d"})[var1])) {
      //   this.D = 0;
      //   this.j(4);
      //} else {
          AssetTextStream var3 = new AssetTextStream();
         var3.openRead(String.format("unitbuy%03d.csv", var1 + 1));
         var3.readLine();

         while(var2 < this.getLength(this.bJ[var1])) {
            this.bJ[var1][var2] = var3.getInt(var2);
            ++var2;
         }

         var3.close();
      //}

   }

   void d(TextureRenderer var1) {
      int var2 = 0;
      int var3;
      int var4;
      if (this.bM[15] >= 1) {
         var3 = this.bM[16];
         if (this.bM[15] != 1) {
            var4 = this.getLength(cq) - 1;
         } else {
            var4 = var3;
            if (var3 > this.getLength(cq) - 1) {
               var4 = this.getLength(cq) - 1;
            }
         }

         var1.drawScaledImageI(this.ae[19], this.getWidth() / 2 - 239 - cq[var4], 190, 0);
      }

      if (this.bM[15] >= 2) {
         var3 = this.bM[16];
         if (this.bM[15] != 2) {
            var4 = this.getLength(cq) - 1;
         } else {
            var4 = var3;
            if (var3 > this.getLength(cq) - 1) {
               var4 = this.getLength(cq) - 1;
            }
         }

         var1.setBlendMode(3);
         var1.setColor(40, 40, 77);
         var1.drawRectangle(0 - cq[var4], 315, this.getWidth(), 55);
         var1.setBlendMode(0);

         for(var3 = 10; var3 <= this.bM[22]; --var2) {
            var3 *= 10;
         }

         int var5 = this.getWidth() / 2;
         int var6 = cq[var4];
         var1.drawScaledImageI(this.ae[19], var5 - 14 - 144 + var2 * 14 - var6 - 20, 324, 5);

         for(var3 /= 10; var3 >= 1; var3 /= 10) {
            var5 = this.getWidth() / 2;
            var6 = cq[var4];
            var1.drawScaledImageI(this.ae[4], var5 - 14 + var2 * 14 - var6, 321, this.bM[22] / var3 % 10);
            var2 += 2;
         }

         var3 = this.getWidth() / 2;
         var4 = cq[var4];
         var1.drawScaledImageI(this.ae[19], var2 * 16 + (var3 - 16) - var4 + 20, 323, 4);
         if (this.bM[15] >= 3) {
            var4 = this.bM[23];
         }
      }

   }
    @Override
   public void onProcess() {
      this.excessWidth = this.getWidth() - 960;
      this.previousYTouch = this.currentYTouch;
      this.previousXTouch = this.currentXTouch;
      this.currentYTouch = this.touchY;
      this.currentXTouch = this.touchX;
      int var1;
      if (this.isReleaseEvent) {
         this.isReleaseEvent = false;
         this.pointerUp = true;
         this.pointerDown = false;
         this.pointerDownNow = false;
         this.isPressEvent = false;
      } else if (this.isPressEvent) {
         this.isPressEvent = false;
         this.pointerUp = false;
         this.pointerDown = true;
         this.pointerDownNow = true;
         var1 = this.currentYTouch;
         this.previousYTouch = var1;
         this.G = var1;
         var1 = this.currentXTouch;
         this.previousXTouch = var1;
         this.K = var1;
      } else {
         this.pointerUp = false;
         this.pointerDownNow = false;
      }

      this.R = this.backPressed;
      this.backPressed = false;
      if (this.D != 1 && this.D != 3) {
         int var2;
         if (this.D == 2 || this.D == 4) {
            if (this.al.isLoaded()) {
               this.al.reset();
            }

            if (!this.al.isLoaded()) {
               this.al.load(MyUtility.getString(String.format("img%03d.png", 5)), MyUtility.getString(String.format("img%03d.imgcut", 5)));
            }

            if (this.am.isLoaded()) {
               this.am.reset();
            }

            if (!this.am.isLoaded()) {
               this.am.load(MyUtility.getString(String.format("img%03d.png", 34)), MyUtility.getString(String.format("img%03d.imgcut", 34)));
            }

            if (this.an.isLoaded()) {
               this.an.reset();
            }

            if (!this.an.isLoaded()) {
               this.an.load(MyUtility.getString(String.format("img%03d.png", 39)), MyUtility.getString(String.format("img%03d.imgcut", 39)));
            }

            if (this.af[2].isLoaded()) {
               this.af[2].reset();
            }

            if (!this.af[2].isLoaded()) {
               this.af[2].load(MyUtility.getString(String.format("img%03d.png", 101)), MyUtility.getString(String.format("img%03d.imgcut", 101)));
            }

            if (this.af[3].isLoaded()) {
               this.af[3].reset();
            }

            if (!this.af[3].isLoaded()) {
               this.af[3].load(MyUtility.getString(String.format("img%03d.png", 102)), MyUtility.getString(String.format("img%03d.imgcut", 102)));
            }

            switch (this.getScene()) {
               case 98:
                  if (!this.ao[0].isLoaded()) {
                     this.ao[0].reset();
                  }

                  if (!this.ao[0].isLoaded()) {
                     this.ao[0].load(MyUtility.getString(String.format("img%03d.png", 13)), MyUtility.getString(String.format("000_img%03d.imgcut", 13)));
                  }

                  this.ap[0].a(MyUtility.getString(String.format("opening.mamodel")));
                  this.aq[0].load(MyUtility.getString(String.format("opening.maanim")));
                  this.ap[0].a(this.ao);
                  this.ap[0].a();
                  if (this.ae[2].isLoaded()) {
                     this.ae[2].reset();
                  }

                  if (!this.ae[2].isLoaded()) {
                     this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                  }
                  break;
               case 99:
                  if (this.ae[0].isLoaded()) {
                     this.ae[0].reset();
                  }

                  if (!this.ae[0].isLoaded()) {
                     this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 35)), MyUtility.getString(String.format("img%03d.imgcut", 35)));
                  }

                  if (this.ae[1].isLoaded()) {
                     this.ae[1].reset();
                  }

                  if (!this.ae[1].isLoaded()) {
                     this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                  }

                  if (this.ae[2].isLoaded()) {
                     this.ae[2].reset();
                  }

                  if (!this.ae[2].isLoaded()) {
                     this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                  }

                  if (this.ae[3].isLoaded()) {
                     this.ae[3].reset();
                  }

                  if (!this.ae[3].isLoaded()) {
                     this.ae[3].load(MyUtility.getString(String.format("img%03d.png", 36)), MyUtility.getString(String.format("img%03d.imgcut", 36)));
                  }
                  break;
               case 100:
                  if (this.screen == 0) {
                     if (this.af[1].isLoaded()) {
                        this.af[1].reset();
                     }

                     if (!this.af[1].isLoaded()) {
                        this.af[1].load(MyUtility.getString(String.format("img%03d.png", 100)), MyUtility.getString(String.format("img%03d.imgcut", 100)));
                     }

                     if (!this.ae[0].isLoaded()) {
                        this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 12)), MyUtility.getString(String.format("img%03d.imgcut", 12)));
                     }

                     if (!this.ae[1].isLoaded()) {
                        this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 11)), MyUtility.getString(String.format("img%03d.imgcut", 11)));
                     }

                     if (!this.ae[2].isLoaded()) {
                        this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                     }

                     if (!this.ae[3].isLoaded()) {
                        this.ae[3].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }

                     if (!this.ae[4].isLoaded()) {
                        this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                     }

                     if (!this.ae[5].isLoaded()) {
                        this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 33)), MyUtility.getString(String.format("img%03d.imgcut", 33)));
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 1)), MyUtility.getString(String.format("img%03d.imgcut", 1)));
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 2)), MyUtility.getString(String.format("img%03d.imgcut", 2)));
                     }

                     if (!this.ae[8].isLoaded()) {
                        this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 19)), MyUtility.getString(String.format("img%03d.imgcut", 19)));
                     }

                     if (!this.ae[9].isLoaded()) {
                        this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 31)), MyUtility.getString(String.format("img%03d.imgcut", 31)));
                     }
                  }

                  if (this.screen == 5 || this.screen == 4 || this.screen == 9 || this.screen == 7 || this.screen == 3 || this.screen == 6 || this.screen == 8 || this.screen == 999 || this.screen == 9999) {
                     if (this.af[0].isLoaded()) {
                        this.af[0].reset();
                     }

                     if (!this.af[0].isLoaded()) {
                        this.af[0].load(MyUtility.getString(String.format("img%03d_%d.png", 9, this.eQ + 3)), MyUtility.getString(String.format("img%03d_%d.imgcut", 9, this.eQ + 3)));
                     }

                     if (this.ae[0].isLoaded()) {
                        this.ae[0].reset();
                     }

                     if (!this.ae[0].isLoaded()) {
                        this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                     }

                     if (this.ae[1].isLoaded()) {
                        this.ae[1].reset();
                     }

                     if (!this.ae[1].isLoaded()) {
                        this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                     }

                     if (this.ae[2].isLoaded()) {
                        this.ae[2].reset();
                     }

                     if (!this.ae[2].isLoaded()) {
                        this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 8)), MyUtility.getString(String.format("img%03d.imgcut", 8)));
                     }

                     if (this.ae[3].isLoaded()) {
                        this.ae[3].reset();
                     }

                     if (!this.ae[3].isLoaded()) {
                        this.ae[3].load(MyUtility.getString(String.format("img%03d_%d.png", 9, 0)), MyUtility.getString(String.format("img%03d.imgcut", 9)));
                     }

                     if (this.ae[4].isLoaded()) {
                        this.ae[4].reset();
                     }

                     if (!this.ae[4].isLoaded()) {
                        this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 10)), MyUtility.getString(String.format("img%03d.imgcut", 10)));
                     }

                     if (this.ae[5].isLoaded()) {
                        this.ae[5].reset();
                     }

                     if (!this.ae[5].isLoaded()) {
                        this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 24)), MyUtility.getString(String.format("img%03d.imgcut", 24)));
                     }
                  }

                  if (this.screen == 4) {
                     for(var1 = 0; var1 < 10; ++var1) {
                        if (!this.ak[var1].isLoaded()) {
                           if (this.bk[var1] == -1) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                           } else if (this.eV[var1] == 0) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var1] - 2, 0)));
                           } else if (this.eV[var1] == 1) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var1] - 2, 0)));
                           }
                        }
                     }

                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 32)), MyUtility.getString(String.format("img%03d.imgcut", 32)));
                     }

                     if (this.ae[7].isLoaded()) {
                        this.ae[7].reset();
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 19)), MyUtility.getString(String.format("img%03d.imgcut", 19)));
                     }

                     if (this.ae[8].isLoaded()) {
                        this.ae[8].reset();
                     }

                     if (!this.ae[8].isLoaded()) {
                        this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 33)), MyUtility.getString(String.format("img%03d.imgcut", 33)));
                     }
                  }

                  if (this.screen == 9) {
                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 18)), MyUtility.getString(String.format("img%03d.imgcut", 18)));
                     }

                     if (this.ae[7].isLoaded()) {
                        this.ae[7].reset();
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 19)), MyUtility.getString(String.format("img%03d.imgcut", 19)));
                     }

                     if (this.ae[9].isLoaded()) {
                        this.ae[9].reset();
                     }

                     if (!this.ae[9].isLoaded()) {
                        this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 31)), MyUtility.getString(String.format("img%03d.imgcut", 31)));
                     }

                     if (this.ae[10].isLoaded()) {
                        this.ae[10].reset();
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }

                     if (this.ae[11].isLoaded()) {
                        this.ae[11].reset();
                     }

                     if (!this.ae[11].isLoaded()) {
                        this.ae[11].load(MyUtility.getString(String.format("img%03d.png", 30)), MyUtility.getString(String.format("img%03d.imgcut", 30)));
                     }

                     if (this.ae[12].isLoaded()) {
                        this.ae[12].reset();
                     }

                     if (!this.ae[12].isLoaded()) {
                        this.ae[12].load(MyUtility.getString(String.format("img%03d.png", 33)), MyUtility.getString(String.format("img%03d.imgcut", 33)));
                     }

                     if (this.ae[13].isLoaded()) {
                        this.ae[13].reset();
                     }

                     if (!this.ae[13].isLoaded()) {
                        this.ae[13].load(MyUtility.getString(String.format("img%03d.png", 1)), MyUtility.getString(String.format("img%03d.imgcut", 1)));
                     }
                  }

                  if (this.screen == 7) {
                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
                     }

                     if (this.fS[3] == 0) {
                        if (this.ae[7].isLoaded()) {
                           this.ae[7].reset();
                        }

                        if (!this.ae[7].isLoaded()) {
                           this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 22)), MyUtility.getString(String.format("img%03d.imgcut", 22)));
                        }

                        if (this.ae[8].isLoaded()) {
                           this.ae[8].reset();
                        }

                        if (!this.ae[8].isLoaded()) {
                           this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 23)), MyUtility.getString(String.format("img%03d.imgcut", 23)));
                        }
                     } else if (this.fS[3] >= 1) {
                        if (this.ae[7].isLoaded()) {
                           this.ae[7].reset();
                        }

                        if (!this.ae[7].isLoaded()) {
                           this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 26)), MyUtility.getString(String.format("img%03d.imgcut", 26)));
                        }

                        if (this.ae[8].isLoaded()) {
                           this.ae[8].reset();
                        }

                        if (!this.ae[8].isLoaded()) {
                           this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 27)), MyUtility.getString(String.format("img%03d.imgcut", 27)));
                        }
                     }

                     if (this.ae[9].isLoaded()) {
                        this.ae[9].reset();
                     }

                     if (!this.ae[9].isLoaded()) {
                        this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 28)), MyUtility.getString(String.format("img%03d.imgcut", 28)));
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].reset();
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }

                     for(var1 = 0; var1 < this.gC[1] + 1; ++var1) {
                        if (this.ae[var1 + 11].isLoaded()) {
                           this.ae[var1 + 11].reset();
                        }

                        if (var1 < this.gB[1]) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_g.png", 0)), MyUtility.getString(String.format("udi%03d_g.imgcut", 0)));
                           }
                        } else if (var1 < this.gB[0]) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              if (this.bw[this.bK[var1 - this.gB[1]]] == 0) {
                                 this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[var1 - this.gB[1]])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[var1 - this.gB[1]])));
                              } else {
                                 this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[var1 - this.gB[1]])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[var1 - this.gB[1]])));
                              }
                           }
                        } else if (var1 - this.gB[0] == 0 && this.bx[0] + 1 < this.bi) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                           }
                        } else if (var1 - this.gB[0] == 0) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                           }
                        } else if (var1 - this.gB[0] == 1 && this.bx[2] + 1 < 10) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                           }
                        } else if (var1 - this.gB[0] == 1) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                           }
                        } else if (this.bx[var1 - this.gB[0] + 1] + 1 < this.bi) {
                           if (!this.ae[var1 + 11].isLoaded()) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                           }
                        } else if (!this.ae[var1 + 11].isLoaded()) {
                           this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
                        }
                     }
                  }

                  if (this.screen == 3) {
                     for(var1 = 0; var1 < 10; ++var1) {
                        if (!this.ak[var1].isLoaded()) {
                           if (this.bk[var1] == -1) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni.png")), String.format("uni.imgcut"));
                           } else if (this.eV[var1] == 0) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var1] - 2, 0)));
                           } else if (this.eV[var1] == 1) {
                              this.ak[var1].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var1] - 2, 0)));
                           }
                        }
                     }

                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
                     }

                     if (this.ae[7].isLoaded()) {
                        this.ae[7].reset();
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 29)), MyUtility.getString(String.format("img%03d.imgcut", 29)));
                     }

                     if (this.ff[3] == 0) {
                        if (this.ae[8].isLoaded()) {
                           this.ae[8].reset();
                        }

                        if (!this.ae[8].isLoaded()) {
                           this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 23)), MyUtility.getString(String.format("img%03d.imgcut", 23)));
                        }
                     } else if (this.ff[3] >= 1) {
                        if (this.ae[8].isLoaded()) {
                           this.ae[8].reset();
                        }

                        if (!this.ae[8].isLoaded()) {
                           this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 27)), MyUtility.getString(String.format("img%03d.imgcut", 27)));
                        }
                     }

                     if (this.ae[9].isLoaded()) {
                        this.ae[9].reset();
                     }

                     if (!this.ae[9].isLoaded()) {
                        this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 28)), MyUtility.getString(String.format("img%03d.imgcut", 28)));
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].reset();
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }

                     for(var1 = 0; var1 < this.gC[1] + 1; ++var1) {
                        if (this.ae[var1 + 11].isLoaded()) {
                           this.ae[var1 + 11].reset();
                        }

                        if (!this.ae[var1 + 11].isLoaded()) {
                           if (this.bw[this.bK[var1]] == 0) {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[var1])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[var1])));
                           } else {
                              this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[var1])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[var1])));
                           }
                        }
                     }
                  }

                  if (this.screen == 6) {
                     this.fr = -1;
                     this.h(this.fq[0]);
                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 17)), MyUtility.getString(String.format("img%03d.imgcut", 17)));
                     }

                     if (this.ae[8].isLoaded()) {
                        this.ae[8].reset();
                     }

                     if (!this.ae[8].isLoaded()) {
                        this.ae[8].load(MyUtility.getString(String.format("ot%03d_c.png", 11)), MyUtility.getString(String.format("ot%03d_c.imgcut", 11)));
                     }
                  }

                  if (this.screen == 8) {
                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 15)), MyUtility.getString(String.format("img%03d.imgcut", 15)));
                     }

                     if (this.ae[7].isLoaded()) {
                        this.ae[7].reset();
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 16)), MyUtility.getString(String.format("img%03d.imgcut", 16)));
                     }

                     if (this.ae[8].isLoaded()) {
                        this.ae[8].reset();
                     }

                     if (!this.ae[8].isLoaded()) {
                        this.ae[8].load(MyUtility.getString(String.format("%03d_a.png", 0)), MyUtility.getString(String.format("%03d_a.imgcut", 0)));
                     }

                     if (this.ae[9].isLoaded()) {
                        this.ae[9].reset();
                     }

                     if (!this.ae[9].isLoaded()) {
                        this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
                     }

                     this.ft = -1;
                     this.a(1, this.fs[2]);
                  }

                  if (this.screen == 999) {
                     if (this.ae[6].isLoaded()) {
                        this.ae[6].reset();
                     }

                     if (!this.ae[6].isLoaded()) {
                        this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
                     }

                     if (this.ae[7].isLoaded()) {
                        this.ae[7].reset();
                     }

                     if (!this.ae[7].isLoaded()) {
                        this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 37)), MyUtility.getString(String.format("img%03d.imgcut", 37)));
                     }

                     if (this.ae[8].isLoaded()) {
                        this.ae[8].reset();
                     }

                     if (!this.ae[8].isLoaded()) {
                        this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 38)), MyUtility.getString(String.format("img%03d.imgcut", 38)));
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].reset();
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }

                     if (!this.ae[11].isLoaded()) {
                        this.ae[11].reset();
                     }

                     if (!this.ae[11].isLoaded()) {
                        this.ae[11].load(MyUtility.getString(String.format("item%03d.png", 0)), MyUtility.getString(String.format("item%03d.imgcut", 0)));
                     }
                  }

                  if (this.screen == 9999) {
                     if (this.aF[0].isLoaded()) {
                        this.aF[0].reset();
                     }

                     if (!this.aF[0].isLoaded()) {
                        this.aF[0].load(MyUtility.getString(String.format("i%03d_stamp_f.png", 0)), MyUtility.getString(String.format("%03d_stamp_f.imgcut", 0)));
                     }

                     this.aG[0].a(MyUtility.getString(String.format("%03d_stamp_f.mamodel", 0)));
                     this.aH[0].load(MyUtility.getString(String.format("%03d_stamp_f00.maanim", 0)));
                     this.aG[0].a(this.aF);
                     this.aG[0].a();
                     if (this.aF[1].isLoaded()) {
                        this.aF[1].reset();
                     }

                     if (!this.aF[1].isLoaded()) {
                        this.aF[1].load(MyUtility.getString(String.format("i%03d_img044.png", 1)), MyUtility.getString(String.format("i%03d_img044.imgcut", 1)));
                     }

                     this.aG[1].a(MyUtility.getString(String.format("%03d_img044.mamodel", 1)));
                     this.aH[1].load(MyUtility.getString(String.format("stamp.maanim")));
                     this.aG[1].a(this.aF);
                     this.aG[1].a();
                     if (this.ae[10].isLoaded()) {
                        this.ae[10].reset();
                     }

                     if (!this.ae[10].isLoaded()) {
                        this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
                     }
                  }

                  if (this.screen == 99999) {
                     if (!this.ae[0].isLoaded()) {
                        this.ae[0].load(MyUtility.getString(String.format("img_%03d_intro.png", 45)), MyUtility.getString(String.format("img_%03d_intro.imgcut", 45)));
                     }

                     if (!this.ae[1].isLoaded()) {
                        this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                     }

                     if (this.eQ >= 1) {
                        if (!this.aI[this.eQ - 1].isLoaded()) {
                           this.aI[this.eQ - 1].load(MyUtility.getString(String.format("i%03d_p.png", this.eQ - 1)), MyUtility.getString(String.format("%03d_p.imgcut", this.eQ - 1)));
                        }

                        this.aJ.a(MyUtility.getString(String.format("%03d_p.mamodel", this.eQ - 1)));

                        for(var1 = 0; var1 < this.getLength(this.aK); ++var1) {
                           this.aK[var1].load(MyUtility.getString(String.format("%03d_p%02d.maanim", this.eQ - 1, var1)));
                        }

                        this.aJ.a(this.aI);
                        this.aJ.a();
                     }
                  }
                  break;
               case 300:
                  if (this.af[1].isLoaded()) {
                     this.af[1].reset();
                  }

                  if (!this.af[1].isLoaded()) {
                     this.af[1].load(MyUtility.getString(String.format("img%03d.png", 100)), MyUtility.getString(String.format("img%03d.imgcut", 100)));
                  }

                  if (this.ae[0].isLoaded()) {
                     this.ae[0].reset();
                  }

                  if (!this.ae[0].isLoaded()) {
                     this.ae[0].load(MyUtility.getString(String.format("bg%03d.png", this.bV[4] + 0)), MyUtility.getString(String.format("bg%03d.imgcut", this.bV[4])));
                  }

                  if (this.ae[1].isLoaded()) {
                     this.ae[1].reset();
                  }

                  if (!this.ae[1].isLoaded()) {
                     this.ae[1].load(MyUtility.getString(String.format("fc%03d.png", 0)), MyUtility.getString(String.format("fc%03d.imgcut", 0)));
                  }

                  if (this.ae[2].isLoaded()) {
                     this.ae[2].reset();
                  }

                  if (!this.ae[2].isLoaded()) {
                     this.ae[2].load(MyUtility.getString(String.format("ec%03d.png", this.bM[20])), MyUtility.getString(String.format("ec%03d.imgcut", this.bM[20])));
                  }

                  if (this.aC[0].isLoaded()) {
                     this.aC[0].reset();
                  }

                  if (!this.aC[0].isLoaded()) {
                     this.aC[0].load(MyUtility.getString(String.format("i%03d_a.png", 0)), MyUtility.getString(String.format("%03d_a.imgcut", 0)));
                     this.aD[0].a(MyUtility.getString(String.format("%03d_a.mamodel", 0)));

                     for(var1 = 0; var1 < 1; ++var1) {
                        this.aE[0][var1].load(MyUtility.getString(String.format("%03d_a%02d.maanim", 0, var1)));
                     }

                     this.aD[1].a(MyUtility.getString(String.format("%03d_a.mamodel", 1)));

                     for(var1 = 0; var1 < 2; ++var1) {
                        this.aE[1][var1].load(MyUtility.getString(String.format("%03d_a%02d.maanim", 1, var1)));
                     }

                     for(var1 = 0; var1 < 2; ++var1) {
                        this.aD[var1].a(this.aC);
                        this.aD[var1].a();
                     }
                  }

                  if (this.ae[4].isLoaded()) {
                     this.ae[4].reset();
                  }

                  if (!this.ae[4].isLoaded()) {
                     this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 1)), MyUtility.getString(String.format("img%03d.imgcut", 1)));
                  }

                  if (this.ae[15].isLoaded()) {
                     this.ae[15].reset();
                  }

                  if (!this.ae[15].isLoaded()) {
                     this.ae[15].load(MyUtility.getString(String.format("img%03d.png", 2)), MyUtility.getString(String.format("img%03d.imgcut", 2)));
                  }

                  if (this.ae[16].isLoaded()) {
                     this.ae[16].reset();
                  }

                  if (!this.ae[16].isLoaded()) {
                     this.ae[16].load(MyUtility.getString(String.format("ec%03d_s.png", this.bM[20])), MyUtility.getString(String.format("ec%03d_s.imgcut", this.bM[20])));
                  }

                  if (this.ae[17].isLoaded()) {
                     this.ae[17].reset();
                  }

                  if (!this.ae[17].isLoaded()) {
                     this.ae[17].load(MyUtility.getString(String.format("ec%03d_n_%s.png", this.bM[20], MyUtility.getString("lang"))), MyUtility.getString(String.format("ec%03d_n_%s.imgcut", this.bM[20], MyUtility.getString("lang"))));
                  }

                  if (this.ae[18].isLoaded()) {
                     this.ae[18].reset();
                  }

                  if (!this.ae[18].isLoaded()) {
                     this.ae[18].load(MyUtility.getString(String.format("img%03d.png", 3)), MyUtility.getString(String.format("img%03d.imgcut", 3)));
                  }

                  if (this.ae[19].isLoaded()) {
                     this.ae[19].reset();
                  }

                  if (!this.ae[19].isLoaded()) {
                     this.ae[19].load(MyUtility.getString(String.format("img%03d.png", 4)), MyUtility.getString(String.format("img%03d.imgcut", 4)));
                  }

                  if (this.ae[20].isLoaded()) {
                     this.ae[20].reset();
                  }

                  if (!this.ae[20].isLoaded()) {
                     this.ae[20].load(MyUtility.getString(String.format("img%03d.png", 43)), MyUtility.getString(String.format("img%03d.imgcut", 43)));
                  }

                  if (this.ae[21].isLoaded()) {
                     this.ae[21].reset();
                  }

                  if (!this.ae[21].isLoaded()) {
                     this.ae[21].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                  }

                  if (this.ae[23].isLoaded()) {
                     this.ae[23].reset();
                  }

                  if (!this.ae[23].isLoaded()) {
                     this.ae[23].load(MyUtility.getString(String.format("img%03d.png", 40)), MyUtility.getString(String.format("img%03d.imgcut", 40)));
                  }

                  if (this.ae[24].isLoaded()) {
                     this.ae[24].reset();
                  }

                  if (!this.ae[24].isLoaded()) {
                     this.ae[24].load(MyUtility.getString(String.format("img%03d.png", 41)), MyUtility.getString(String.format("img%03d.imgcut", 41)));
                  }

                  if (this.ae[25].isLoaded()) {
                     this.ae[25].reset();
                  }

                  if (!this.ae[25].isLoaded()) {
                     this.ae[25].load(MyUtility.getString(String.format("img%03d.png", 42)), MyUtility.getString(String.format("img%03d.imgcut", 42)));
                  }

                  if (this.ay[0].isLoaded()) {
                     this.ay[0].reset();
                  }

                  if (!this.ay[0].isLoaded()) {
                     this.ay[0].load(MyUtility.getString(String.format("i%03d_g.png", 0)), MyUtility.getString(String.format("%03d_g.imgcut", 0)));
                  }

                  this.az[0][0].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 0, 1)));
                  this.aA[0][0].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 0, 1)));
                  this.az[0][0].a(this.ay);
                  this.az[0][0].a();
                  this.az[0][1].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 0, 2)));
                  this.aA[0][1].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 0, 2)));
                  this.az[0][1].a(this.ay);
                  this.az[0][1].a();
                  this.az[1][0].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 1, 1)));
                  this.aA[1][0].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 1, 1)));
                  this.az[1][0].a(this.ay);
                  this.az[1][0].a();
                  this.az[1][1].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 1, 2)));
                  this.aA[1][1].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 1, 2)));
                  this.az[1][1].a(this.ay);
                  this.az[1][1].a();
                  this.az[2][0].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 2, 1)));
                  this.aA[2][0].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 2, 1)));
                  this.az[2][0].a(this.ay);
                  this.az[2][0].a();
                  this.az[2][1].a(MyUtility.getString(String.format("%03d_g%02d_%d.mamodel", 0, 2, 2)));
                  this.aA[2][1].load(MyUtility.getString(String.format("%03d_g%02d_%d.maanim", 0, 2, 2)));
                  this.az[2][1].a(this.ay);
                  this.az[2][1].a();
                  this.az[3][0].a(MyUtility.getString(String.format("%03d_g%02d.mamodel", 0, 3)));
                  this.aA[3][0].load(MyUtility.getString(String.format("%03d_g%02d.maanim", 0, 3)));
                  this.az[3][0].a(this.ay);
                  this.az[3][0].a();

                  for(var1 = 0; var1 < 10; ++var1) {
                     if (this.ae[var1 + 5].isLoaded()) {
                        this.ae[var1 + 5].reset();
                     }
                  }

                  for(var1 = 0; var1 < 10; ++var1) {
                     if (this.bk[var1] == -1) {
                        this.ae[var1 + 5].load(MyUtility.getString(String.format("uni.png")), MyUtility.getString(String.format("uni.imgcut")));
                     } else if (this.eV[var1] == 0) {
                        if (!this.ae[var1 + 5].isLoaded()) {
                           this.ae[var1 + 5].load(MyUtility.getString(String.format("uni%03d_f%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_f%02d.imgcut", this.bk[var1] - 2, 0)));
                        }
                     } else if (this.eV[var1] == 1 && !this.ae[var1 + 5].isLoaded()) {
                        this.ae[var1 + 5].load(MyUtility.getString(String.format("uni%03d_c%02d.png", this.bk[var1] - 2, 0)), MyUtility.getString(String.format("uni%03d_c%02d.imgcut", this.bk[var1] - 2, 0)));
                     }
                  }

                  for(var1 = 0; var1 < 10; ++var1) {
                     if (this.bk[var1] != -1) {
                        if (this.eV[var1] == 0) {
                           if (!this.ar[this.bk[var1] - 2].isLoaded()) {
                              this.ar[this.bk[var1] - 2].load(MyUtility.getString(String.format("i%03d_f.png", this.bk[var1] - 2)), MyUtility.getString(String.format("%03d_f.imgcut", this.bk[var1] - 2)));
                              this.at[var1].a(MyUtility.getString(String.format("%03d_f.mamodel", this.bk[var1] - 2)));

                              for(var2 = 0; var2 < this.getLength(this.au[var1]); ++var2) {
                                 this.au[var1][var2].load(MyUtility.getString(String.format("%03d_f%02d.maanim", this.bk[var1] - 2, var2)));
                              }

                              this.at[var1].a(this.ar);
                              this.at[var1].a();
                           }
                        } else if (this.eV[var1] == 1 && !this.as[this.bk[var1] - 2].isLoaded()) {
                           this.as[this.bk[var1] - 2].load(MyUtility.getString(String.format("i%03d_c.png", this.bk[var1] - 2)), MyUtility.getString(String.format("%03d_c.imgcut", this.bk[var1] - 2)));
                           this.at[var1].a(MyUtility.getString(String.format("%03d_c.mamodel", this.bk[var1] - 2)));

                           for(var2 = 0; var2 < this.getLength(this.au[var1]); ++var2) {
                              this.au[var1][var2].load(MyUtility.getString(String.format("%03d_c%02d.maanim", this.bk[var1] - 2, var2)));
                           }

                           this.at[var1].a(this.as);
                           this.at[var1].a();
                        }
                     }
                  }

                  for(var1 = 0; var1 < this.getLength(this.av); ++var1) {
                     if (this.av[var1].isLoaded()) {
                        this.av[var1].reset();
                     }
                  }

                  for(var1 = 0; var1 < 10; ++var1) {
                     if (this.eU[var1] != -1 && this.eU[var1] > 0 && !this.av[this.eU[var1] - 2].isLoaded()) {
                        if (this.eU[var1] - 2 == 21) {
                           this.av[this.eU[var1] - 2].load(MyUtility.getString(String.format("i%03d_e.png", this.eU[var1] - 2)), MyUtility.getString(String.format("i%03d_e.imgcut", this.eU[var1] - 2)));
                        } else {
                           this.av[this.eU[var1] - 2].load(MyUtility.getString(String.format("i%03d_e.png", this.eU[var1] - 2)), MyUtility.getString(String.format("%03d_e.imgcut", this.eU[var1] - 2)));
                        }

                        this.aw[var1].a(MyUtility.getString(String.format("%03d_e.mamodel", this.eU[var1] - 2)));

                        for(var2 = 0; var2 < this.getLength(this.ax[var1]); ++var2) {
                           this.ax[var1][var2].load(MyUtility.getString(String.format("%03d_e%02d.maanim", this.eU[var1] - 2, var2)));
                        }

                        this.aw[var1].a(this.av);
                        this.aw[var1].a();
                     }
                  }
            }

            MyUtility.getInstance().addAlertCloser();
            if (this.D == 2) {
               this.j(98);
            }

            this.D = 0;
         }

         if (!MyUtility.getInstance().i()) {
            if (this.h) {
               this.h = false;
               MyUtility.getInstance().addButton(MyUtility.getString("catfoodbuy_txt"));
            }

            if (this.i == 0) {
               if (this.j) {
                  this.j = false;
                  this.screenTransition();
                  BrowserOption var3;
                  if (this.menuType == 0) {
                     if (!MyUtility.isConnected()) {
                        MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        this.i = 0;
                     } else {
                        this.i = 1;
                        String[] var14 = new String[4];
                        aStringBuffer var16 = new aStringBuffer();

                        for(var1 = 0; var1 < var14.length; ++var1) {
                            AssetTextStream var5 = new AssetTextStream();
                           var5.openRead(aString.format("nekokan_buy_%s%d.html", MyUtility.getString("lang"), var1));
                           var14[var1] = var5.c();
                           var5.close();
                        }

                        var16.append(var14[0]);
                        var16.append(var14[3]);

                        for(var1 = 0; var1 < 8; ++var1) {
                           var16.append(aString.format(var14[1], m[var1], l[m[var1]], MyUtility.getString("nekokan_bonus_msg" + (m[var1] + 1)), m[var1], MyUtility.getString("nekokan_buy_msg" + (m[var1] + 1))));
                        }

                        var16.append(var14[2]);
                        var3 = new BrowserOption();
                        var3.a(1, 0, "button_iphone4.png");
                        var3.a("bar_iphone4.png");
                        MyUtility.getInstance().a(var16.toString(), var3);
                     }

                     return;
                  }

                  String var4;
                  if (this.menuType == 1) {
                     if (!MyUtility.isConnected()) {
                        MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        this.i = 0;
                        return;
                     } else {
                        if (!jp.co.ponos.library.score.a.b().d()) {
                           MyUtility.getInstance().addButton(MyUtility.getString("gamecenter_noauth"));
                           this.i = 0;
                        } else {
                           //jp.co.ponos.library.a.a.b().f();
                           this.i = 1;
                           this.e = jp.co.ponos.library.score.a.b().e();
                           if (this.e != null) {
                              var4 = aString.format("type=top&pid=%s&lang=%s", this.e, MyUtility.getString("lang"));
                              var4 = aString.format("%s/battlecats/friend.php?%s&check=%s", MyUtility.getAppli(), var4, MyUtility.md5(aString.format("%s&check=adlmn", var4)));
                              var3 = new BrowserOption();
                              var3.a(1, 0, "button_iphone4.png");
                              var3.a("bar_iphone4.png");
                              MyUtility.getInstance().addJSDialog(var4, var3);
                              return;
                           }
                        }

                        return;
                     }
                  }

                  if (this.menuType == 2) {
                     if (!MyUtility.isConnected()) {
                        MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        this.i = 0;
                        return;
                     }

                     this.i = 1;
                     var4 = String.format("%s/battlecats/%s/help.html", MyUtility.getAppli(), MyUtility.getString("lang"));
                     var3 = new BrowserOption();
                     var3.a(1, 0, "button_iphone4.png");
                     var3.a("bar_iphone4.png");
                     MyUtility.getInstance().addJSDialog(var4, var3);
                  } else if (this.menuType == 3) {
                     if (!MyUtility.isConnected()) {
                        MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        this.i = 0;
                        return;
                     }

                     this.i = 1;
                     String var13 = String.format("%s/battlecats/%s/credit.html", MyUtility.getAppli(), MyUtility.getString("lang"));
                     BrowserOption var15 = new BrowserOption();
                     var15.a(1, 0, "button_iphone4.png");
                     var15.a("bar_iphone4.png");
                     MyUtility.getInstance().addJSDialog(var13, var15);
                  } else if (this.menuType == 5) {
                     if (!MyUtility.isConnected()) {
                        MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                        this.i = 0;
                        return;
                     }

                     this.i = 1;
                     var4 = String.format("%s/battlecats/page.php?type=facebook&lang=%s", MyUtility.getAppli(), MyUtility.getString("lang"));
                     var3 = new BrowserOption();
                     var3.a(1, 0, "button_iphone4.png");
                     var3.a("bar_iphone4.png");
                     MyUtility.getInstance().addJSDialog(var4, var3);
                  }
               }
            } else {
               if (this.i == 1) {
                  this.screenTransition();
                  return;
               }

               if (this.i == 2) {
                  return;
               }
            }

            if (this.t) {
               if (this.r.a() == 1) {
                  MyUtility.getInstance().addAlertCloser();
                  this.t = false;
                  if (this.o) {
                     MyUtility.getInstance().addJSDialog();
                  } else {
                     MyUtility.getInstance().n();
                  }

                  this.o = false;
               } else if (this.r.a() == 2) {
                  MyUtility.getInstance().addAlertCloser();
                  this.t = false;
                  MyUtility.getInstance().addButton(MyUtility.getString("error"));
                  this.o = false;
               }
            } else if (this.n) {
               this.n = false;
            } else if (this.v) {
               if (this.s.b() == 0) {
                  this.v = false;
                  if (!MyUtility.isConnected()) {
                     MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                  } else {
                     this.u = true;
                     jp.co.ponos.battlecats.A.a().ac();
                     this.t = true;
                     MyUtility.getInstance().addProgressDialog(MyUtility.getString("connecting"));
                     MyUtility.getInstance().addAlertAppliPage("review", this.r);
                  }
               } else if (this.s.b() == 1) {
                  this.v = false;
               } else if (this.s.b() == 2) {
                  this.v = false;
                  this.u = true;
                  jp.co.ponos.battlecats.A.a().ac();
               }
            } else {
               this.a = Calendar.getInstance();
               if (!this.gu) {
                  this.c(this.a.get(1), this.a.get(2), this.a.get(5), this.a.get(11), this.a.get(12), this.a.get(13));
               }

               ++this.hs;
               if (this.hs / 30 >= 1) {
                  this.hs = 0;
                  ++this.hv;
                  if (this.hv >= 999999999) {
                     this.hv = 999999999;
                  }
               }

               if (!this.gu && !this.gU) {
                  label4878: {
                     int[] var18;
                     float var10002;
                     switch (this.getScene()) {
                        case 4:
                        default:
                           break label4878;
                        case 98:
                           var18 = this.fQ;
                           var10002 = var18[0]++;
                           if (this.dz >= 1) {
                              var18 = this.dw;
                              var18[0] += this.dw[1];
                              if (this.dw[0] <= 0) {
                                 this.dw[1] = aMath.rand(10) + 3;
                                 this.dw[0] = 0;
                                 this.dx = aMath.rand(30) + 15;
                              }

                              if (this.dw[0] / 10 > this.dx) {
                                 this.dw[1] = -this.dw[1];
                              }
                           }

                           for(var1 = 0; var1 < 50; ++var1) {
                              var18 = this.ci[var1];
                              var10002 = var18[0]++;

                              for(var2 = 0; var2 < 8; ++var2) {
                                 var18 = this.cg[var1][1];
                                 var18[var2] -= this.ci[var1][1];
                              }

                              if (this.cg[var1][1][0] <= 5000) {
                                 for(var2 = 0; var2 < 8; ++var2) {
                                    if (var2 == 0) {
                                       this.cg[var1][0][var2] = (var1 * 48 + aMath.rand(48) % this.getWidth()) * 100;
                                       this.cg[var1][1][var2] = (aMath.rand(50) + 640) * 100;
                                    } else {
                                       this.cg[var1][0][var2] = this.cg[var1][0][0];
                                       this.cg[var1][1][var2] = this.cg[var1][1][0];
                                    }
                                 }

                                 this.ci[var1][0] = 0;
                                 this.ci[var1][1] = (aMath.rand(50) + 3) * 10;
                                 this.ci[var1][2] = (aMath.rand(18) + 3) * 100;
                                 this.ci[var1][3] = aMath.rand(8) + 1;
                              }
                           }

                           if (this.dz == 0) {
                              ++this.dA;
                              if (this.dA >= 100) {
                                 this.dz = 1;
                                 this.dA = 0;
                                 this.dy = 0;
                              }
                           } else {
                              ++this.dy;
                              if (this.dz == 1) {
                                 if (3560 - this.dy <= 285) {
                                    this.dz = 2;
                                    this.dA = 0;
                                 }
                              } else if (this.dz == 2) {
                                 ++this.dA;
                                 if (this.dA >= 160) {
                                    this.j(100);
                                    return;
                                 }
                              }
                           }

                           if (this.fx[0] >= 1) {
                              var18 = this.fx;
                              var10002 = var18[0]++;
                              if (this.fx[0] > this.getLength(dv) - 1) {
                                 this.eb = true;
                                 this.ed = 0;
                                 this.fx[0] = 0;
                              }
                           } else {
                              if (this.dz <= 1 && !this.eb) {
                                 if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                                    if (!this.gp[0] && !this.eb) {
                                       Sound.getInstance().play(10);
                                       this.gp[0] = true;
                                    }
                                 } else {
                                    this.gp[0] = false;
                                 }
                              }

                              if (this.dz <= 1 && !this.eb) {
                                 if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                                    Sound.getInstance().play(11);
                                    var18 = this.fx;
                                    var10002 = var18[0]++;
                                 } else if (this.T()) {
                                    this.eb = true;
                                    this.ed = 0;
                                    this.fx[0] = 0;
                                 }
                              }
                           }

                           if (!this.g(this.ed)) {
                              return;
                           }

                           var18 = this.fQ;
                           var10002 = var18[5]++;
                           break label4878;
                        case 99:
                           var18 = this.fQ;
                           var10002 = var18[1]++;
                           var18 = this.fQ;
                           var10002 = var18[3]++;
                           if (this.fQ[3] >= 255) {
                              this.fQ[3] = 255;
                              if (this.dE == 0) {
                                 this.dE = 1;
                              }
                           }

                           if (this.dE <= 1 && (this.bj >= 1 || this.eg == 2) && !this.eE[0]) {
                              if (this.fx[0] >= 1) {
                                 var18 = this.fx;
                                 var10002 = var18[0]++;
                                 if (this.fx[0] > this.getLength(dv) - 1) {
                                    this.dF = 0;
                                    this.fx[0] = 0;
                                    this.eE[0] = true;
                                    if (this.dE == 0) {
                                       this.dE = 1;
                                    }
                                 }
                              } else {
                                 if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                                    if (!this.gp[0]) {
                                       Sound.getInstance().play(10);
                                       this.gp[0] = true;
                                    }
                                 } else {
                                    this.gp[0] = false;
                                 }

                                 if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                                    Sound.getInstance().play(11);
                                    var18 = this.fx;
                                    var10002 = var18[0]++;
                                 } else if (this.T() && this.eg == 2) {
                                    this.dF = 0;
                                    this.fx[0] = 0;
                                    this.eE[0] = true;
                                    if (this.dE == 0) {
                                       this.dE = 1;
                                    }
                                 }
                              }
                           }

                           if (this.dE == 1) {
                              if (this.eE[0]) {
                                 var18 = this.fQ;
                                 var18[0] += 10;
                                 if (this.fQ[0] >= 255) {
                                    if (this.eg == 2) {
                                       this.dE = 7;
                                    } else {
                                       this.dE = 4;
                                    }

                                    this.eE[0] = false;
                                    this.dF = 0;
                                    this.fQ[0] = 0;
                                    Sound.getInstance().stop(-1);
                                 }
                              }

                              if (this.fQ[3] >= 255) {
                                 ++this.dG;
                              }

                              var1 = this.getLength(this.cK) * 40 + 640 + this.eZ * 3 - this.dG;
                              if (var1 <= 230) {
                                 this.dG += 230 - var1;
                                 this.dE = 2;
                                 this.dF = 0;
                              }
                           } else if (this.dE == 2) {
                              if (!this.eE[0]) {
                                 ++this.dF;
                                 if (this.dF >= 150) {
                                    this.dE = 3;
                                    this.dF = 0;
                                 }
                              } else if (this.eE[0]) {
                                 var18 = this.fQ;
                                 var18[0] += 10;
                                 if (this.fQ[0] >= 255) {
                                    this.dE = 4;
                                    this.eE[0] = false;
                                    this.dF = 0;
                                    this.fQ[0] = 0;
                                    Sound.getInstance().stop(-1);
                                 }
                              }
                           } else if (this.dE == 3) {
                              ++this.dF;
                              if (this.dF >= 255) {
                                 this.dF = 0;
                                 if (this.eg == 2) {
                                    this.dE = 7;
                                 } else {
                                    this.dE = 4;
                                 }

                                 Sound.getInstance().stop(-1);
                              }
                           } else if (this.dE != 4) {
                              if (this.dE == 5) {
                                 if (this.eg != 2) {
                                    if (this.aX < 2) {
                                       this.gu = true;
                                       this.gw = 0;
                                       this.gx = 0;
                                       return;
                                    }

                                    this.dE = 6;
                                 } else {
                                    this.dE = 7;
                                 }
                              } else if (this.dE == 6) {
                                 if (this.eg != 2) {
                                    if (this.aX >= 1 && this.aX < 2) {
                                       this.gu = true;
                                       this.gw = 0;
                                       this.gx = 0;
                                       return;
                                    }

                                    this.dE = 7;
                                 } else {
                                    this.dE = 7;
                                 }
                              } else if (this.dE == 7 && this.bc[2] == 0 && this.eg != 2) {
                                 if (this.bc[2] == 0) {
                                    this.gu = true;
                                    this.gw = 0;
                                    return;
                                 }
                              } else if (this.dE >= 7) {
                                 if (!this.eb && this.eg != 2) {
                                    ++this.aX;
                                    if (this.aX >= 2) {
                                       this.aX = 2;
                                    }

                                    if (this.aX >= 2) {
                                       this.bi = (this.aX - 1) * 10 + 10;
                                    } else {
                                       this.bi = 10;
                                    }
                                 }

                                 this.ed = 1;
                                 this.eb = true;
                              }
                           } else if (this.eg == 2) {
                              this.dE = 5;
                           } else {
                              for(var1 = 0; var1 < this.getLength(this.bJ); ++var1) {
                                 if (this.bJ[var1][15] == this.eQ && this.bJ[var1][0] == this.bM[31]) {
                                    this.bC[this.bJ[var1][13]] = 0;
                                 }
                              }

                              if (this.bM[32] != -1) {
                                 this.gu = true;
                                 this.gw = 0;
                                 this.gx = 1000;
                                 this.by[1] = 1;
                                 return;
                              }

                              for(var1 = 0; var1 < this.getLength(this.bJ); ++var1) {
                                 if (this.bJ[var1][1] != 0 && this.bJ[var1][15] == this.eQ && this.bJ[var1][0] == this.bM[31]) {
                                    this.gu = true;
                                    this.gw = 0;
                                    this.gx = 999;
                                    this.by[1] = 1;
                                    this.bM[31] = -1;
                                    return;
                                 }
                              }

                              this.gx = 0;
                              this.dE = 5;
                           }

                           for(var1 = 0; var1 < 50; ++var1) {
                              var18 = this.ci[var1];
                              var10002 = var18[0]++;

                              for(var2 = 0; var2 < 8; ++var2) {
                                 var18 = this.cg[var1][1];
                                 var18[var2] -= this.ci[var1][1];
                              }

                              if (this.cg[var1][1][0] <= 5000) {
                                 for(var2 = 0; var2 < 8; ++var2) {
                                    if (var2 == 0) {
                                       this.cg[var1][0][var2] = (var1 * 48 + aMath.rand(48) % this.getWidth()) * 100;
                                       this.cg[var1][1][var2] = (aMath.rand(50) + 640) * 100;
                                    } else {
                                       this.cg[var1][0][var2] = this.cg[var1][0][0];
                                       this.cg[var1][1][var2] = this.cg[var1][1][0];
                                    }
                                 }

                                 this.ci[var1][0] = 0;
                                 this.ci[var1][1] = (aMath.rand(50) + 3) * 10;
                                 this.ci[var1][2] = (aMath.rand(18) + 3) * 100;
                                 this.ci[var1][3] = aMath.rand(8) + 1;
                              }
                           }

                           if (!this.g(this.ed)) {
                              return;
                           }

                           var18 = this.fQ;
                           var10002 = var18[5]++;
                           break label4878;
                        case 100:
                           if (this.fF == -1) {
                              if (this.screen == 0) {
                                 this.titleLoad();
                              } else if (this.screen == 5) {
                                 this.catBaseLoad();
                              } else if (this.screen == 9) {
                                 this.mapLoad();
                              } else if (this.screen == 7) {
                                 this.powerUpLoad();
                              } else if (this.screen == 3) {
                                 this.equipLoad();
                              } else if (this.screen == 6) {
                                 this.treasureLoad();
                              } else if (this.screen == 8) {
                                 this.enemyGuideLoad();
                              } else if (this.screen == 4) {
                                 this.map2Load();
                              } else if (this.screen == 999) {
                                 this.itemShopLoad();
                              } else if (this.screen == 9999) {
                                 this.stampLoad();
                              } else if (this.screen == 99999) {
                                 this.legendLoad();
                              }

                              this.fF = 1;
                           }

                           if (this.fF > 0) {
                              if (this.screen == 0) {
                                 if (!this.titleProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 5) {
                                 if (!this.catBaseProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 9) {
                                 if (!this.mapProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 7) {
                                 if (!this.powerupProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 3) {
                                 if (!this.equipProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 6) {
                                 if (!this.treasureProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 8) {
                                 if (!this.enemyGuideProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 4) {
                                 if (!this.map2Process()) {
                                    return;
                                 }
                              } else if (this.screen == 999) {
                                 if (!this.itemShopProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 9999) {
                                 if (!this.stampProcess()) {
                                    return;
                                 }
                              } else if (this.screen == 99999 && !this.legendProcess()) {
                                 return;
                              }
                           }

                           if (!this.g(this.ed)) {
                              return;
                           }
                           break label4878;
                        case 300:
                     }

                     float[] var17;
                     if (!this.ee && !this.gU && !this.ha[0]) {
                        this.A.b((float)(this.excessWidth / 2 + 0), 520.0F);
                        this.B.a((float)(this.z / 100), (float)(this.z / 100));
                        this.A.a(this.B);
                        this.B.b((float)(0 - this.excessWidth / 2), -520.0F);
                        this.A.a(this.B);
                        this.zoom.zoom();
                        this.eH[1] = this.z / 100;
                        float var6 = (float)this.eH[1] / 100.0F;
                        int var8;
                        if (this.bM[12] != 0) {
                           if (this.bM[12] == 1) {
                              var1 = (int)(((float)this.bV[0] * var6 - (float)(this.getWidth() * 10)) / var6) - this.bM[5];
                              if (this.bM[14] == 0) {
                                 if (var1 / 2 <= 40) {
                                    this.bM[5] = this.bV[0] - 9600;
                                    this.bM[12] = 0;
                                 } else {
                                    var18 = this.bM;
                                    var2 = var18[5];
                                    var18[5] = var1 / 2 + var2;
                                 }
                              } else if (var1 / 2 <= 40 && this.z / 100 == 100) {
                                 this.bM[5] = this.bV[0] - 9600;
                                 this.bM[12] = 0;
                              } else {
                                 var18 = this.bM;
                                 var2 = var18[5];
                                 var18[5] = var1 / 2 + var2;
                                 if ((int)(((float)this.bV[0] * var6 - (float)(this.getWidth() * 10)) / var6) - this.bM[5] <= 0) {
                                    this.eX = true;
                                 }

                                 if (this.eX) {
                                    this.bM[5] = this.bV[0] - 9600;
                                 }
                              }
                           } else if (this.bM[12] == 2) {
                              var1 = this.bM[5];
                              if (this.bM[14] == 0) {
                                 if (var1 / 2 <= 40) {
                                    this.bM[5] = 0;
                                    this.bM[12] = 0;
                                 } else {
                                    var18 = this.bM;
                                    var18[5] -= var1 / 2;
                                 }
                              } else if (var1 / 2 <= 40 && this.z / 100 == 100) {
                                 this.bM[5] = 0;
                                 this.bM[12] = 0;
                              } else {
                                 var18 = this.bM;
                                 var18[5] -= var1 / 2;
                              }
                           } else if (this.bM[12] == 3) {
                              var1 = 0;

                              for(var2 = 0; var2 < this.getLength(this.bR[1]); var1 = var8) {
                                 if (this.bR[1][var2][0] == 0) {
                                    var8 = var1;
                                 } else {
                                    var8 = this.bR[1][var2][1];
                                    var8 = var1;
                                    if (this.bR[1][var2][3] > var1) {
                                       var8 = this.bR[1][var2][3];
                                    }
                                 }

                                 ++var2;
                              }

                              if (var1 < 4800) {
                                 var2 = 4800;
                              } else {
                                 var2 = var1;
                                 if (var1 > this.bV[0] - 4800) {
                                    var2 = this.bV[0] - 4800;
                                 }
                              }

                              if (var2 >= this.bM[5] + 4800) {
                                 var2 -= this.bM[5] + 4800;
                                 if (var2 > 4800) {
                                    var18 = this.bM;
                                    var18[5] += 600;
                                 } else {
                                    var18 = this.bM;
                                    var1 = var18[5];
                                    var18[5] = var2 / 4 + var1;
                                 }
                              } else {
                                 var1 = this.bM[5] + 4800 - var2;
                                 if (var1 >= 4800) {
                                    var18 = this.bM;
                                    var18[5] -= 600;
                                 } else {
                                    var18 = this.bM;
                                    var18[5] -= var1 / 4;
                                 }
                              }
                           }
                        }

                        if (this.bM[14] == 1) {
                           if (!this.eb && !this.h()) {
                              return;
                           }
                        } else if (this.bM[14] == 2) {
                           if (!this.eb && !this.i()) {
                              return;
                           }
                        } else if (this.bM[14] == 3) {
                           var18 = this.fQ;
                           var10002 = var18[0]++;
                           if (!this.eb) {
                              if (this.aZ == 0) {
                                 ++this.eP;
                                 if (this.eP == 1) {
                                    Sound.getInstance().play(42);
                                 }

                                 if (this.eP > this.getLength(eO) - 1) {
                                    this.eP = this.getLength(eO) - 1;
                                 }

                                 if (this.eP >= this.getLength(eO) - 1) {
                                    var18 = this.fQ;
                                    var10002 = var18[10]++;
                                    if (this.fQ[10] >= 30) {
                                       this.fQ[10] = 30;
                                       if (this.S()) {
                                          this.fQ[10] = 0;
                                          this.eP = 0;
                                          this.bM[14] = 0;
                                          this.fQ[0] = 0;
                                       }
                                    }
                                 }
                              } else if (!this.eb) {
                                 this.eP = 0;
                                 this.bM[14] = 0;
                                 this.fQ[0] = 0;
                              }
                           }
                        } else if (this.bM[14] == 4) {
                           if (!this.eb && !this.j()) {
                              return;
                           }
                        } else if (this.bM[14] == 5) {
                           if (!this.eb && !this.k()) {
                              return;
                           }
                        } else {
                           if (this.aZ == 0 && this.hH == 0) {
                              var18 = this.gV;
                              var10002 = var18[0]++;
                              if (this.gV[0] >= 24) {
                                 this.screenTransition();
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 this.hH = 1;
                                 this.gV[0] = 0;
                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }
                           } else {
                              if (this.bB[1] == 0 && this.bM[10] >= this.bX[this.bk[0]][this.eV[0]][6] + this.bX[this.bk[0]][this.eV[0]][6] * this.eQ * 50 / 100) {
                                 this.screenTransition();
                                 this.bB[1] = 1;
                                 this.gV[0] = 0;
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }

                              if (this.bB[0] == 0 && this.bB[1] != 0) {
                                 if (this.bM[11] + 1 >= 8) {
                                    if (this.bM[10] >= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
                                       var18 = this.gV;
                                       var10002 = var18[0]++;
                                       if (this.gV[0] >= 210) {
                                          this.screenTransition();
                                          this.gU = true;
                                          this.bB[0] = 1;
                                          this.gV[0] = 0;

                                          for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                             this.gV[var1] = 0;
                                          }

                                          if (this.cj[0] == 0) {
                                             Sound.getInstance().setVolume(50);
                                          }

                                          return;
                                       }
                                    }
                                 } else if (this.bM[10] >= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
                                    var18 = this.gV;
                                    var10002 = var18[0]++;
                                    if (this.gV[0] >= 210) {
                                       this.screenTransition();
                                       this.gU = true;
                                       this.bB[0] = 1;
                                       this.gV[0] = 0;

                                       for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                          this.gV[var1] = 0;
                                       }

                                       if (this.cj[0] == 0) {
                                          Sound.getInstance().setVolume(50);
                                       }

                                       return;
                                    }
                                 }
                              }

                              if (this.bB[2] == 0) {
                                 if ((this.R() || this.Q() || this.S()) && this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                    this.screenTransition();
                                    this.bB[2] = 1;
                                    this.gV[0] = 0;
                                    this.gU = true;

                                    for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                       this.gV[var1] = 0;
                                    }

                                    if (this.cj[0] == 0) {
                                       Sound.getInstance().setVolume(50);
                                    }

                                    return;
                                 }

                                 if (this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                    var18 = this.gV;
                                    var10002 = var18[0]++;
                                    if (this.gV[0] >= 24) {
                                       this.bB[2] = 1;
                                       this.gV[0] = 0;
                                       this.gU = true;

                                       for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                          this.gV[var1] = 0;
                                       }

                                       if (this.cj[0] == 0) {
                                          Sound.getInstance().setVolume(50);
                                       }
                                    }
                                 }
                              }

                              if (this.bB[3] == 0) {
                                 var8 = 0;

                                 for(var1 = 0; var1 < this.getLength(this.bk); var8 = var2) {
                                    var2 = var8;
                                    if (this.bk[var1] != -1) {
                                       var2 = var8 + 1;
                                    }

                                    if (var2 >= 6) {
                                       if (this.R() || this.Q() || this.S()) {
                                          this.screenTransition();
                                          this.bB[3] = 1;
                                          this.gV[0] = 0;
                                          this.gU = true;

                                          for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                             this.gV[var1] = 0;
                                          }

                                          if (this.cj[0] == 0) {
                                             Sound.getInstance().setVolume(50);
                                          }

                                          return;
                                       }

                                       var18 = this.gV;
                                       var10002 = var18[0]++;
                                       if (this.gV[0] >= 24) {
                                          this.screenTransition();
                                          this.bB[3] = 1;
                                          this.gV[0] = 0;
                                          this.gU = true;

                                          for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                             this.gV[var1] = 0;
                                          }

                                          if (this.cj[0] == 0) {
                                             Sound.getInstance().setVolume(50);
                                          }

                                          return;
                                       }
                                    }

                                    ++var1;
                                 }
                              }
                           }

                           if (this.dH <= 47 && this.bB[4] == 0 && this.bd >= 1) {
                              if (this.R() || this.Q() || this.S()) {
                                 this.screenTransition();
                                 this.bB[4] = 1;
                                 this.gV[0] = 0;
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }

                              var18 = this.gV;
                              var10002 = var18[0]++;
                              if (this.gV[0] >= 24) {
                                 this.screenTransition();
                                 this.bB[4] = 1;
                                 this.gV[0] = 0;
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }
                           }

                           this.eH[0] = 0;

                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              if (this.eM[var1]) {
                                 this.eH[0] = 1;
                                 break;
                              }
                           }

                           if (this.eH[0] == 1 && this.bB[5] == 0) {
                              if (this.R() || this.Q() || this.S()) {
                                 this.screenTransition();
                                 this.bB[5] = 1;
                                 this.gV[0] = 0;
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }

                              var18 = this.gV;
                              var10002 = var18[0]++;
                              if (this.gV[0] >= 24) {
                                 this.screenTransition();
                                 this.bB[5] = 1;
                                 this.gV[0] = 0;
                                 this.gU = true;

                                 for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                                    this.gV[var1] = 0;
                                 }

                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }
                           }

                           if (this.hk[0] >= 1) {
                              var18 = this.hk;
                              var10002 = var18[0]++;
                              if (this.hk[0] > this.getLength(dv) - 1) {
                                 this.hk[0] = 0;
                                 if (this.dH <= 47) {
                                    this.screenTransition();
                                    this.ha[0] = true;
                                    Sound.getInstance().play(34);
                                    var1 = this.cj[0];
                                    return;
                                 }
                              }
                           } else if (this.fx[3] >= 1) {
                              var18 = this.fx;
                              var10002 = var18[3]++;
                              if (this.fx[3] > this.getLength(dv) - 1) {
                                 this.fx[3] = 0;
                                 this.screenTransition();
                                 this.ee = true;
                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(50);
                                 }

                                 return;
                              }
                           } else if (this.eK[0] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[0]++;
                              if (this.eK[0] > this.getLength(dv) - 1) {
                                 this.eK[0] = 0;
                                 if (this.eL[0] == 0) {
                                    this.eL[0] = 1;
                                 } else if (this.eL[0] == 1) {
                                    this.eL[0] = 0;
                                 }
                              }
                           } else if (this.eK[1] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[1]++;
                              if (this.eK[1] > this.getLength(dv) - 1) {
                                 this.eK[1] = 0;
                                 if (this.eL[1] == 0) {
                                    this.eL[1] = 1;
                                 } else if (this.eL[1] == 1) {
                                    this.eL[1] = 0;
                                 }
                              }
                           } else if (this.eK[2] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[2]++;
                              if (this.eK[2] > this.getLength(dv) - 1) {
                                 this.eK[2] = 0;
                                 if (this.eL[2] == 0) {
                                    this.eL[2] = 1;
                                 } else if (this.eL[2] == 1) {
                                    this.eL[2] = 0;
                                 }
                              }
                           } else if (this.eK[3] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[3]++;
                              if (this.eK[3] > this.getLength(dv) - 1) {
                                 this.eK[3] = 0;
                                 if (this.eL[3] == 0) {
                                    this.eL[3] = 1;
                                 } else if (this.eL[3] == 1) {
                                    this.eL[3] = 0;
                                 }
                              }
                           } else if (this.eK[4] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[4]++;
                              if (this.eK[4] > this.getLength(dv) - 1) {
                                 this.eK[4] = 0;
                                 if (this.eL[4] == 0) {
                                    this.eL[4] = 1;
                                 } else if (this.eL[4] == 1) {
                                    this.eL[4] = 0;
                                 }
                              }
                           } else if (this.eK[5] >= 1) {
                              var18 = this.eK;
                              var10002 = var18[5]++;
                              if (this.eK[5] > this.getLength(dv) - 1) {
                                 this.eK[5] = 0;
                                 if (this.eL[5] == 0) {
                                    this.eL[5] = 1;
                                 } else if (this.eL[5] == 1) {
                                    this.eL[5] = 0;
                                 }
                              }
                           } else if (this.fy[0] >= 1) {
                              var18 = this.fy;
                              var10002 = var18[0]++;
                              if (this.fy[0] > this.getLength(dv) - 1) {
                                 this.fy[0] = 0;
                                 if (this.eD[0] == 0) {
                                    this.c(0);
                                 } else if (this.eD[0] == 1) {
                                    this.c(5);
                                 }
                              }
                           } else if (this.fy[1] >= 1) {
                              var18 = this.fy;
                              var10002 = var18[1]++;
                              if (this.fy[1] > this.getLength(dv) - 1) {
                                 this.fy[1] = 0;
                                 if (this.eD[0] == 0) {
                                    this.c(1);
                                 } else if (this.eD[0] == 1) {
                                    this.c(6);
                                 }
                              }
                           } else if (this.fy[2] >= 1) {
                              var18 = this.fy;
                              var10002 = var18[2]++;
                              if (this.fy[2] > this.getLength(dv) - 1) {
                                 this.fy[2] = 0;
                                 if (this.eD[0] == 0) {
                                    this.c(2);
                                 } else if (this.eD[0] == 1) {
                                    this.c(7);
                                 }
                              }
                           } else if (this.fy[3] >= 1) {
                              var18 = this.fy;
                              var10002 = var18[3]++;
                              if (this.fy[3] > this.getLength(dv) - 1) {
                                 this.fy[3] = 0;
                                 if (this.eD[0] == 0) {
                                    this.c(3);
                                 } else if (this.eD[0] == 1) {
                                    this.c(8);
                                 }
                              }
                           } else if (this.fy[4] >= 1) {
                              var18 = this.fy;
                              var10002 = var18[4]++;
                              if (this.fy[4] > this.getLength(dv) - 1) {
                                 this.fy[4] = 0;
                                 if (this.eD[0] == 0) {
                                    this.c(4);
                                 } else if (this.eD[0] == 1) {
                                    this.c(9);
                                 }
                              }
                           } else {
                              if (!this.dV) {
                                 this.l();
                              }

                              if (this.fT) {
                                 if (this.ct >= 1) {
                                    this.fU = 0;
                                 }

                                 if (this.fU == 0) {
                                    for(var1 = 0; var1 < 10; ++var1) {
                                       this.gb[var1] = -1;
                                    }

                                    for(var1 = 0; var1 < 10; ++var1) {
                                       if (this.bk[var1] == -1) {
                                          this.fW[var1] = -1;
                                       } else if (this.eW[var1] == 0) {
                                          this.fW[var1] = var1;
                                       } else {
                                          this.fW[var1] = -1;
                                       }
                                    }

                                    if (aMath.rand(100) >= 30 && this.ct != 1) {
                                       var2 = 0;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          if (this.fW[var1] != -1) {
                                             this.gb[var2] = var1;
                                             ++var2;
                                          }
                                       }

                                       if (var2 == 0) {
                                          this.fU = 0;
                                       } else if (this.ct == 0) {
                                          this.fV = aMath.rand(var2);
                                          this.fU = 3;
                                       }

                                       if (this.fU == 0) {
                                          if (this.bN[0] != 7) {
                                             if (this.bM[11] + 1 >= 8) {
                                                this.fU = 2;
                                             }
                                          } else {
                                             this.fU = 0;
                                          }
                                       } else if (this.bM[9] < this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] + this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] * this.eQ * 50 / 100) {
                                          if (this.bN[0] != 7) {
                                             this.fU = 2;
                                          } else {
                                             this.fU = 0;
                                          }
                                       }
                                    } else if (this.bN[0] != 7) {
                                       this.fU = 2;
                                    } else {
                                       var2 = 0;

                                       for(var1 = 0; var1 < 10; var2 = var8) {
                                          var8 = var2;
                                          if (this.fW[var1] != -1) {
                                             if (this.bk[var1] == -1) {
                                                var8 = var2;
                                             } else {
                                                var8 = var2;
                                                if (this.bM[9] >= this.bX[this.bk[var1]][this.eV[var1]][6] + this.bX[this.bk[var1]][this.eV[var1]][6] * this.eQ * 50 / 100) {
                                                   this.gb[var2] = var1;
                                                   var8 = var2 + 1;
                                                }
                                             }
                                          }

                                          ++var1;
                                       }

                                       if (var2 == 0) {
                                          this.fU = 0;
                                       } else if (this.ct == 0) {
                                          this.fV = aMath.rand(var2);
                                          this.fU = 3;
                                       }
                                    }
                                 }

                                 if (this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                    this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 27;

                                    for(var1 = 1; var1 < this.getLength(this.bR[1]); ++var1) {
                                       if (this.bR[1][var1][0] != 0 && this.bR[1][var1][1] != 4) {
                                          this.eH[2] = (this.bR[1][var1][3] - this.bM[5]) / 10;
                                          if (this.eH[2] > this.eH[1] - this.bR[0][0][6] * cw + 30 - 92 && this.fZ == 0) {
                                             this.fZ = 1;
                                          }
                                       }
                                    }

                                    for(var1 = 1; var1 < this.getLength(this.bR[1]); ++var1) {
                                       this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 27;
                                       if (this.bR[1][var1][0] != 0) {
                                          this.eH[2] = (this.bR[1][var1][3] - this.bM[5]) / 10;
                                          if (this.eH[2] > this.eH[1] - 200) {
                                             this.fU = 1;
                                             this.fZ = 0;
                                          }
                                       }
                                    }
                                 }

                                 if (this.fZ == 1) {
                                    this.ga[0] = aMath.rand(150);
                                    this.fZ = 2;
                                 } else if (this.fZ == 2) {
                                    var18 = this.ga;
                                    var10002 = var18[0]--;
                                    if (this.ga[0] <= 0) {
                                       this.fZ = aMath.rand(2) + 3;
                                    }
                                 } else if (this.fZ == 3) {
                                    if (this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                       this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 27;

                                       for(var1 = 1; var1 < this.getLength(this.bR[1]); ++var1) {
                                          if (this.bR[1][var1][0] != 0 && this.bR[1][var1][1] != 4) {
                                             this.eH[2] = (this.bR[1][var1][3] - this.bM[5]) / 10;
                                             if (this.eH[2] > this.eH[1] - this.bR[0][0][6] * cw + 30 - 92) {
                                                this.fU = 1;
                                             }
                                          }
                                       }
                                    }

                                    this.fZ = 0;
                                 } else if (this.fZ == 4) {
                                    this.fZ = 0;
                                 }

                                 if (this.gb[this.fV] >= 0 && this.bM[10] >= this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] + this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] * this.eQ * 50 / 100 && this.gb[this.fV] >= 0) {
                                    if (this.eD[0] == 0 && this.gb[this.fV] >= 5) {
                                       if (!this.eE[0]) {
                                          this.el[0] = 1;
                                          this.eD[6] = 1;
                                       } else if (this.el[0] == 1) {
                                          if (this.eD[6] == 0) {
                                             this.el[0] = -1;
                                          }
                                       } else if (this.el[0] == -1 && this.eD[6] == 1) {
                                          this.el[0] = 1;
                                       }

                                       this.eE[0] = true;
                                    } else if (this.eD[0] == 1 && this.gb[this.fV] >= 0 && this.gb[this.fV] < 5) {
                                       if (!this.eE[0]) {
                                          this.el[0] = 1;
                                          this.eD[6] = 1;
                                       } else if (this.el[0] == 1) {
                                          if (this.eD[6] == 0) {
                                             this.el[0] = -1;
                                          }
                                       } else if (this.el[0] == -1 && this.eD[6] == 1) {
                                          this.el[0] = 1;
                                       }

                                       this.eE[0] = true;
                                    }
                                 }

                                 if (this.fU >= 3 && this.ct >= 1) {
                                    this.fU = 0;
                                 }

                                 if (this.fU == 1) {
                                    if (this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                       this.bR[0][0][12] = this.bR[0][0][11];
                                       this.bR[0][0][9] = 1;
                                       this.bR[0][0][10] = 0;
                                       var18 = this.bR[0][0];
                                       var10002 = var18[13]++;
                                       Sound.getInstance().play(19);
                                       Sound.getInstance().play(25);
                                       this.fU = 0;
                                    }
                                 } else if (this.fU != 2) {
                                    if (this.fU >= 3 && this.bM[10] >= this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] + this.bX[this.bk[this.gb[this.fV]]][this.eV[this.gb[this.fV]]][6] * this.eQ * 50 / 100 && !this.eE[0]) {
                                       if (this.eD[0] == 1 && this.gb[this.fV] >= 5) {
                                          this.c(this.gb[this.fV]);
                                          this.fU = 0;
                                       } else if (this.eD[0] == 0 && this.gb[this.fV] >= 0 && this.gb[this.fV] < 5) {
                                          this.c(this.gb[this.fV]);
                                          this.fU = 0;
                                       }
                                    }
                                 } else if (this.bN[0] == 7) {
                                    this.fU = 0;
                                 } else if (this.bM[11] + 1 >= 8) {
                                    if (this.bM[9] < (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
                                       this.fU = 0;
                                    }

                                    if (this.bM[10] >= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
                                       this.fU = 0;
                                       var2 = 0;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          if (this.bk[var1] != -1) {
                                             ++var2;
                                          }
                                       }

                                       if (var2 <= 0) {
                                          var1 = aMath.rand(var2 + 1);
                                       } else {
                                          var1 = aMath.rand(var2);
                                       }

                                       this.fY = this.gb[var1];

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          if (this.bk[var1] != -1 && this.fY == this.bk[var1] && this.bM[9] < this.bX[this.bk[var1]][this.eV[var1]][6] + this.bX[this.bk[var1]][this.eV[var1]][6] * this.eQ * 50 / 100) {
                                             this.fY = -1;
                                             break;
                                          }
                                       }

                                       var18 = this.bM;
                                       var18[10] -= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0];
                                       var18 = this.bN;
                                       var10002 = var18[0]++;
                                       this.bN[1] = 0;
                                       this.bN[2] = 0;
                                       this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          var18 = this.bM;
                                          var18[9] += cB[1] * this.bO[var1][1] / 100;
                                       }

                                       this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          var18 = this.bM;
                                          var18[8] += cB[0] * this.bO[var1][0] / 100;
                                       }

                                       this.bM[25] = 14;
                                       Sound.getInstance().play(19);
                                    }
                                 } else {
                                    if (this.bM[9] < (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
                                       this.fU = 0;
                                    }

                                    if (this.bM[10] >= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
                                       this.fU = 0;
                                       var2 = 0;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          if (this.bk[var1] != -1) {
                                             ++var2;
                                          }
                                       }

                                       if (var2 <= 0) {
                                          var1 = aMath.rand(var2 + 1);
                                       } else {
                                          var1 = aMath.rand(var2);
                                       }

                                       this.fY = this.gb[var1];

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          if (this.bk[var1] != -1 && this.fY == this.bk[var1] && this.bM[9] < this.bX[this.bk[var1]][this.eV[var1]][6] + this.bX[this.bk[var1]][this.eV[var1]][6] * this.eQ * 50 / 100) {
                                             this.fY = -1;
                                             break;
                                          }
                                       }

                                       var18 = this.bM;
                                       var18[10] -= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0];
                                       var18 = this.bN;
                                       var10002 = var18[0]++;
                                       this.bN[1] = 0;
                                       this.bN[2] = 0;
                                       this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          var18 = this.bM;
                                          var18[9] += cB[1] * this.bO[var1][1] / 100;
                                       }

                                       this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                                       for(var1 = 0; var1 < 10; ++var1) {
                                          var18 = this.bM;
                                          var18[8] += cB[0] * this.bO[var1][0] / 100;
                                       }

                                       this.bM[25] = 14;
                                       Sound.getInstance().play(19);
                                    }
                                 }
                              }

                              this.eH[1] = (this.bV[0] / 2 - this.bM[5]) / 10 - 65 + this.excessWidth / 2;
                              this.eH[2] = -24 - this.eZ - this.he[0] - dv[this.hk[0]] / 2 - this.eI[0];
                              this.A.a(this.eH[1], this.eH[2], this.x);
                              this.eH[3] = this.x.x;
                              this.eH[4] = this.x.y;
                              this.A.a(this.eH[1] + 131, this.eH[2] + 131, this.x);
                              this.hj[0][0] = this.eH[3];
                              this.hj[0][1] = this.eH[4];
                              this.hj[0][2] = this.x.x - this.eH[3];
                              this.hj[0][3] = this.x.y - this.eH[4];
                              if (this.R()) {
                                 if (this.eE[0] || this.eE[4]) {
                                    this.eE[1] = true;
                                 }
                              } else if (!this.S()) {
                                 this.eE[1] = false;
                              }

                              if (this.ek[0] == 0 && !this.eE[3] || this.fT && !this.eE[3] && !this.eE[4] && this.ek[0] == 0) {
                                 var1 = 0;

                                 while(true) {
                                    if (var1 >= 6) {
                                       if (this.dV) {
                                          this.gA[1] = 5;
                                       }
                                       break;
                                    }

                                    if (this.R() && this.b(this.eJ[var1][0], this.eJ[var1][1], this.eJ[var1][2], this.eJ[var1][3]) && this.eM[var1]) {
                                       if (this.dW != var1 || !this.dV) {
                                          this.dW = var1;
                                          this.ag[this.gA[0] + 0].a(this.dc[this.dW], "FONT_SYSTEM_BOLD", 30, 1);

                                          for(var2 = this.gA[0]; var2 < this.gA[0] + 3; ++var2) {
                                             this.ag[var2 + 1].a(this.dd[this.dW][var2 - this.gA[0]], "FONT_SYSTEM_BOLD", 30, 1);
                                          }
                                       }

                                       this.dV = true;
                                    }

                                    ++var1;
                                 }
                              }

                              if (this.ek[0] == 0 && !this.eE[3]) {
                                 if (!this.fT) {
                                    if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                                       if (!this.gp[0]) {
                                          Sound.getInstance().play(10);
                                          this.gp[0] = true;
                                       }
                                    } else {
                                       this.gp[0] = false;
                                    }

                                    if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                                       if (!this.gp[1]) {
                                          Sound.getInstance().play(10);
                                          this.gp[1] = true;
                                       }
                                    } else {
                                       this.gp[1] = false;
                                    }
                                 }

                                 if (this.R() && this.b(this.fw[3][0], this.fw[3][1], this.fw[3][2], this.fw[3][3])) {
                                    if (!this.gp[3]) {
                                       Sound.getInstance().play(10);
                                       this.gp[3] = true;
                                    }
                                 } else {
                                    this.gp[3] = false;
                                 }

                                 if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) && !this.dV) {
                                    if (this.bR[0][0][12] == 0 && this.bR[0][0][9] == 0) {
                                       this.bR[0][0][12] = this.bR[0][0][11];
                                       this.bR[0][0][9] = 1;
                                       this.bR[0][0][10] = 0;
                                       var18 = this.bR[0][0];
                                       var10002 = var18[13]++;
                                       Sound.getInstance().play(19);
                                       Sound.getInstance().play(25);
                                       this.gA[1] = 0;
                                       this.dV = false;
                                       this.fU = 0;
                                    } else {
                                       Sound.getInstance().play(15);
                                    }
                                 } else if (this.S() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3]) && !this.dV) {
                                    this.gA[1] = 0;
                                    this.dV = false;
                                    if (this.bN[0] != 7) {
                                       if (this.bM[11] + 1 >= 8) {
                                          if (this.bM[10] >= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
                                             this.fU = 0;
                                             var18 = this.bM;
                                             var18[10] -= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0];
                                             var18 = this.bN;
                                             var10002 = var18[0]++;
                                             this.bN[1] = 0;
                                             this.bN[2] = 0;
                                             this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                                             for(var1 = 0; var1 < 10; ++var1) {
                                                var18 = this.bM;
                                                var18[9] += cB[1] * this.bO[var1][1] / 100;
                                             }

                                             this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                                             for(var1 = 0; var1 < 10; ++var1) {
                                                var18 = this.bM;
                                                var18[8] += cB[0] * this.bO[var1][0] / 100;
                                             }

                                             this.bM[25] = 14;
                                             Sound.getInstance().play(19);
                                          } else {
                                             Sound.getInstance().play(15);
                                          }
                                       } else if (this.bM[10] >= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
                                          this.fU = 0;
                                          var18 = this.bM;
                                          var18[10] -= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0];
                                          var18 = this.bN;
                                          var10002 = var18[0]++;
                                          this.bN[1] = 0;
                                          this.bN[2] = 0;
                                          this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                                          for(var1 = 0; var1 < 10; ++var1) {
                                             var18 = this.bM;
                                             var18[9] += cB[1] * this.bO[var1][1] / 100;
                                          }

                                          this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                                          for(var1 = 0; var1 < 10; ++var1) {
                                             var18 = this.bM;
                                             var18[8] += cB[0] * this.bO[var1][0] / 100;
                                          }

                                          this.bM[25] = 14;
                                          Sound.getInstance().play(19);
                                       } else {
                                          Sound.getInstance().play(15);
                                       }
                                    } else {
                                       Sound.getInstance().play(15);
                                    }
                                 } else if (this.S() && this.b(this.fw[3][0], this.fw[3][1], this.fw[3][2], this.fw[3][3]) && !this.dV) {
                                    Sound.getInstance().play(11);
                                    this.gA[1] = 0;
                                    this.dV = false;
                                    var18 = this.fx;
                                    var10002 = var18[3]++;
                                 } else {
                                    if (this.T()) {
                                       this.screenTransition();
                                       this.ee = true;
                                       if (this.cj[0] == 0) {
                                          Sound.getInstance().setVolume(50);
                                       }

                                       return;
                                    }

                                    if (this.S() && this.b(this.eJ[0][0], this.eJ[0][1], this.eJ[0][2], this.eJ[0][3]) && this.eM[0]) {
                                       var18 = this.eK;
                                       var10002 = var18[0]++;
                                       Sound.getInstance().play(11);
                                    } else if ((!this.S() || !this.b(this.eJ[1][0], this.eJ[1][1], this.eJ[1][2], this.eJ[1][3]) || !this.eM[1]) && (!this.S() || !this.b(this.eJ[2][0], this.eJ[2][1], this.eJ[2][2], this.eJ[2][3]) || !this.eM[2])) {
                                       if (this.S() && this.b(this.eJ[3][0], this.eJ[3][1], this.eJ[3][2], this.eJ[3][3]) && this.eM[3]) {
                                          var18 = this.eK;
                                          var10002 = var18[3]++;
                                          Sound.getInstance().play(11);
                                       } else if (!this.S() || !this.b(this.eJ[4][0], this.eJ[4][1], this.eJ[4][2], this.eJ[4][3]) || !this.eM[4]) {
                                          if (this.S() && this.b(this.eJ[5][0], this.eJ[5][1], this.eJ[5][2], this.eJ[5][3]) && this.eM[5]) {
                                             var18 = this.eK;
                                             var10002 = var18[5]++;
                                             Sound.getInstance().play(11);
                                          } else if (this.S() && this.b(this.hj[0][0], this.hj[0][1], this.hj[0][2], this.hj[0][3]) && this.dH <= 47 && !this.dV) {
                                             if (this.bd >= 1) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                Sound.getInstance().play(11);
                                                var18 = this.hk;
                                                var10002 = var18[0]++;
                                             }
                                          } else if (!this.eE[0] && this.ek[0] == 0 && !this.eE[1] && !this.eE[2]) {
                                             if (this.eD[0] == 0) {
                                                this.eH[0] = 0;
                                             } else if (this.eD[0] == 1) {
                                                this.eH[0] = 5;
                                             }

                                             if (this.R() && this.b(fb[this.eH[0] + 0] + this.excessWidth / 2, this.eZ + 543, 110, 88)) {
                                                if (!this.gp[4]) {
                                                   Sound.getInstance().play(10);
                                                   this.gp[4] = true;
                                                }
                                             } else {
                                                this.gp[4] = false;
                                             }

                                             if (this.R() && this.b(fb[this.eH[0] + 1] + this.excessWidth / 2, this.eZ + 543, 110, 88)) {
                                                if (!this.gp[5]) {
                                                   Sound.getInstance().play(10);
                                                   this.gp[5] = true;
                                                }
                                             } else {
                                                this.gp[5] = false;
                                             }

                                             if (this.R() && this.b(fb[this.eH[0] + 2] + this.excessWidth / 2, this.eZ + 543, 110, 88)) {
                                                if (!this.gp[6]) {
                                                   Sound.getInstance().play(10);
                                                   this.gp[6] = true;
                                                }
                                             } else {
                                                this.gp[6] = false;
                                             }

                                             if (this.R() && this.b(fb[this.eH[0] + 3] + this.excessWidth / 2, this.eZ + 543, 110, 88)) {
                                                if (!this.gp[7]) {
                                                   Sound.getInstance().play(10);
                                                   this.gp[7] = true;
                                                }
                                             } else {
                                                this.gp[7] = false;
                                             }

                                             if (this.R() && this.b(fb[this.eH[0] + 4] + this.excessWidth / 2, this.eZ + 543, 110, 88)) {
                                                if (!this.gp[8]) {
                                                   Sound.getInstance().play(10);
                                                   this.gp[8] = true;
                                                }
                                             } else {
                                                this.gp[8] = false;
                                             }

                                             if (this.S() && this.b(fb[this.eH[0] + 0] + this.excessWidth / 2, this.eZ + 543, 110, 88) && !this.dV) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                var18 = this.fy;
                                                var10002 = var18[0]++;
                                             }

                                             if (this.S() && this.b(fb[this.eH[0] + 1] + this.excessWidth / 2, this.eZ + 543, 110, 88) && !this.dV) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                var18 = this.fy;
                                                var10002 = var18[1]++;
                                             }

                                             if (this.S() && this.b(fb[this.eH[0] + 2] + this.excessWidth / 2, this.eZ + 543, 110, 88) && !this.dV) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                var18 = this.fy;
                                                var10002 = var18[2]++;
                                             }

                                             if (this.S() && this.b(fb[this.eH[0] + 3] + this.excessWidth / 2, this.eZ + 543, 110, 88) && !this.dV) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                var18 = this.fy;
                                                var10002 = var18[3]++;
                                             }

                                             if (this.S() && this.b(fb[this.eH[0] + 4] + this.excessWidth / 2, this.eZ + 543, 110, 88) && !this.dV) {
                                                this.gA[1] = 0;
                                                this.dV = false;
                                                var18 = this.fy;
                                                var10002 = var18[4]++;
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }

                        if (this.eL[0] == 0) {
                           this.eG = 1;
                        } else {
                           this.eG = 2;
                        }

                        if (this.eL[3] == 0) {
                           this.fT = false;
                        } else {
                           this.fT = true;
                        }

                        if (this.hm[0] == 1) {
                           this.bR[0][0][8] = this.bR[0][0][7];

                           for(var1 = 1; var1 < this.getLength(this.bR[0]); ++var1) {
                              if (this.bR[0][var1][0] != 0 && this.bR[0][var1][8] != 0) {
                                 this.bR[0][var1][8] = this.bR[0][var1][7];
                              }
                           }

                           this.hm[0] = 0;
                        }

                        if (this.hm[3] == 1) {
                           ++this.eN;

                           for(var1 = 0; var1 < this.getLength(this.eW); ++var1) {
                              this.eW[var1] = 0;
                           }

                           if (this.eN / 30 >= 60) {
                              this.hm[3] = 0;
                              this.eN = 0;
                           }
                        }

                        if (this.bM[14] != 0) {
                           this.eG = 1;
                           this.fT = false;
                           this.hm[3] = 0;
                           this.eN = 0;
                        }

                        this.f(this.eD[6]);
                        if (this.z < this.bM[28] * 100) {
                           this.z = this.bM[28] * 100;
                        } else if (this.z > 10000) {
                           this.z = 10000;
                        }

                        this.eH[1] = this.z / 100;
                        var6 = (float)this.eH[1] / 100.0F;
                        if (this.bM[5] < 0) {
                           this.bM[5] = 0;
                           if (this.bM[14] == 0) {
                              this.bM[12] = 0;
                           }

                           this.ek[0] = 0;
                        } else if (this.bM[5] > (int)(((float)this.bV[0] * var6 - (float)9600) / var6)) {
                           this.bM[5] = (int)(((float)this.bV[0] * var6 - (float)9600) / var6);
                           if (this.bM[14] == 0) {
                              this.bM[12] = 0;
                           }

                           this.ek[0] = 0;
                        }

                        for(var1 = 1; var1 < this.getLength(this.bR[0]); ++var1) {
                           if (this.bR[0][var1][0] == 0) {
                              this.ct = 0;
                              break;
                           }

                           this.ct = 1;
                        }

                        for(int var7 = 0; var7 < this.eG; ++var7) {
                           var17 = this.ep;
                           var17[0] += 6.0F;
                           if (this.bM[14] != 3) {
                              var18 = this.bM;
                              var10002 = var18[1]++;
                              if (this.bM[14] == 0) {
                                 var18 = this.bM;
                                 var10002 = var18[30]++;
                                 if (this.bM[30] >= 30000) {
                                    this.bM[30] = 30000;
                                 }
                              }

                              if (this.bM[14] == 0) {
                                 --this.bP;

                                 for(var1 = 0; var1 < this.getLength(this.bW); ++var1) {
                                    if (this.bW[var1][0] != 0) {
                                       this.eH[0] = this.bR[1][0][7] * this.bW[var1][5] / 100;
                                       if (this.bR[1][0][8] <= this.eH[0]) {
                                          if (this.bW[var1][1] == 0 || this.bQ[var1][1] < this.bW[var1][1]) {
                                             var18 = this.bQ[var1];
                                             var10002 = var18[0]--;
                                          }
                                       } else {
                                          this.bQ[var1][0] = 1;
                                       }
                                    }
                                 }

                                 if (this.bP <= 0) {
                                    var8 = 0;

                                    for(var1 = 1; var1 < this.getLength(this.bR[1]); var8 = var2) {
                                       var2 = var8;
                                       if (this.bR[1][var1][0] != 0) {
                                          var2 = var8 + 1;
                                       }

                                       ++var1;
                                    }

                                    if (var8 < this.bV[5]) {
                                       for(var1 = this.getLength(this.bW) - 1; var1 >= 0; --var1) {
                                          if (this.bW[var1][0] != 0 && this.bQ[var1][0] <= 0) {
                                             if (this.a(1, this.bW[var1][0], 0, this.bW[var1][6], this.bW[var1][7], 0) >= 0) {
                                                this.bP = aMath.rand(this.bV[3] - this.bV[2] + 1) + this.bV[2];
                                                this.bQ[var1][0] = aMath.rand(this.bW[var1][4] - this.bW[var1][3] + 1) + this.bW[var1][3];
                                                var18 = this.bQ[var1];
                                                var10002 = var18[1]++;
                                                if (this.bt[this.bW[var1][0] - 2] == 0) {
                                                   this.bt[this.bW[var1][0] - 2] = 1;
                                                }
                                             }
                                             break;
                                          }
                                       }
                                    }
                                 }
                              }

                              for(var1 = 0; var1 < this.getLength(this.bR[0]); ++var1) {
                                 if (this.bR[0][var1][0] != 0) {
                                    this.bR[0][var1][19] = 0;
                                    if (var1 == 0) {
                                       if (this.bR[0][0][9] == 1) {
                                          var18 = this.bR[0][0];
                                          var10002 = var18[10]++;
                                          if (this.bR[0][0][10] > 16) {
                                             this.bR[0][0][9] = 2;
                                             this.bR[0][0][10] = 0;
                                             Sound.getInstance().stop(25);
                                          }
                                       } else if (this.bR[0][0][9] == 2) {
                                          var18 = this.bR[0][0];
                                          var10002 = var18[10]++;
                                          if (this.bR[0][0][10] % 4 == 0) {
                                             for(var2 = 0; var2 < this.getLength(this.bT); ++var2) {
                                                if (this.bT[var2][0] == 0) {
                                                   if (this.bM[14] == 0) {
                                                      Sound.getInstance().play(26);
                                                   }

                                                   this.bT[var2][0] = this.getLength(cx);
                                                   this.bT[var2][1] = this.bR[0][0][3] + 270 - this.bR[0][0][10] / 4 * cw * 10;
                                                   this.bT[var2][2] = this.bR[0][0][13];
                                                   if (this.bR[0][0][10] / 4 >= this.bR[0][0][6]) {
                                                      this.bR[0][0][9] = 0;
                                                      this.bR[0][0][10] = 0;
                                                   }
                                                   break;
                                                }
                                             }
                                          }
                                       }

                                       if (this.bR[0][0][8] <= 0) {
                                          this.bR[0][0][1] = 2;
                                          var2 = this.bM[1] % 5;
                                          this.bS[0][var2 + 50][0] = 12;
                                          this.bS[0][var2 + 50][1] = this.bR[0][0][3] + 800 - 687 + (aMath.rand(241) - 120) * 10;
                                          this.bS[0][var2 + 50][2] = this.bR[0][0][4] - 587 - aMath.rand(323) * 10;
                                       } else if (this.bR[0][0][1] == 1) {
                                          var18 = this.bR[0][0];
                                          var10002 = var18[2]--;
                                          if (this.bR[0][0][2] <= 0) {
                                             this.bR[0][0][1] = 0;
                                             this.bR[0][0][2] = 0;
                                          }
                                       }

                                       if (this.bR[0][0][5] > 0) {
                                          var18 = this.bR[0][0];
                                          var10002 = var18[5]--;
                                       }
                                    } else {
                                       if (this.bR[0][var1][18] > 0) {
                                          var18 = this.bR[0][var1];
                                          var10002 = var18[18]--;
                                       }

                                       this.bR[0][var1][23] = 0;
                                       if (this.bR[0][var1][1] != 0) {
                                          if (this.bR[0][var1][1] == 3) {
                                             this.a(var1);
                                             if (this.bR[0][var1][2] == 0) {
                                                this.bR[0][var1][1] = 0;
                                                if (this.bR[0][var1][8] == 0) {
                                                   Sound.getInstance().play(24);
                                                   this.bR[0][var1][1] = 4;
                                                   this.bR[0][var1][2] = 0;
                                                   this.bR[0][var1][10] = (aMath.rand(6) + 5) * 10 * 3;
                                                   this.bR[0][var1][24] = 1000 - aMath.rand(40) * 10;
                                                   this.bR[0][var1][25] = 255;
                                                   this.bR[0][var1][26] = this.bR[0][var1][10] / 10 + aMath.rand(10);
                                                   this.bR[0][var1][27] = aMath.rand(40) + 20;
                                                   this.bR[0][var1][28] = aMath.rand(10) + 5;
                                                   this.bR[0][var1][29] = 0;
                                                }
                                             } else {
                                                var18 = this.bR[0][var1];
                                                var18[3] += 60;
                                                var18 = this.bR[0][var1];
                                                var18[4] += co[this.bR[0][var1][2]];
                                             }
                                          } else if (this.bR[0][var1][1] == 4) {
                                             this.a(var1);
                                             if (this.bR[0][var1][2] >= this.aE[1][0].a()) {
                                                this.bR[0][var1][0] = 0;
                                                this.bR[0][var1][27] = 0;
                                                this.bR[0][var1][28] = 0;
                                                this.bR[0][var1][29] = 0;
                                             }
                                          } else if (this.bR[0][var1][1] == 5) {
                                             this.a(var1);
                                             if (this.bR[0][var1][2] == 0) {
                                                this.bR[0][var1][1] = 0;
                                             } else {
                                                var18 = this.bR[0][var1];
                                                var18[3] += 20;
                                                var18 = this.bR[0][var1];
                                                var18[4] += cp[this.bR[0][var1][2]];
                                             }
                                          }
                                       } else {
                                          var2 = 0;

                                          boolean var20;
                                          while(true) {
                                             if (var2 >= this.getLength(this.bR[1])) {
                                                var20 = false;
                                                break;
                                             }

                                             if (this.a(0, var1, var2) == 1) {
                                                var20 = true;
                                                break;
                                             }

                                             ++var2;
                                          }

                                          if (!var20) {
                                             var18 = this.bR[0][var1];
                                             var18[3] -= this.bR[0][var1][10];
                                             this.a(var1);
                                          }
                                       }
                                    }
                                 }
                              }

                              this.eo = 0;
                              this.eH[0] = 0;
                              if (this.eL[5] >= 1) {
                                 if (this.bM[14] == 0) {
                                    for(var1 = 1; var1 < this.getLength(this.bR[1]); ++var1) {
                                       if (this.bR[1][var1][0] != 0 && this.bR[1][var1][1] < 3 && this.bR[1][var1][3] >= this.eH[0]) {
                                          this.eH[0] = this.bR[1][var1][3];
                                          this.eo = var1;
                                       }
                                    }

                                    this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 100 + 35 + 68;
                                    this.eH[2] = (int)((float)(this.bR[0][0][4] / 10 - 323 - 360 + 288 + 26) + 10.0F * aMath.sin(this.ep[0]));

                                    for(var1 = 0; var1 < 10 && this.eU[var1] != this.bR[1][this.eo][0]; ++var1) {
                                    }
                                 }

                                 if (this.eo >= 1) {
                                    this.ep[2] = -(360.0F - aMath.atan2((float)(this.eH[2] - (this.bR[1][this.eo][4] / 10 + this.bR[1][this.eo][5] * 4 - 58)), (float)(this.eH[1] - (this.bR[1][this.eo][3] - this.bM[5]) / 10)));
                                 } else {
                                    this.ep[2] = 0.0F;
                                 }

                                 if (this.ep[2] >= 0.0F) {
                                    this.ep[2] = 0.0F;
                                 }

                                 this.eH[0] = 0;
                                 if (this.ep[1] >= this.ep[2]) {
                                    var17 = this.ep;
                                    var10002 = var17[1]--;
                                    if (this.ep[1] <= this.ep[2]) {
                                       this.ep[1] = this.ep[2];
                                       this.eH[0] = 1;
                                    }
                                 } else if (this.ep[1] <= this.ep[2]) {
                                    var17 = this.ep;
                                    var10002 = var17[1]++;
                                    if (this.ep[1] >= this.ep[2]) {
                                       this.ep[1] = this.ep[2];
                                       this.eH[0] = 1;
                                    }
                                 }

                                 if (this.eo == 0) {
                                    this.eH[0] = 0;
                                 }

                                 this.eH[1] = this.bR[0][0][3] + 1770;
                                 this.eH[2] = (int)((float)(this.bR[0][0][4] - 3238 - 3600 + 2880) + 10.0F * aMath.sin(this.ep[0]) * 10.0F);
                                 ++this.ew;
                                 if (this.ew / 30 / 10 >= 1) {
                                    this.ew = 300;
                                 }

                                 if (this.eH[0] == 1 && this.ew / 30 / 10 >= 1 && !this.ex) {
                                    this.ew = 0;
                                    this.ex = true;
                                    this.ey = 0;
                                 }

                                 if (this.ex) {
                                    ++this.ey;
                                    if (this.ey == 2) {
                                       this.ez = -6;
                                    } else if (this.ey == 3) {
                                       this.ez = -10;
                                    } else if (this.ey == 4) {
                                       this.ez = -6;
                                    } else {
                                       this.ez = 0;
                                    }

                                    if (this.ey == 11) {
                                       this.eH[3] = 0;
                                       if (this.ep[1] >= this.ep[2]) {
                                          if (this.ep[1] <= this.ep[2]) {
                                             this.eH[3] = 1;
                                          }
                                       } else if (this.ep[1] <= this.ep[2] && this.ep[1] >= this.ep[2]) {
                                          this.eH[3] = 1;
                                       }

                                       if (this.eH[3] != 0 && this.bR[1][this.eo][0] != 0 && this.bR[1][this.eo][1] < 3 && this.eo != 0) {
                                          this.eH[0] = 1;
                                       } else {
                                          this.eH[0] = 0;
                                       }

                                       if (this.eH[0] >= 1) {
                                          for(var1 = 0; var1 < 50; ++var1) {
                                             if (!this.et[var1] && !this.et[var1]) {
                                                this.et[var1] = true;
                                                this.eu[var1] = 1500;
                                                this.eq[var1] = this.eH[1];
                                                this.er[var1] = this.eH[2];
                                                this.ev[var1] = (int)this.ep[2];
                                                this.es[var1] = this.eo;
                                                this.ew = 0;

                                                for(var1 = 0; var1 < this.getLength(this.eA); ++var1) {
                                                   this.eA[var1][0] = 0;
                                                   this.eA[var1][1] = 0;
                                                   this.eA[var1][3] = 0;
                                                   this.eA[var1][4] = 0;
                                                   if (var1 == 0) {
                                                      this.eA[var1][3] = 30;
                                                   } else if (var1 == 1) {
                                                      this.eA[var1][3] = -30;
                                                   } else if (var1 == 2) {
                                                      this.eA[var1][4] = 30;
                                                   } else if (var1 == 3) {
                                                      this.eA[var1][4] = -30;
                                                   }

                                                   this.eA[var1][2] = 0;
                                                }

                                                this.eC = true;
                                                break;
                                             }
                                          }
                                       } else {
                                          this.ex = false;
                                          this.ey = 0;
                                          this.ez = 0;
                                          this.ew = 300;
                                       }
                                    }

                                    if (this.ey >= 12 && this.eC) {
                                       for(var1 = 0; var1 < this.getLength(this.eA); ++var1) {
                                          var18 = this.eA[var1];
                                          var18[0] += this.eA[var1][3];
                                          var18 = this.eA[var1];
                                          var18[1] += this.eA[var1][4];
                                          var18 = this.eA[var1];
                                          var18[3] = (int)((double)var18[3] * 0.5);
                                          var18 = this.eA[var1];
                                          var18[4] = (int)((double)var18[4] * 0.5);
                                          var18 = this.eA[var1];
                                          var10002 = var18[2]++;
                                          if (this.eA[var1][2] / 2 >= 5) {
                                             this.eC = false;
                                          }
                                       }
                                    }

                                    if (this.ey == 11) {
                                       this.em[0] = 20;
                                    } else if (this.ey == 12) {
                                       this.em[0] = -10;
                                    } else if (this.ey == 13) {
                                       this.em[0] = 5;
                                    } else if (this.ey == 14) {
                                       this.em[0] = -2;
                                    } else if (this.ey == 15) {
                                       this.em[0] = 1;
                                    } else if (this.ey == 16) {
                                       this.em[0] = 0;
                                    }

                                    if (this.ey >= 28) {
                                       this.ex = false;
                                    }
                                 }

                                 for(var1 = 0; var1 < 50; ++var1) {
                                    if (this.et[var1]) {
                                       var18 = this.eq;
                                       var18[var1] = (int)((float)var18[var1] - (float)this.eu[var1] * aMath.cos((float)this.ev[var1]));
                                       var18 = this.er;
                                       var18[var1] = (int)((float)var18[var1] - (float)this.eu[var1] * aMath.sin((float)this.ev[var1]));
                                       if (this.er[var1] / 10 >= this.getHeight()) {
                                          this.et[var1] = false;
                                       }

                                       if (this.eq[var1] / 10 <= -100) {
                                          this.et[var1] = false;
                                       }
                                    }
                                 }
                              } else {
                                 this.eC = false;
                                 this.ex = false;

                                 for(var1 = 0; var1 < 50; ++var1) {
                                    if (this.et[var1]) {
                                       this.et[var1] = false;
                                    }
                                 }
                              }

                              this.eH[0] = 0;

                              int var9;
                              int var10;
                              int var11;
                              boolean var24;
                              for(var2 = 0; var2 < this.getLength(this.bR[1]); ++var2) {
                                 if (this.bR[1][var2][0] != 0) {
                                    this.bR[1][var2][19] = 0;
                                    if (var2 == 0) {
                                       if (this.bR[1][0][8] <= 0) {
                                          this.bR[1][0][1] = 2;
                                          var1 = this.bM[1] % 5;
                                          this.eH[1] = this.bR[1][0][3] - (fe[this.bM[20]][2] * 1180 / 100 + fe[this.bM[20]][0] * fe[this.bM[20]][2] / 100) / 2;
                                          this.bS[1][50 - var1][0] = 12;
                                          this.bS[1][50 - var1][1] = this.eH[1] - 687 + (aMath.rand(241) - 120) * 10;
                                          this.bS[1][50 - var1][2] = this.bR[1][0][4] - 587 - aMath.rand(323) * 10;
                                       } else if (this.bR[1][0][1] == 1) {
                                          var18 = this.bR[1][0];
                                          var10002 = var18[2]--;
                                          if (this.bR[1][0][2] <= 0) {
                                             this.bR[1][0][1] = 0;
                                             this.bR[1][0][2] = 0;
                                          }
                                       }

                                       if (this.bR[1][0][5] > 0) {
                                          var18 = this.bR[1][0];
                                          var10002 = var18[5]--;
                                       }
                                    } else {
                                       if (this.bR[1][var2][18] > 0) {
                                          var18 = this.bR[1][var2];
                                          var10002 = var18[18]--;
                                       }

                                       this.bR[1][var2][23] = 0;

                                       for(var1 = 0; var1 < 50; ++var1) {
                                          if (this.es[var1] == var2 && this.et[var1]) {
                                             if (this.bR[1][var2][1] <= 2) {
                                                if (this.bR[1][var2][3] >= this.eq[var1]) {
                                                   this.et[var1] = false;
                                                   var18 = this.bR[1][var2];
                                                   var18[19] += this.bR[0][0][7] / 20;
                                                   this.bR[1][var2][23] = 1;
                                                   this.eB[var1][0][0] = 12;
                                                   this.eB[var1][0][1] = this.bR[1][var2][3] - 687 - (aMath.rand(100) - 50) * 10;
                                                   this.eB[var1][0][2] = this.bR[1][var2][4] - 1175 + (aMath.rand(60) - 30) * 10;
                                                   this.eB[var1][1][0] = 12;
                                                   this.eB[var1][1][1] = this.bR[1][var2][3] - 687 - (aMath.rand(100) - 50) * 10;
                                                   this.eB[var1][1][2] = this.bR[1][var2][4] - 1175 + (aMath.rand(60) - 30) * 10;
                                                }
                                             } else if (this.bR[1][var2][3] >= this.eq[var1]) {
                                                this.et[var1] = false;
                                                this.eB[var1][0][0] = 12;
                                                this.eB[var1][0][1] = this.bR[1][var2][3] - 687 - (aMath.rand(100) - 50) * 10;
                                                this.eB[var1][0][2] = this.bR[1][var2][4] - 1175 + (aMath.rand(60) - 30) * 10;
                                                this.eB[var1][1][0] = 12;
                                                this.eB[var1][1][1] = this.bR[1][var2][3] - 687 - (aMath.rand(100) - 50) * 10;
                                                this.eB[var1][1][2] = this.bR[1][var2][4] - 1175 + (aMath.rand(60) - 30) * 10;
                                             }
                                          }
                                       }

                                       if (this.hm[1] == 1 && this.bR[1][var2][1] <= 2) {
                                          var18 = this.bR[1][var2];
                                          var18[19] += this.bR[0][0][16] * 3;
                                          this.bR[1][var2][23] = 1;
                                       }

                                       if (this.bR[1][var2][1] == 0) {
                                          var1 = 0;

                                          while(true) {
                                             if (var1 >= this.getLength(this.bR[1])) {
                                                var24 = false;
                                                break;
                                             }

                                             if (this.a(1, var2, var1) == 1) {
                                                var24 = true;
                                                break;
                                             }

                                             ++var1;
                                          }

                                          if (!var24) {
                                             var18 = this.bR[1][var2];
                                             var18[3] += this.bR[1][var2][10];
                                             this.b(var2);
                                          }
                                       } else if (this.bR[1][var2][1] == 3) {
                                          this.b(var2);
                                          if (this.bR[1][var2][2] == 0) {
                                             this.bR[1][var2][1] = 0;
                                             if (this.bR[1][var2][8] == 0) {
                                                Sound.getInstance().play(23);
                                                this.bR[1][var2][1] = 4;
                                                this.bR[1][var2][2] = 0;
                                                this.bR[1][var2][10] = (aMath.rand(12) + 10) * 10;
                                                this.bR[1][var2][24] = 1000 - aMath.rand(40) * 10;
                                                this.bR[1][var2][25] = 255;
                                                this.bR[1][var2][26] = this.bR[1][var2][10] / 10 + aMath.rand(10);
                                                this.bR[1][var2][27] = aMath.rand(40) + 20;
                                                this.bR[1][var2][28] = aMath.rand(10) + 5;
                                                this.bR[1][var2][29] = 0;
                                                var9 = this.bY[this.bR[1][var2][0]][6];
                                                var8 = 0;

                                                for(var1 = 0; var8 < 10; ++var8) {
                                                   var1 += cB[5] * this.bO[var8][5] / 100;
                                                }

                                                var10 = ad[8];
                                                var11 = this.bx[8];
                                                var18 = this.bM;
                                                var8 = var18[10];
                                                var18[10] = (var10 + var11 * 5 + var1) * var9 / 100 + var8;
                                                if (this.bM[10] > this.bM[9]) {
                                                   this.bM[10] = this.bM[9];
                                                }
                                             }
                                          } else {
                                             var18 = this.bR[1][var2];
                                             var18[3] -= 60;
                                             var18 = this.bR[1][var2];
                                             var18[4] += co[this.bR[1][var2][2]];
                                             var1 = 0;

                                             while(true) {
                                                if (var1 >= 10) {
                                                   var8 = 0;
                                                   break;
                                                }

                                                var8 = var1;
                                                if (this.eU[var1] == this.bR[1][var2][0]) {
                                                   break;
                                                }

                                                ++var1;
                                             }

                                             this.aw[var8].a(0).a().a(this.aw[var8], this.aw[var8].a(0).b(), this.aw[var8].a(0).c(), this.x);
                                             this.bR[1][var2][30] = this.x.x * 10 + 0;
                                             if (this.bR[1][var2][30] >= this.bR[1][var2][3]) {
                                                this.bR[1][var2][3] = this.bR[1][var2][30];
                                             }
                                          }
                                       } else if (this.bR[1][var2][1] == 4) {
                                          this.b(var2);
                                          if (this.bR[1][var2][2] >= this.aE[1][0].a()) {
                                             this.bR[1][var2][0] = 0;
                                             this.bR[1][var2][27] = 0;
                                             this.bR[1][var2][28] = 0;
                                             this.bR[1][var2][29] = 0;
                                          }
                                       } else if (this.bR[1][var2][1] == 5) {
                                          this.b(var2);
                                          if (this.bR[1][var2][2] == 0) {
                                             this.bR[1][var2][1] = 0;
                                          } else {
                                             var18 = this.bR[1][var2];
                                             var18[3] -= 20;
                                             var18 = this.bR[1][var2];
                                             var18[4] += cp[this.bR[1][var2][2]];
                                             var1 = 0;

                                             while(true) {
                                                if (var1 >= 10) {
                                                   var8 = 0;
                                                   break;
                                                }

                                                var8 = var1;
                                                if (this.eU[var1] == this.bR[1][var2][0]) {
                                                   break;
                                                }

                                                ++var1;
                                             }

                                             this.aw[var8].a(0).a().a(this.aw[var8], this.aw[var8].a(0).b(), this.aw[var8].a(0).c(), this.x);
                                             this.bR[1][var2][30] = this.x.x * 10 + 0;
                                             if (this.bR[1][var2][30] >= this.bR[1][var2][3]) {
                                                this.bR[1][var2][3] = this.bR[1][var2][30];
                                             }
                                          }
                                       }
                                    }
                                 }
                              }

                              for(var1 = 0; var1 < this.getLength(this.bR); ++var1) {
                                 for(var2 = 1; var2 < this.getLength(this.bR[0]); ++var2) {
                                    if (this.bR[var1][var2][0] != 0 && this.bR[var1][var2][1] == 0) {
                                       var8 = 0;

                                       while(true) {
                                          int[][][] var23 = this.bR;
                                          byte var19;
                                          if (var1 == 0) {
                                             var19 = 1;
                                          } else {
                                             var19 = 0;
                                          }

                                          if (var8 >= this.getLength(var23[var19])) {
                                             break;
                                          }

                                          if (this.a(var1, var2, var8) == 1) {
                                             this.bR[var1][var2][1] = 1;
                                             this.bR[var1][var2][2] = 0;
                                             break;
                                          }

                                          ++var8;
                                       }
                                    }
                                 }
                              }

                              if (this.hm[1] == 1) {
                                 this.hm[1] = 0;
                              }

                              for(var8 = 1; var8 < this.getLength(this.bR[0]); ++var8) {
                                 if (this.bR[0][var8][0] != 0) {
                                    if (this.bR[0][var8][1] == 1) {
                                       this.a(var8);
                                       var24 = false;

                                       for(var2 = 0; var2 < this.getLength(this.bR[1]); ++var2) {
                                          if (this.a(0, var8, var2) == 1) {
                                             if (this.bR[0][var8][18] == 0) {
                                                this.bR[0][var8][1] = 2;
                                                this.bR[0][var8][2] = 0;
                                                var24 = true;
                                                break;
                                             }

                                             var24 = true;
                                          }
                                       }

                                       if (!var24) {
                                          this.bR[0][var8][1] = 0;
                                          this.bR[0][var8][2] = 0;
                                       }
                                    }

                                    if (this.bR[0][var8][1] == 2) {
                                       this.a(var8);
                                       if (this.bR[0][var8][2] == 0) {
                                          this.bR[0][var8][1] = 1;
                                       } else if (this.bR[0][var8][2] == this.bR[0][var8][21]) {
                                          this.bR[0][var8][18] = this.bR[0][var8][12];
                                          this.ca = 0;

                                          for(var1 = 0; var1 < this.getLength(this.bR[1]); ++var1) {
                                             if (this.a(0, var8, var1) == 1) {
                                                this.bZ[this.ca][0] = var1;
                                                this.bZ[this.ca][1] = this.bR[1][var1][3] - this.bR[1][var1][14];
                                                ++this.ca;
                                             }
                                          }

                                          if (this.ca > 0) {
                                             if (this.bR[0][var8][20] == 0) {
                                                for(var1 = 0; var1 < this.ca - 1; ++var1) {
                                                   var10 = this.bZ[var1][1];
                                                   var2 = var1 + 1;

                                                   for(var9 = var1; var2 < this.ca; var10 = var11) {
                                                      var11 = var10;
                                                      if (this.bZ[var2][1] > var10) {
                                                         var11 = this.bZ[var2][1];
                                                         var9 = var2;
                                                      }

                                                      ++var2;
                                                   }

                                                   for(var2 = 0; var2 < 2; ++var2) {
                                                      this.bZ[51][var2] = this.bZ[var1][var2];
                                                      this.bZ[var1][var2] = this.bZ[var9][var2];
                                                      this.bZ[var9][var2] = this.bZ[51][var2];
                                                   }
                                                }

                                                var9 = this.bZ[0][1];
                                                var2 = 0;

                                                for(var1 = 0; var1 < this.ca && this.bZ[var1][1] == var9; ++var1) {
                                                   ++var2;
                                                }

                                                var1 = aMath.rand(var2);
                                                if (this.bR[0][var8][17] != 0 && this.bR[0][var8][17] == this.bR[1][this.bZ[var1][0]][16]) {
                                                   var18 = this.bR[1][this.bZ[var1][0]];
                                                   var18[19] += this.bR[0][var8][11] * 5 / 10;
                                                } else if (this.bR[0][var8][16] != 0 && this.bR[0][var8][16] == this.bR[1][this.bZ[var1][0]][17]) {
                                                   var18 = this.bR[1][this.bZ[var1][0]];
                                                   var18[19] += this.bR[0][var8][11] * 15 / 10;
                                                } else {
                                                   var18 = this.bR[1][this.bZ[var1][0]];
                                                   var18[19] += this.bR[0][var8][11];
                                                }
                                             } else {
                                                for(var1 = 0; var1 < this.ca; ++var1) {
                                                   if (this.bR[0][var8][17] != 0 && this.bR[0][var8][17] == this.bR[1][this.bZ[var1][0]][16]) {
                                                      var18 = this.bR[1][this.bZ[var1][0]];
                                                      var18[19] += this.bR[0][var8][11] * 5 / 10;
                                                   } else if (this.bR[0][var8][16] != 0 && this.bR[0][var8][16] == this.bR[1][this.bZ[var1][0]][17]) {
                                                      var18 = this.bR[1][this.bZ[var1][0]];
                                                      var18[19] += this.bR[0][var8][11] * 15 / 10;
                                                   } else {
                                                      var18 = this.bR[1][this.bZ[var1][0]];
                                                      var18[19] += this.bR[0][var8][11];
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }

                              for(var8 = 1; var8 < this.getLength(this.bR[1]); ++var8) {
                                 if (this.bR[1][var8][0] != 0) {
                                    if (this.bR[1][var8][1] == 1) {
                                       this.b(var8);
                                       var24 = false;

                                       for(var2 = 0; var2 < this.getLength(this.bR[0]); ++var2) {
                                          if (this.a(1, var8, var2) == 1) {
                                             if (this.bR[1][var8][18] == 0) {
                                                this.bR[1][var8][1] = 2;
                                                this.bR[1][var8][2] = 0;
                                                var24 = true;
                                                break;
                                             }

                                             var24 = true;
                                          }
                                       }

                                       if (!var24) {
                                          this.bR[1][var8][1] = 0;
                                          this.bR[1][var8][2] = 0;
                                       }
                                    }

                                    if (this.bR[1][var8][1] == 2) {
                                       this.b(var8);
                                       if (this.bR[1][var8][2] == 0) {
                                          this.bR[1][var8][1] = 1;
                                       } else if (this.bR[1][var8][2] == this.bR[1][var8][21]) {
                                          this.bR[1][var8][18] = this.bR[1][var8][12];
                                          this.ca = 0;

                                          for(var1 = 0; var1 < this.getLength(this.bR[0]); ++var1) {
                                             if (this.a(1, var8, var1) == 1) {
                                                this.bZ[this.ca][0] = var1;
                                                this.bZ[this.ca][1] = this.bR[0][var1][3] + this.bR[0][var1][14];
                                                ++this.ca;
                                             }
                                          }

                                          if (this.ca > 0) {
                                             if (this.bR[1][var8][20] == 0) {
                                                for(var1 = 0; var1 < this.ca - 1; ++var1) {
                                                   var11 = this.bZ[var1][1];
                                                   var2 = var1 + 1;

                                                   for(var9 = var1; var2 < this.ca; var11 = var10) {
                                                      var10 = var11;
                                                      if (this.bZ[var2][1] < var11) {
                                                         var10 = this.bZ[var2][1];
                                                         var9 = var2;
                                                      }

                                                      ++var2;
                                                   }

                                                   for(var2 = 0; var2 < 2; ++var2) {
                                                      this.bZ[51][var2] = this.bZ[var1][var2];
                                                      this.bZ[var1][var2] = this.bZ[var9][var2];
                                                      this.bZ[var9][var2] = this.bZ[51][var2];
                                                   }
                                                }

                                                var9 = this.bZ[0][1];
                                                var2 = 0;

                                                for(var1 = 0; var1 < this.ca && this.bZ[var1][1] == var9; ++var1) {
                                                   ++var2;
                                                }

                                                var1 = aMath.rand(var2);
                                                if (this.bR[1][var8][17] != 0 && this.bR[1][var8][17] == this.bR[0][this.bZ[var1][0]][16]) {
                                                   var18 = this.bR[0][this.bZ[var1][0]];
                                                   var18[19] += this.bR[1][var8][11] * 5 / 10;
                                                } else if (this.bR[1][var8][16] != 0 && this.bR[1][var8][16] == this.bR[0][this.bZ[var1][0]][17]) {
                                                   var18 = this.bR[0][this.bZ[var1][0]];
                                                   var18[19] += this.bR[1][var8][11] * 15 / 10;
                                                } else {
                                                   var18 = this.bR[0][this.bZ[var1][0]];
                                                   var18[19] += this.bR[1][var8][11];
                                                }
                                             } else {
                                                for(var1 = 0; var1 < this.ca; ++var1) {
                                                   if (this.bR[1][var8][17] != 0 && this.bR[1][var8][17] == this.bR[0][this.bZ[var1][0]][16]) {
                                                      var18 = this.bR[0][this.bZ[var1][0]];
                                                      var18[19] += this.bR[1][var8][11] * 5 / 10;
                                                   } else if (this.bR[1][var8][16] != 0 && this.bR[1][var8][16] == this.bR[0][this.bZ[var1][0]][17]) {
                                                      var18 = this.bR[0][this.bZ[var1][0]];
                                                      var18[19] += this.bR[1][var8][11] * 15 / 10;
                                                   } else {
                                                      var18 = this.bR[0][this.bZ[var1][0]];
                                                      var18[19] += this.bR[1][var8][11];
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }

                              for(var1 = 0; var1 < this.getLength(this.bT); ++var1) {
                                 if (this.bT[var1][0] > 0) {
                                    var18 = this.bT[var1];
                                    var10002 = var18[0]--;
                                    if (this.bT[var1][0] == 4) {
                                       for(var2 = 1; var2 < this.getLength(this.bR[1]); ++var2) {
                                          if (this.bR[1][var2][0] != 0 && this.bR[1][var2][1] <= 3 && this.bR[1][var2][22] < this.bT[var1][2] && this.bR[1][var2][3] - this.bR[1][var2][14] >= this.bT[var1][1]) {
                                             this.bR[1][var2][22] = this.bT[var1][2];
                                             if (this.bR[1][var2][1] <= 2) {
                                                var18 = this.bR[1][var2];
                                                var18[19] += this.bR[0][0][16];
                                                this.bR[1][var2][23] = 1;
                                             }
                                          }
                                       }
                                    }
                                 }
                              }

                              byte var22 = 0;

                              byte var21;
                              for(var9 = 0; var9 < 2; ++var9) {
                                 for(var1 = 0; var1 < this.getLength(this.bR[var9]); var22 = var21) {
                                    if (this.bR[var9][var1][0] == 0) {
                                       var10 = var1;
                                       var21 = var22;
                                    } else {
                                       var21 = var22;
                                       var10 = var1;
                                       if (this.bR[var9][var1][19] != 0) {
                                          this.bS[var9][var1][0] = 12;
                                          if (var1 == 0) {
                                             this.bS[var9][0][1] = this.bR[var9][0][3] - 687 + (aMath.rand(46) - 25) * 10;
                                             this.bS[var9][0][2] = this.bR[var9][0][4] - 1175 - aMath.rand(25) * 10;
                                             this.bR[var9][0][5] = 1;
                                             if (this.bR[var9][0][1] != 0 && this.bR[var9][0][1] != 1) {
                                                var22 = 2;
                                             } else {
                                                this.bR[var9][0][1] = 1;
                                                this.bR[var9][0][2] = 4;
                                                var22 = 2;
                                             }
                                          } else {
                                             var21 = var22;
                                             if (var22 == 0) {
                                                var21 = 1;
                                             }

                                             this.bS[var9][var1][1] = this.bR[var9][var1][3] - 687 - (aMath.rand(46) - 25) * 10;
                                             this.bS[var9][var1][2] = this.bR[var9][var1][4] - 1175 + (aMath.rand(31) - 15) * 10;
                                             var22 = var21;
                                          }

                                          var11 = this.bR[var9][var1][8];
                                          var18 = this.bR[var9][var1];
                                          var18[8] -= this.bR[var9][var1][19];
                                          if (this.bR[var9][var1][8] <= 0) {
                                             this.bR[var9][var1][8] = 0;
                                          }

                                          int var12;
                                          if (var1 >= 1) {
                                             var12 = this.bR[var9][var1][7] / this.bR[var9][var1][9];

                                             for(var8 = 0; var8 < this.bR[var9][var1][9] && this.bR[var9][var1][8] > var12 * var8; ++var8) {
                                             }

                                             for(var10 = 0; var10 < this.bR[var9][var1][9] && var11 > var12 * var10; ++var10) {
                                             }

                                             if (var8 != this.bR[var9][var1][9] && var8 != var10) {
                                                this.bR[var9][var1][1] = 3;
                                                this.bR[var9][var1][2] = 0;
                                                var21 = var22;
                                                var10 = var1;
                                             } else {
                                                var21 = var22;
                                                var10 = var1;
                                                if (this.bR[var9][var1][23] == 1) {
                                                   this.bR[var9][var1][1] = 5;
                                                   this.bR[var9][var1][2] = 0;
                                                   var21 = var22;
                                                   var10 = var1;
                                                }
                                             }
                                          } else if (this.bR[var9][var1][8] == 0 && this.bM[14] == 0) {
                                             this.bM[15] = 0;
                                             this.bM[16] = 0;
                                             this.cj[0] = 0;
                                             this.cj[1] = 0;
                                             this.cj[2] = 0;
                                             this.cj[3] = -1;
                                             if (var9 == 0) {
                                                this.bM[12] = 1;
                                                Sound.getInstance().play(9);

                                                for(var8 = 1; var8 < this.getLength(this.bR[0]); ++var8) {
                                                   if (this.bR[0][var8][0] != 0 && this.bR[0][var8][1] != 4) {
                                                      this.bR[0][var8][1] = 4;
                                                      this.bR[0][var8][2] = 0;
                                                      this.bR[0][var8][8] = 0;
                                                      this.bR[0][var8][10] = (aMath.rand(12) + 10) * 10;
                                                      this.bR[0][var8][24] = 1000 - aMath.rand(40) * 10;
                                                      this.bR[0][var8][25] = 255;
                                                      this.bR[0][var8][26] = this.bR[0][var8][10] / 10 + aMath.rand(10);
                                                      this.bR[0][var8][27] = aMath.rand(40) + 20;
                                                      this.bR[0][var8][28] = aMath.rand(10) + 5;
                                                      this.bR[0][var8][29] = 0;
                                                   }
                                                }

                                                if (this.bM[0] != 48) {
                                                   this.bM[14] = 2;
                                                   this.bM[24] = 0;
                                                   var21 = var22;
                                                   var10 = var1;
                                                } else {
                                                   this.bM[14] = 5;
                                                   this.bM[22] = 0;
                                                   this.bM[23] = 0;
                                                   if (this.aU < this.bM[22]) {
                                                      this.aU = this.bM[22];
                                                      this.bM[23] = 1;
                                                   }

                                                   if (this.aW < this.bM[22]) {
                                                      this.aW = this.bM[22];
                                                   }

                                                   this.ac();
                                                   var21 = var22;
                                                   var10 = var1;
                                                }
                                             } else {
                                                var21 = var22;
                                                var10 = var1;
                                                if (var9 == 1) {
                                                   this.bM[12] = 2;
                                                   Sound.getInstance().stop(-1);
                                                   Sound.getInstance().play(8);

                                                   for(var8 = 1; var8 < this.getLength(this.bR[1]); ++var8) {
                                                      if (this.bR[1][var8][0] != 0 && this.bR[1][var8][1] != 4) {
                                                         this.bR[1][var8][1] = 4;
                                                         this.bR[1][var8][2] = 0;
                                                         this.bR[1][var8][8] = 0;
                                                         this.bR[1][var8][10] = (aMath.rand(12) + 10) * 10;
                                                         this.bR[1][var8][24] = 1000 - aMath.rand(40) * 10;
                                                         this.bR[1][var8][25] = 255;
                                                         this.bR[1][var8][26] = this.bR[1][var8][10] / 10 + aMath.rand(10);
                                                         this.bR[1][var8][27] = aMath.rand(40) + 20;
                                                         this.bR[1][var8][28] = aMath.rand(10) + 5;
                                                         this.bR[1][var8][29] = 0;
                                                      }
                                                   }

                                                   if (this.bM[0] == 48) {
                                                      this.bM[14] = 4;
                                                      var8 = this.bM[30];
                                                      this.bM[22] = (30000 - var8) * (30000 - var8);
                                                      this.bM[23] = 0;
                                                      if (this.aU < this.bM[22]) {
                                                         this.aU = this.bM[22];
                                                         this.bM[23] = 1;
                                                      }

                                                      if (this.aW < this.bM[22]) {
                                                         this.aW = this.bM[22];
                                                      }

                                                      this.ac();
                                                      var21 = var22;
                                                      var10 = var1;
                                                   } else {
                                                      this.bM[14] = 1;
                                                      var10 = (this.bM[0] * 300 + 1000) * (this.eQ * 0 + 10) / 10;
                                                      var18 = this.bM;
                                                      if (this.br[this.eQ][this.bM[0]] > 7) {
                                                         var8 = 7;
                                                      } else {
                                                         var8 = this.br[this.eQ][this.bM[0]];
                                                      }

                                                      var18[17] = var10 - var8 * var10 / 8;
                                                      var10 = 0;

                                                      for(var8 = 0; var10 < 10; ++var10) {
                                                         var8 += cB[3] * this.bO[var10][3] / 100;
                                                      }

                                                      var11 = ad[9];
                                                      var10 = this.bx[9];
                                                      this.bM[17] = (var11 + var10 * 5 + var8) * this.bM[17] / 100;
                                                      if (this.eL[4] == 1) {
                                                         this.bM[17] = this.bM[17] * 15 / 10;
                                                      }

                                                      this.aY += this.bM[17];
                                                      if (this.aY >= 99999999) {
                                                         this.aY = 99999999;
                                                      }

                                                      this.bM[21] = 0;
                                                      this.bM[33] = 0;
                                                      if (this.bq[this.eQ] == this.bM[0]) {
                                                         if (this.bM[0] == 6) {
                                                            this.bM[33] = 1;
                                                         }

                                                         var18 = this.bq;
                                                         var8 = this.eQ;
                                                         var10002 = var18[var8]++;
                                                         this.bM[31] = this.bq[this.eQ];
                                                         this.bM[32] = -1;
                                                         var18 = this.bp;
                                                         var8 = this.eQ;
                                                         var10002 = var18[var8]++;
                                                         this.bI = -1;
                                                         if (this.bq[this.eQ] == 48) {
                                                            this.bM[21] = 1;
                                                            this.bp[this.eQ] = 47;

                                                            for(var1 = 0; var1 < this.getLength(this.bJ); ++var1) {
                                                               if (this.bJ[var1][15] == this.eQ && this.bJ[var1][0] == this.bM[31] && this.bJ[var1][1] == 0) {
                                                                  this.bM[32] = var1;
                                                               }
                                                            }
                                                         }
                                                      } else {
                                                         this.bM[31] = -1;
                                                      }

                                                      var18 = this.br[this.eQ];
                                                      var8 = this.bM[0];
                                                      var10002 = var18[var8]++;
                                                      var21 = var22;
                                                      var10 = var1;
                                                      if (this.br[this.eQ][this.bM[0]] > 999) {
                                                         this.br[this.eQ][this.bM[0]] = 999;
                                                         var21 = var22;
                                                         var10 = var1;
                                                      }
                                                   }
                                                }
                                             }
                                          } else {
                                             var21 = var22;
                                             var10 = var1;
                                             if (var9 == 1) {
                                                this.eH[0] = 0;

                                                for(var8 = 0; var8 < 10; ++var8) {
                                                   if (this.eQ == var8 && this.bM[0] == 47) {
                                                      this.eH[0] = var8;
                                                      break;
                                                   }
                                                }

                                                if (this.eH[0] >= 1) {
                                                   var18 = this.eH;
                                                   var10002 = var18[0]++;
                                                }

                                                var21 = var22;
                                                var10 = var1;
                                                if (cn[(this.bM[0] + this.eH[0]) * 3 + 1] > 0) {
                                                   var21 = var22;
                                                   var10 = var1;
                                                   if (cn[(this.bM[0] + this.eH[0]) * 3 + 1] <= 99) {
                                                      var12 = this.bR[var9][var1][7] * cn[(this.bM[0] + this.eH[0]) * 3 + 1] / 100;
                                                      var21 = var22;
                                                      var10 = var1;
                                                      if (var11 > var12) {
                                                         var21 = var22;
                                                         var10 = var1;
                                                         if (this.bR[var9][var1][8] <= var12) {
                                                            this.cj[0] = 1;
                                                            this.cj[1] = 0;
                                                            this.cj[2] = 45;
                                                            this.cj[3] = cn[(this.bM[0] + this.eH[0]) * 3 + 2];
                                                            this.cj[4] = 1;
                                                            var21 = var22;
                                                            var10 = var1;
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }

                                    var1 = var10 + 1;
                                 }
                              }

                              if (this.bM[14] == 0) {
                                 if (var22 == 1) {
                                    Sound.getInstance().play(aMath.rand(2) + 20);
                                 } else if (var22 == 2) {
                                    Sound.getInstance().play(22);
                                 }

                                 for(var1 = 0; var1 < 10; ++var1) {
                                    if (this.eW[var1] > 0) {
                                       var18 = this.eW;
                                       var10002 = var18[var1]--;
                                       if (this.eW[var1] == 0) {
                                          Sound.getInstance().play(27);
                                       }
                                    }
                                 }

                                 var18 = this.bM;
                                 var18[10] += this.bM[8];
                                 if (this.bM[10] > this.bM[9]) {
                                    this.bM[10] = this.bM[9];
                                 }

                                 if (this.bR[0][0][12] > 0) {
                                    var18 = this.bR[0][0];
                                    var10002 = var18[12]--;
                                    if (this.bR[0][0][12] == 0) {
                                       Sound.getInstance().play(28);
                                    }
                                 }
                              }

                              if (this.bM[25] > 0) {
                                 var18 = this.bM;
                                 var10002 = var18[25]--;
                              }

                              for(var1 = 0; var1 < this.getLength(this.eB); ++var1) {
                                 for(var2 = 0; var2 < this.getLength(this.eB[var1]); ++var2) {
                                    if (this.eB[var1][var2][0] > 0) {
                                       var18 = this.eB[var1][var2];
                                       var10002 = var18[0]--;
                                    }
                                 }
                              }

                              for(var1 = 0; var1 < this.getLength(this.bS); ++var1) {
                                 for(var2 = 0; var2 < this.getLength(this.bS[var1]); ++var2) {
                                    if (this.bS[var1][var2][0] > 0) {
                                       var18 = this.bS[var1][var2];
                                       var10002 = var18[0]--;
                                    }
                                 }
                              }
                           }
                        }

                        if (this.bV[4] == 2) {
                           for(var1 = 0; var1 < this.getLength(this.cc); ++var1) {
                              var18 = this.cc[var1];
                              var18[2] += this.cc[var1][3];
                              if (this.cc[var1][2] >= 400) {
                                 this.cc[var1][0] = (var1 * 192 + aMath.rand(192)) % (this.bV[0] / 10 + this.excessWidth * 4);
                                 this.cc[var1][1] = aMath.rand((100 - this.bM[28]) * 20 + 200) - (100 - this.bM[28]) * 20;
                                 this.cc[var1][2] = 0;
                                 this.cc[var1][3] = aMath.rand(20) + 5;
                                 this.cc[var1][4] = aMath.rand(7);
                              }
                           }
                        } else if (this.bV[4] == 3) {
                           for(var1 = 0; var1 < this.getLength(this.ce); ++var1) {
                              var18 = this.ce[var1];
                              var18[0] = (int)((float)var18[0] + aMath.cos((float)this.ce[var1][2]) * (float)this.ce[var1][3]);
                              this.ce[var1][0] = (this.ce[var1][0] + this.bV[0] * 10 + this.excessWidth * 100 * 4) % (this.bV[0] * 10 + this.excessWidth * 100 * 4);
                              var18 = this.ce[var1];
                              var18[1] = (int)((float)var18[1] + aMath.sin((float)this.ce[var1][2]) * (float)this.ce[var1][3]);
                              if (this.ce[var1][1] >= 66000 + (640 - (100 - this.bM[28]) * 120 / 100) * 100) {
                                 this.ce[var1][1] = -((100 - this.bM[28]) * 2000);
                                 this.ce[var1][2] = 175 - aMath.rand(85);
                                 this.ce[var1][3] = aMath.rand(600) + 200;
                              }
                           }
                        }

                        var18 = this.fd;
                        var10002 = var18[0]++;
                        var18 = this.fc;
                        var10002 = var18[0]++;
                        if (this.fc[0] == 3) {
                           this.fc[1] = 1;
                        } else if (this.fc[0] >= 6) {
                           this.fc[0] = 0;
                           this.fc[1] = 0;
                        }

                        if (this.cj[0] != 0) {
                           if (this.cj[0] == 1) {
                              var18 = this.cj;
                              var10002 = var18[1]++;
                              if (this.cj[1] == this.cj[2]) {
                                 Sound.getInstance().stop(-1);
                                 if (this.cj[3] != -1) {
                                    Sound.getInstance().play(this.cj[3]);
                                 }

                                 this.cj[0] = 0;
                                 this.cj[1] = 0;
                                 this.cj[2] = 0;
                                 this.cj[3] = -1;
                              } else if ((this.cj[2] - this.cj[1]) * 100 / this.cj[2] <= 0) {
                                 Sound.getInstance().setVolume(0);
                              } else {
                                 Sound.getInstance().setVolume((this.cj[2] - this.cj[1]) * 100 / this.cj[2]);
                              }
                           }
                        } else {
                           this.cj[0] = 0;
                           this.cj[1] = 0;
                           this.cj[2] = 0;
                           this.cj[3] = -1;
                        }

                        var17 = this.hb;
                        var17[0] += 0.5F;
                        var17 = this.hb;
                        var17[2] += 0.5F;
                     } else if (this.ee && !this.eb) {
                        var17 = this.hb;
                        var17[2] += 0.5F;
                        if (this.fC[1] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[1]++;
                           if (this.fC[1] > this.getLength(dv) - 1) {
                              this.fC[1] = 0;
                              if (!MyUtility.isConnected()) {
                                 MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                              } else {
                                 this.t = true;
                                 MyUtility.getInstance().addProgressDialog(MyUtility.getString("connecting"));
                                 MyUtility.getInstance().addAlertAppliPage("facebook", this.r);
                              }
                           }
                        } else if (this.fC[2] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[2]++;
                           if (this.fC[2] > this.getLength(dv) - 1) {
                              this.fC[2] = 0;
                              //if (!jp.co.ponos.library.c.a.b().e()) {
                              //   jp.co.ponos.library.c.a.b().c();
                              //} else {
                              //   jp.co.ponos.library.c.a.b().d();
                              //}
                           }
                        } else if (this.fC[3] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[3]++;
                           if (this.fC[3] > this.getLength(dv) - 1) {
                              this.fC[3] = 0;
                              if (!Sound.getInstance().isMutedBGM()) {
                                 Sound.getInstance().muteBGM(true);
                              } else {
                                 Sound.getInstance().muteBGM(false);
                                 Sound.getInstance().reloadSounds();
                              }
                           }
                        } else if (this.fC[4] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[4]++;
                           if (this.fC[4] > this.getLength(dv) - 1) {
                              this.fC[4] = 0;
                              if (!Sound.getInstance().isMutedSE()) {
                                 Sound.getInstance().muteSE(true);
                              } else {
                                 Sound.getInstance().muteSE(false);
                              }
                           }
                        } else if (this.fC[5] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[5]++;
                           if (this.fC[5] > this.getLength(dv) - 1) {
                              this.fC[5] = 0;
                              this.ee = false;
                              this.ef = false;
                              if (this.cj[0] == 0) {
                                 Sound.getInstance().setVolume(100);
                              }
                           }
                        } else if (this.fC[6] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[6]++;
                           if (this.fC[6] > this.getLength(dv) - 1) {
                              this.fC[6] = 0;
                              this.ef = true;
                              Sound.getInstance().play(42);
                           }
                        } else if (this.fC[7] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[7]++;
                           if (this.fC[7] > this.getLength(dv) - 1) {
                              this.fC[7] = 0;
                              this.screenTransition();
                              this.j = true;
                              this.menuType = 2;
                              return;
                           }
                        } else if (this.fC[8] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[8]++;
                           if (this.fC[8] > this.getLength(dv) - 1) {
                              this.fC[8] = 0;
                              this.ee = false;
                              this.ef = false;
                              if (this.cj[0] == 0) {
                                 Sound.getInstance().setVolume(100);
                              }

                              if (this.dH <= 47) {
                                 this.screenTransition();
                                 this.ha[0] = true;
                                 Sound.getInstance().play(34);
                                 var1 = this.cj[0];
                                 return;
                              }
                           }
                        } else if (this.fC[9] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[9]++;
                           if (this.fC[9] > this.getLength(dv) - 1) {
                              this.fC[9] = 0;
                           }
                        } else if (this.fC[10] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[10]++;
                           if (this.fC[10] > this.getLength(dv) - 1) {
                              this.fC[10] = 0;
                              this.eb = true;
                              this.ed = 1;
                           }
                        } else if (this.fC[11] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[11]++;
                           if (this.fC[11] > this.getLength(dv) - 1) {
                              this.fC[11] = 0;
                              this.ef = false;
                           }
                        } else if (this.fC[12] >= 1) {
                           var18 = this.fC;
                           var10002 = var18[12]++;
                           if (this.fC[12] > this.getLength(dv) - 1) {
                              this.fC[12] = 0;
                              if (!MyUtility.isConnected()) {
                                 MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
                              } else {
                                 this.o = true;
                                 this.t = true;
                                 MyUtility.getInstance().addProgressDialog(MyUtility.getString("connecting"));
                                 MyUtility.getInstance().addAlertAppliPage("facebook", this.r);
                              }
                           }
                        } else {
                           if (!this.ef) {
                              for(var1 = 0; var1 < 10; ++var1) {
                                 if (var1 != 0 && var1 != 2 && var1 != 5 && (var1 != 8 || this.bd != 0 && this.dH < 48) && var1 != 9) {
                                    if (this.R() && this.b(this.fB[var1][0], this.fB[var1][1], this.fB[var1][2], this.fB[var1][3])) {
                                       if (!this.gp[var1]) {
                                          Sound.getInstance().play(10);
                                          this.gp[var1] = true;
                                       }
                                    } else {
                                       this.gp[var1] = false;
                                    }
                                 }
                              }
                           } else {
                              if (this.R() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3])) {
                                 if (!this.gp[10]) {
                                    Sound.getInstance().play(10);
                                    this.gp[10] = true;
                                 }
                              } else {
                                 this.gp[10] = false;
                              }

                              if (this.R() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3])) {
                                 if (!this.gp[11]) {
                                    Sound.getInstance().play(10);
                                    this.gp[11] = true;
                                 }
                              } else {
                                 this.gp[11] = false;
                              }
                           }

                           if (this.R() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
                              if (!this.gp[5]) {
                                 Sound.getInstance().play(10);
                                 this.gp[5] = true;
                              }
                           } else {
                              this.gp[5] = false;
                           }

                           if (!this.ef) {
                              if ((!this.S() || !this.b(this.fB[0][0], this.fB[0][1], this.fB[0][2], this.fB[0][3])) && (!this.S() || !this.b(this.fB[1][0], this.fB[1][1], this.fB[1][2], this.fB[1][3]))) {
                                 if (this.S() && this.b(this.fB[2][0], this.fB[2][1], this.fB[2][2], this.fB[2][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[2]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.S() && this.b(this.fB[3][0], this.fB[3][1], this.fB[3][2], this.fB[3][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[3]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.S() && this.b(this.fB[4][0], this.fB[4][1], this.fB[4][2], this.fB[4][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[4]++;
                                 } else if (this.S() && this.b(this.fB[6][0], this.fB[6][1], this.fB[6][2], this.fB[6][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[6]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.S() && this.b(this.fB[7][0], this.fB[7][1], this.fB[7][2], this.fB[7][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[7]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.S() && this.b(this.fB[12][0], this.fB[12][1], this.fB[12][2], this.fB[12][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[12]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.S() && this.b(this.fB[8][0], this.fB[8][1], this.fB[8][2], this.fB[8][3])) {
                                    if (this.dH <= 47 && this.bd >= 1) {
                                       var18 = this.fC;
                                       var10002 = var18[8]++;
                                       this.gA[1] = 0;
                                       this.dV = false;
                                       Sound.getInstance().play(11);
                                    }
                                 } else if (this.S() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
                                    var18 = this.fC;
                                    var10002 = var18[5]++;
                                    Sound.getInstance().play(11);
                                 } else if (this.T()) {
                                    if (!this.ef) {
                                       this.ee = false;
                                       this.ef = false;
                                       if (this.cj[0] == 0) {
                                          Sound.getInstance().setVolume(100);
                                       }
                                    } else {
                                       this.ef = false;
                                    }
                                 }
                              }
                           } else if (this.S() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3])) {
                              var18 = this.fC;
                              var10002 = var18[10]++;
                              Sound.getInstance().play(11);
                           } else if (this.S() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3])) {
                              var18 = this.fC;
                              var10002 = var18[11]++;
                              Sound.getInstance().play(11);
                           } else if (this.S() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
                              var18 = this.fC;
                              var10002 = var18[5]++;
                              Sound.getInstance().play(11);
                           } else if (this.T()) {
                              if (!this.ef) {
                                 this.ee = false;
                                 this.ef = false;
                                 if (this.cj[0] == 0) {
                                    Sound.getInstance().setVolume(100);
                                 }
                              } else {
                                 this.ef = false;
                              }
                           }
                        }
                     } else if (this.ha[0] && !this.q()) {
                        return;
                     }

                     var18 = this.fQ;
                     var10002 = var18[5]++;
                     if (!this.g(this.ed)) {
                        return;
                     }

                     var18 = this.gA;
                     var10002 = var18[1]--;
                     if (this.gA[1] <= 0) {
                        this.gA[1] = 0;
                     }
                  }
               }

               if (this.gU) {
                  this.G();
               } else {
                  this.x();
               }

               this.screenTransition();
            }
         }
      } else {
         MyUtility.getInstance().addProgressDialog();
         ++this.D;
      }

   }

   void e(int var1) {
      byte var2 = 0;
      //if (!jp.co.ponos.library.b.aa.equals(jp.co.ponos.library.b.stream.b.d(String.format("unit%03d.csv", var1 + 1)), (new String[]{"c1270af3244e3bcbee86ee907b6620d6", "5e2d37c28d9e40a9f8782a8e27795f3d", "460611b2de02427382067dcc3d0cc814", "402c64570c5e2c4e8215e4931cf977b2", "b839b84eae1717435ca8f3f2e7e1a854", "4f51f1ddc6d279b46256015a8bf80a4c", "988ce06e07fc9a37a3e5c15f0a28524e", "b9dbe2183b5499818190caa0b9c3f71c", "9b04a3c0dd286686a75278299ffd1a3e", "a31375f8f95246ac8216e68036811d2b", "3d6cb7f95624b4bb8ad7fa2550778882", "aaa281d59c8d7df53f507048492a6cc0", "d96417e8192416632355f20e812aa7bd", "cdc09e9ee36c50c6c4eba2dcb3a3333f", "fb7ecb5101a43146354e1cc05742db04", "d1cb69d162b974483778f35c6f9b6b95", "06259e2354febd4a8f2ec5a790b4cb4d", "ae541a88640505aa18dba6b13dcacf70", "defde8fb3562f29a1439db6904cb1f4d", "09cd101bfb8fd4932177c0a55fc0fe16", "210e495fbe7f5b5df2d08f6754b32e28", "68954abe7e5c084b14876b38a4bcb463", "1550f363ff89f2d491beb020dbc8ac8a", "d1cb69d162b974483778f35c6f9b6b95", "9596d33e9868e98d6f2ffd76a8efac2f", "cc0a57073a5038c5017d11f7077ad570"})[var1])) {
      //   this.D = 0;
      //   this.j(4);
      //} else {
          AssetTextStream var3 = new AssetTextStream();
         var3.openRead(String.format("unit%03d.csv", var1 + 1));

         int var4;
         for(var4 = 0; var4 < this.getLength(this.bX[var1 + 2]); ++var4) {
            var3.readLine();

            for(int var5 = 0; var5 < this.getLength(this.bX[var1 + 2][var4]); ++var5) {
               this.bX[var1 + 2][var4][var5] = 0;
               this.bX[var1 + 2][var4][var5] = var3.getInt(var5);
            }

            this.bX[var1 + 2][var4][2] = this.bX[var1 + 2][var4][2] * 4 / 2;
            this.bX[var1 + 2][var4][4] *= 2;
            this.bX[var1 + 2][var4][5] *= 4;
            this.bX[var1 + 2][var4][7] *= 2;
            this.bX[var1 + 2][var4][9] *= 4;
         }

         for(var4 = var2; var4 < this.getLength(this.bX[var1 + 2]); ++var4) {
            int[] var6 = this.bX[var1 + 2][var4];
            var6[6] *= 100;
         }

         var3.close();
      //}

   }

   void e(TextureRenderer var1) {
      int var2;
      int var3;
      if (this.bM[15] >= 1) {
         var2 = this.bM[16];
         if (this.bM[15] != 1) {
            var3 = this.getLength(cs) - 1;
         } else {
            var3 = var2;
            if (var2 > this.getLength(cs) - 1) {
               var3 = this.getLength(cs) - 1;
            }
         }

         var1.drawScaledImageI(this.ae[19], this.getWidth() / 2 - 152, cs[var3] - 50, 3);
      }

      if (this.bM[15] >= 2) {
         var1.setBlendMode(3);
         var1.setColor(40, 40, 77);
         var1.drawRectangle(0, 315, this.getWidth(), 55);
         var1.setBlendMode(0);
         var2 = 10;

         for(var3 = 0; var2 <= this.bM[22]; --var3) {
            var2 *= 10;
         }

         int var4 = this.getWidth() / 2;
         var1.drawScaledImageI(this.ae[19], var4 - 14 - 144 + var3 * 14 - 20, 324, 5);
         var4 = this.bM[23];

         for(var2 /= 10; var2 >= 1; var2 /= 10) {
            var4 = this.getWidth() / 2;
            var1.drawScaledImageI(this.ae[4], var4 - 14 + var3 * 14, 321, this.bM[22] / var2 % 10);
            var3 += 2;
         }

         var2 = this.getWidth() / 2;
         var1.drawScaledImageI(this.ae[19], var3 * 16 + (var2 - 16) + 20, 323, 4);
      }

   }

   @Override
   public void screenTransition() {
      TextureRenderer.getInstance().clearScreen();
      TextureRenderer textureRenderer = TextureRenderer.getInstance();
      textureRenderer.resetProjection();
      textureRenderer.removeAnimTransformer();
      textureRenderer.setOffset(0, this.eZ);
      float var2;
      int var3;
      int[] var4;
      int[] var5;
      int var6;
      switch (this.getScene2()) {
         case 4:
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            break;
         case 98:
            var2 = (float)((this.getWidth() / 960 * 720 - 640) / 2);
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.setImageAlpha(255);
            this.ap[0].a(this.aq[0], this.fQ[0]);
            this.ap[0].b().setScale(this.ap[0].c() * this.getWidth() / 960, (int)((float)this.ap[0].c() * ((float)this.getWidth() / 960.0F)));
            textureRenderer.setTextures(this.ap[0], 0, (int)(-var2));

            for(var3 = 0; var3 < 50; ++var3) {
               for(var6 = 0; var6 < 8; ++var6) {
                  this.ch[var3][0][var6] = (int)(((float)this.cg[var3][0][var6] + (float)this.ci[var3][2] * aMath.cos((float)(this.ci[var3][0] * this.ci[var3][3] % 360))) / 100.0F + 8.0F * aMath.cos((float)(var6 * 45)));
                  this.ch[var3][1][var6] = (int)((float)(this.cg[var3][1][var6] / 100) + 8.0F * aMath.sin((float)(var6 * 45)));
               }

               textureRenderer.setBlendMode(1);
               textureRenderer.setColor(255, 0, 0, 35);
               textureRenderer.drawVertices(this.ch[var3][0], this.ch[var3][1], 8);
               textureRenderer.setBlendMode(0);
            }

            textureRenderer.setColor(255, 255, 255);
            textureRenderer.setAlpha(255);
            textureRenderer.setColor(255, 255, 255);

            for(var3 = 0; var3 < 73; ++var3) {
               textureRenderer.drawScaledImage(this.ag[var3], this.getWidth() / 2, this.getHeight() + var3 * 40 - this.dy, 1);
            }

            var4 = this.dB;
            this.dB[1] = 0;
            var4[0] = 0;
            var5 = this.dB;
            var4 = this.dB;
            var3 = this.getWidth();
            var4[3] = var3;
            var5[2] = var3;
            var4 = this.dC;
            this.dC[3] = 100;
            var4[0] = 100;
            var4 = this.dC;
            this.dC[2] = 300;
            var4[1] = 300;
            var4 = this.dD;
            this.dD[3] = -16777216;
            var4[0] = -16777216;
            var4 = this.dD;
            this.dD[2] = 0;
            var4[1] = 0;
            textureRenderer.a(this.dB, this.dC, this.dD, 4);
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.setAlpha(255);
            textureRenderer.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.eZ + 100);
            if (this.dz == 0) {
               textureRenderer.setBlendMode(3);
               textureRenderer.setColor(this.dA * 255 / 100, this.dA * 255 / 100, this.dA * 255 / 100);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               textureRenderer.setBlendMode(0);
            }

            textureRenderer.drawScaledImageI(this.af[2], 788 - dv[this.fx[0]] / 2 + this.excessWidth, 564 - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 168, dv[this.fx[0]] + 72, 0);
            textureRenderer.drawScaledImageI(this.ae[2], 797 - dv[this.fx[0]] / 2 + this.excessWidth, 572 - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 150, dv[this.fx[0]] + 55, 10);
            if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) && this.dz <= 1 && !this.eb) {
               textureRenderer.drawScaledImageI(this.af[2], this.excessWidth + 788, this.eZ + 564, 168, 72, this.fQ[5] % 4 / 2 + 1);
            }

            if (this.dz == 2) {
               textureRenderer.setBlendMode(3);
               textureRenderer.setColor(255 - this.dA * 159 / 100, 255 - this.dA * 159 / 100, 255 - this.dA * 159 / 100);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               textureRenderer.setBlendMode(0);
            }

            this.a(textureRenderer, this.ed);
            break;
         case 99:
            textureRenderer.setColor(100, 100, 100);
            textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            var2 = (float)((this.getWidth() / 960 * 720 - 640) / 2);
            if (this.fQ[1] % 16 != 0 && this.fQ[1] % 16 != 1 && this.fQ[1] % 16 != 2 && this.fQ[1] % 16 != 3) {
               if (this.fQ[1] % 16 != 4 && this.fQ[1] % 16 != 5 && this.fQ[1] % 16 != 6 && this.fQ[1] % 16 != 7) {
                  if (this.fQ[1] % 16 != 8 && this.fQ[1] % 16 != 9 && this.fQ[1] % 16 != 10 && this.fQ[1] % 16 != 11) {
                     textureRenderer.drawScaledImageI(this.ae[3], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
                     textureRenderer.setImageAlpha(127);
                     textureRenderer.drawScaledImageI(this.ae[0], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
                     textureRenderer.setImageAlpha(255);
                  } else {
                     textureRenderer.drawScaledImageI(this.ae[3], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
                  }
               } else {
                  textureRenderer.drawScaledImageI(this.ae[0], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
                  textureRenderer.setImageAlpha(127);
                  textureRenderer.drawScaledImageI(this.ae[3], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
                  textureRenderer.setImageAlpha(255);
               }
            } else {
               textureRenderer.drawScaledImageI(this.ae[0], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
            }

            for(var3 = 0; var3 < 50; ++var3) {
               for(var6 = 0; var6 < 8; ++var6) {
                  this.ch[var3][0][var6] = (int)(((float)this.cg[var3][0][var6] + (float)this.ci[var3][2] * aMath.cos((float)(this.ci[var3][0] * this.ci[var3][3] % 360))) / 100.0F + 8.0F * aMath.cos((float)(var6 * 45)));
                  this.ch[var3][1][var6] = (int)((float)(this.cg[var3][1][var6] / 100) + 8.0F * aMath.sin((float)(var6 * 45)));
               }

               textureRenderer.setBlendMode(1);
               textureRenderer.setColor(255, 0, 0, 35);
               textureRenderer.drawVertices(this.ch[var3][0], this.ch[var3][1], 8);
               textureRenderer.setBlendMode(0);
            }

            textureRenderer.setImageOrientation(1);
            textureRenderer.setImageColor(100, 100, 100);
            textureRenderer.drawScaledImageI(this.ae[1], -58, this.eZ + 379, 355, 355, 0);
            textureRenderer.setImageColor(255, 255, 255);
            textureRenderer.setImageOrientation(0);
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.setAlpha(255 - this.fQ[3]);
            textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            if (this.dE >= 1) {
               textureRenderer.setColor(255, 255, 255);

               for(var3 = 0; var3 < this.getLength(this.cK); ++var3) {
                  if (aString.equals(this.cK[var3], "＠")) {
                     textureRenderer.drawScaledImageI(this.ae[3], this.excessWidth / 2 + 0, this.getHeight() + var3 * 40 - this.dG, 1);
                  } else {
                     textureRenderer.drawScaledImage(this.ag[var3], this.getWidth() / 2, this.getHeight() + var3 * 40 - this.dG, 1);
                  }
               }
            }

            if (this.bj >= 1 || this.eg == 2) {
               textureRenderer.drawScaledImageI(this.af[2], 788 - dv[this.fx[0]] / 2 + this.excessWidth, 564 - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 168, dv[this.fx[0]] + 72, 0);
               textureRenderer.drawScaledImageI(this.ae[2], 797 - dv[this.fx[0]] / 2 + this.excessWidth, 572 - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 150, dv[this.fx[0]] + 55, 10);
               if (this.dE <= 1 && !this.eE[0] && this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) && !this.eb) {
                  textureRenderer.drawScaledImageI(this.af[2], this.excessWidth + 788, this.eZ + 564, 168, 72, this.fQ[5] % 4 / 2 + 1);
               }
            }

            if ((this.dE == 1 || this.dE == 2) && this.eE[0]) {
               textureRenderer.setColor(0, 0, 0);
               textureRenderer.setAlpha(this.fQ[0]);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            }

            if (this.dE == 3) {
               textureRenderer.setColor(0, 0, 0);
               textureRenderer.setAlpha(this.dF);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            }

            if (this.dE >= 4) {
               textureRenderer.setColor(0, 0, 0);
               textureRenderer.setAlpha(255);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            }

            this.a(textureRenderer, this.ed);
            break;
         case 100:
            textureRenderer.setColor(255, 255, 255);
            textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            if (this.screen == 0) {
               this.o(textureRenderer);
            }

            if (this.screen == 5) {
               this.j(textureRenderer);
            }

            if (this.screen == 9) {
               this.k(textureRenderer);
            }

            if (this.screen == 7) {
               this.m(textureRenderer);
            }

            if (this.screen == 3) {
               this.r(textureRenderer);
            }

            if (this.screen == 6) {
               this.p(textureRenderer);
            }

            if (this.screen == 8) {
               this.f(textureRenderer);
            }

            if (this.screen == 4) {
               this.s(textureRenderer);
            }

            if (this.screen == 999) {
               this.i(textureRenderer);
            }

            if (this.screen == 9999) {
               this.n(textureRenderer);
            }

            if (this.screen == 99999) {
               this.g(textureRenderer);
            }

            this.a(textureRenderer, this.ed);
            break;
         case 300:
            if (this.hl == 0) {
               for(var3 = 0; var3 < 3; ++var3) {
                  if (this.hc[var3 + 7] == 32) {
                     textureRenderer.setOffset(0, this.eZ - 40);
                  } else if (this.hc[var3 + 7] == 34) {
                     textureRenderer.setOffset(0, this.eZ + 20);
                  } else if (this.hc[var3 + 7] == 36) {
                     textureRenderer.setOffset(0, this.eZ - 15);
                  } else if (this.hc[var3 + 7] == 38) {
                     textureRenderer.setOffset(0, this.eZ + 10);
                  } else if (this.hc[var3 + 7] == 40) {
                     textureRenderer.setOffset(0, this.eZ - 10);
                  } else if (this.hc[var3 + 7] == 42) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 44) {
                     textureRenderer.setOffset(0, this.eZ - 10);
                  } else if (this.hc[var3 + 7] == 46) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 48) {
                     textureRenderer.setOffset(0, this.eZ - 4);
                  } else if (this.hc[var3 + 7] == 49) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 50) {
                     textureRenderer.setOffset(0, this.eZ - 6);
                  } else if (this.hc[var3 + 7] == 51) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 52) {
                     textureRenderer.setOffset(0, this.eZ - 4);
                  } else if (this.hc[var3 + 7] == 53) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 54) {
                     textureRenderer.setOffset(0, this.eZ - 2);
                  } else if (this.hc[var3 + 7] == 55) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  } else if (this.hc[var3 + 7] == 56) {
                     textureRenderer.setOffset(0, this.eZ - 1);
                  } else if (this.hc[var3 + 7] >= 57) {
                     textureRenderer.setOffset(0, this.eZ + 0);
                  }
               }
            } else {
               textureRenderer.setOffset(0, this.eZ + 0);
            }

            textureRenderer.setAnimTransformer(this.A);
            this.A.b((float)(this.excessWidth / 2 + 0), 520.0F);
            this.B.a((float)(this.z / 100), (float)(this.z / 100));
            this.A.a(this.B);
            this.B.b((float)(-(this.excessWidth / 2 + 0)), -520.0F);
            this.A.a(this.B);
            textureRenderer.setColor(0, 0, 0);
            textureRenderer.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
            textureRenderer.removeAnimTransformer();
            if (this.bV[4] == 0) {
               textureRenderer.setColor(136, 218, 254);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), 520);
            } else if (this.bV[4] == 1) {
               textureRenderer.setColor(255, 149, 92);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), 520);
            } else if (this.bV[4] == 2) {
               textureRenderer.setColor(31, 41, 153);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), 520);
            } else if (this.bV[4] == 3) {
               textureRenderer.setColor(98, 207, 255);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), 520);
            } else {
               textureRenderer.drawScaledImageI(this.ae[0], 0, -this.eZ, this.getWidth(), 520, 1);
            }

            if (this.bV[4] == 0) {
               textureRenderer.setColor(135, 98, 59);
               textureRenderer.drawRectangle(0, 520, this.getWidth(), this.eZ + 200 + 40);
            } else if (this.bV[4] == 1) {
               textureRenderer.setColor(137, 73, 6);
               textureRenderer.drawRectangle(0, 520, this.getWidth(), this.eZ + 200 + 40);
            } else if (this.bV[4] == 2) {
               textureRenderer.setColor(93, 77, 60);
               textureRenderer.drawRectangle(0, 520, this.getWidth(), this.eZ + 200 + 40);
            } else if (this.bV[4] == 3) {
               textureRenderer.setColor(135, 98, 59);
               textureRenderer.drawRectangle(0, 520, this.getWidth(), this.eZ + 200 + 40);
            } else {
               textureRenderer.drawScaledImageI(this.ae[0], 0, 520, this.getWidth(), this.eZ + 200, 2);
            }

            var4 = this.gh;
            this.gh[1] = 0;
            var4[0] = 0;
            var5 = this.gh;
            var4 = this.gh;
            var3 = this.getWidth();
            var4[3] = var3;
            var5[2] = var3;
            var4 = this.gi;
            var5 = this.gi;
            var3 = -this.eZ - 40;
            var5[3] = var3;
            var4[0] = var3;
            var4 = this.gi;
            var5 = this.gi;
            var3 = (520 - this.eZ) * (100 - this.z / 100) / 100;
            var5[2] = var3;
            var4[1] = var3;
            if (this.bV[4] == 0) {
               var4 = this.gj;
               this.gj[3] = -13818464;
               var4[0] = -13818464;
               var4 = this.gj;
               this.gj[2] = 8968958;
               var4[1] = 8968958;
            } else if (this.bV[4] == 1) {
               var4 = this.gj;
               this.gj[3] = -45055;
               var4[0] = -45055;
               var4 = this.gj;
               this.gj[2] = 16749916;
               var4[1] = 16749916;
            } else if (this.bV[4] == 2) {
               var4 = this.gj;
               this.gj[3] = -16182973;
               var4[0] = -16182973;
               var4 = this.gj;
               this.gj[2] = 2042265;
               var4[1] = 2042265;
            } else if (this.bV[4] == 3) {
               var4 = this.gj;
               this.gj[3] = -984065;
               var4[0] = -984065;
               var4 = this.gj;
               this.gj[2] = 6475775;
               var4[1] = 6475775;
            }

            textureRenderer.a(this.gh, this.gi, this.gj, 4);
            var4 = this.gh;
            this.gh[1] = 0;
            var4[0] = 0;
            var5 = this.gh;
            var4 = this.gh;
            var3 = this.getWidth();
            var4[3] = var3;
            var5[2] = var3;
            var5 = this.gi;
            var4 = this.gi;
            var3 = 640 - (100 - this.z / 100) * 120 / 100;
            var4[3] = var3;
            var5[0] = var3;
            var5 = this.gi;
            var4 = this.gi;
            var3 = this.eZ + 640 + 40;
            var4[2] = var3;
            var5[1] = var3;
            if (this.bV[4] == 0) {
               var4 = this.gj;
               this.gj[3] = 8872454;
               var4[0] = 8872454;
               var4 = this.gj;
               this.gj[2] = -12508154;
               var4[1] = -12508154;
            } else if (this.bV[4] == 1) {
               var4 = this.gj;
               this.gj[3] = 8997126;
               var4[0] = 8997126;
               var4 = this.gj;
               this.gj[2] = -14478590;
               var4[1] = -14478590;
            } else if (this.bV[4] == 2) {
               var4 = this.gj;
               this.gj[3] = 6114620;
               var4[0] = 6114620;
               var4 = this.gj;
               this.gj[2] = -15199216;
               var4[1] = -15199216;
            } else if (this.bV[4] == 3) {
               var4 = this.gj;
               this.gj[3] = 8872507;
               var4[0] = 8872507;
               var4 = this.gj;
               this.gj[2] = -12508154;
               var4[1] = -12508154;
            }

            textureRenderer.a(this.gh, this.gi, this.gj, 4);
            textureRenderer.setAnimTransformer(this.A);
            var3 = 1920 - this.bM[5] / 10 % 960 - (this.excessWidth / 2 + 1920);
            textureRenderer.drawScaledImageI(this.ae[0], var3 - 1920, 0, 960, 640, 0);
            textureRenderer.drawScaledImageI(this.ae[0], var3 - 960, 0, 960, 640, 0);
            textureRenderer.drawScaledImageI(this.ae[0], var3, 0, 960, 640, 0);
            textureRenderer.drawScaledImageI(this.ae[0], var3 + 960, 0, 960, 640, 0);
            textureRenderer.drawScaledImageI(this.ae[0], var3 + 1920, 0, 960, 640, 0);
            textureRenderer.setColor(255, 255, 255);
            if (this.bV[4] == 2) {
               for(var3 = 0; var3 < this.getLength(this.cc); ++var3) {
                  var6 = this.cc[var3][2];
                  if (var6 <= 400) {
                     if (this.cc[var3][4] == 0) {
                        this.eH[0] = 255;
                        this.eH[1] = 255;
                        this.eH[2] = 255;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 1) {
                        this.eH[0] = 255;
                        this.eH[1] = 180;
                        this.eH[2] = 180;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 2) {
                        this.eH[0] = 180;
                        this.eH[1] = 255;
                        this.eH[2] = 180;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 3) {
                        this.eH[0] = 180;
                        this.eH[1] = 180;
                        this.eH[2] = 255;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 4) {
                        this.eH[0] = 255;
                        this.eH[1] = 255;
                        this.eH[2] = 180;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 5) {
                        this.eH[0] = 255;
                        this.eH[1] = 180;
                        this.eH[2] = 255;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     } else if (this.cc[var3][4] == 6) {
                        this.eH[0] = 180;
                        this.eH[1] = 255;
                        this.eH[2] = 255;
                        this.eH[3] = (int)(aMath.sin((float)var6 * 0.45F) * 255.0F);
                     }

                     textureRenderer.setColor(this.eH[0], this.eH[1], this.eH[2]);
                     textureRenderer.setAlpha(this.eH[3]);
                     textureRenderer.drawRectangle(this.cc[var3][0] - this.bM[5] / 10 - this.excessWidth, this.cc[var3][1], 4, 4);
                     textureRenderer.setAlpha(255);
                  }
               }
            }

            this.eH[0] = 0;
            this.bH[this.eH[0]][0] = 0;
            this.bH[this.eH[0]][1] = 0;
            this.bH[this.eH[0]][2] = 0;
            var4 = this.eH;
            int var10002 = var4[0]++;
            this.bH[this.eH[0]][0] = 0;
            this.bH[this.eH[0]][1] = 1;
            this.bH[this.eH[0]][2] = 0;
            var4 = this.eH;
            var10002 = var4[0]++;

            int var7;
            for(var6 = 1; var6 < this.getLength(this.bR[1]); ++var6) {
               if (this.bR[1][var6][0] > 0) {
                  this.bH[this.eH[0]][0] = this.bR[1][var6][5] + 1;
                  var3 = 0;

                  while(true) {
                     if (var3 >= 10) {
                        var7 = 0;
                        break;
                     }

                     var7 = var3;
                     if (this.eU[var3] == this.bR[1][var6][0]) {
                        break;
                     }

                     ++var3;
                  }

                  this.bH[this.eH[0]][1] = var7 + 10;
                  if (this.bR[1][var6][1] == 4) {
                     this.bH[this.eH[0]][1] = 2;
                  }

                  this.bH[this.eH[0]][2] = var6;
                  var4 = this.eH;
                  var10002 = var4[0]++;
               }
            }

            for(var6 = 1; var6 < this.getLength(this.bR[0]); ++var6) {
               if (this.bR[0][var6][0] > 0) {
                  this.bH[this.eH[0]][0] = this.bR[0][var6][5] + 1;
                  var3 = 0;

                  while(true) {
                     if (var3 >= 10) {
                        var7 = 0;
                        break;
                     }

                     var7 = var3;
                     if (this.bk[var3] == this.bR[0][var6][0]) {
                        break;
                     }

                     ++var3;
                  }

                  this.bH[this.eH[0]][1] = var7 + 100;
                  if (this.bR[0][var6][1] == 4) {
                     if (this.bR[0][var6][0] - 2 == 16) {
                        this.bH[this.eH[0]][1] = 4;
                     } else {
                        this.bH[this.eH[0]][1] = 3;
                     }
                  }

                  this.bH[this.eH[0]][2] = var6;
                  var4 = this.eH;
                  var10002 = var4[0]++;
               }
            }

            for(var3 = 0; var3 < this.eH[0] - 1; ++var3) {
               this.eH[1] = this.bH[var3][0];
               this.eH[2] = var3;

               for(var6 = var3 + 1; var6 < this.eH[0]; ++var6) {
                  if (this.bH[var6][0] < this.eH[1]) {
                     this.eH[1] = this.bH[var6][0];
                     this.eH[2] = var6;
                  }
               }

               for(var6 = 0; var6 < this.getLength(this.bH[var3]); ++var6) {
                  this.bH[200][var6] = this.bH[var3][var6];
                  this.bH[var3][var6] = this.bH[this.eH[2]][var6];
                  this.bH[this.eH[2]][var6] = this.bH[200][var6];
               }
            }

            for(var3 = 0; var3 < this.eH[0] - 1; ++var3) {
               this.eH[1] = this.bH[var3][0];
               this.eH[2] = var3;
               this.eH[3] = this.bH[var3][2];

               for(var6 = var3 + 1; var6 < this.eH[0] && this.eH[1] == this.bH[var6][0]; ++var6) {
                  if (this.bH[var6][2] < this.eH[3]) {
                     this.eH[3] = this.bH[var6][2];
                     this.eH[2] = var6;
                  }
               }

               for(var6 = 0; var6 < this.getLength(this.bH[var3]); ++var6) {
                  this.bH[200][var6] = this.bH[var3][var6];
                  this.bH[var3][var6] = this.bH[this.eH[2]][var6];
                  this.bH[this.eH[2]][var6] = this.bH[200][var6];
               }
            }

            for(var6 = 0; var6 < this.eH[0]; ++var6) {
               var3 = this.bH[var6][2];
               switch (this.bH[var6][1]) {
                  case 0:
                     this.eH[1] = (this.bR[1][0][3] - fe[this.bM[20]][2] * 1180 / 100 - this.bM[5]) / 10 + fe[this.bM[20]][0] * fe[this.bM[20]][2] / 100;
                     this.eH[2] = this.bR[1][0][4] / 10 - fe[this.bM[20]][2] * 255 / 100 + fe[this.bM[20]][1] * fe[this.bM[20]][2] / 100;
                     this.eH[3] = 0;
                     if (this.bR[1][0][1] != 0 && this.bM[1] % (this.eG + 1) == 1) {
                        this.eH[3] = this.bM[1] % (this.eG + 1) * 4;
                     }

                     textureRenderer.drawScaledImageI(this.ae[2], this.eH[1] - this.eH[3] + this.excessWidth / 2, this.eH[2], fe[this.bM[20]][2] * 127 / 100, fe[this.bM[20]][2] * 255 / 100);
                     textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 150 + fe[this.bM[20]][2] * 127 / 100 / 2 - 9 - 25 - 30 + this.excessWidth / 2, 137, 18, 18, 67);
                     this.eH[2] = this.bR[1][0][7];
                     if (this.eH[2] > 99999999) {
                        this.eH[2] = 99999999;
                     }

                     for(var3 = 10; var3 <= this.eH[2]; var3 *= 10) {
                     }

                     var7 = var3 / 10;

                     for(var3 = 0; var7 >= 1; ++var3) {
                        textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 150 + fe[this.bM[20]][2] * 127 / 100 / 2 + 9 + var3 * 14 - 25 - 30 + this.excessWidth / 2, 137, 14, 18, this.eH[2] / var7 % 10 + 57);
                        var7 /= 10;
                     }

                     var7 = 10;
                     var3 = 0;

                     for(this.eH[2] = this.bR[1][0][8]; var7 <= this.eH[2]; --var3) {
                        var7 *= 10;
                     }

                     for(var7 /= 10; var7 >= 1; ++var3) {
                        textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 150 + fe[this.bM[20]][2] * 127 / 100 / 2 - 18 - 5 + var3 * 14 - 25 - 30 + this.excessWidth / 2, 137, 14, 18, this.eH[2] / var7 % 10 + 57);
                        var7 /= 10;
                     }
                     break;
                  case 1:
                     this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10;
                     this.eH[2] = this.bR[0][0][4] / 10 - 323;
                     this.eH[3] = 0;
                     if (this.bR[0][0][1] != 0 && this.bM[1] % (this.eG + 1) == 1) {
                        this.eH[3] = this.bM[1] % (this.eG + 1) * 4;
                     }

                     textureRenderer.drawScaledImageI(this.ae[1], this.eH[1] + this.eH[3] + this.excessWidth / 2, this.eH[2], 161, 323, 0);
                     if (this.bR[0][0][9] == 1) {
                        textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.eH[3] + this.excessWidth / 2, this.eH[2] + 82 - 2, 161, 162, 7);
                     }

                     textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 80 - 9 - 150 + 25 + 30 + this.excessWidth / 2, 137, 18, 18, 67);
                     this.eH[2] = this.bR[0][0][7];
                     if (this.eH[2] > 99999999) {
                        this.eH[2] = 99999999;
                     }

                     for(var3 = 10; var3 <= this.eH[2]; var3 *= 10) {
                     }

                     var7 = var3 / 10;

                     for(var3 = 0; var7 >= 1; ++var3) {
                        textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 80 + 9 + var3 * 14 - 150 + 25 + 30 + this.excessWidth / 2, 137, 14, 18, this.eH[2] / var7 % 10 + 57);
                        var7 /= 10;
                     }

                     var7 = 10;
                     var3 = 0;

                     for(this.eH[2] = this.bR[0][0][8]; var7 <= this.eH[2]; --var3) {
                        var7 *= 10;
                     }

                     for(var7 /= 10; var7 >= 1; ++var3) {
                        textureRenderer.drawScaledImageI(this.ae[4], this.eH[1] + 80 - 18 - 5 + var3 * 14 - 150 + 25 + 30 + this.excessWidth / 2, 137, 14, 18, this.eH[2] / var7 % 10 + 57);
                        var7 /= 10;
                     }

                     if (this.bM[14] == 0 && this.bR[0][0][12] == 0) {
                        this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 27;
                        if (this.eH[1] - (this.bR[0][0][6] * cw - 92) - 4 + this.excessWidth / 2 < (300 - this.bM[5]) / 10 - 4 + 100 + this.excessWidth / 2) {
                           textureRenderer.drawScaledImageI(this.ae[15], (300 - this.bM[5]) / 10 - 4 + 100 + this.excessWidth / 2, 410, 0);
                           textureRenderer.setImageAlpha(216);
                           textureRenderer.drawScaledImageI(this.ae[15], (300 - this.bM[5]) / 10 - 30 - 4 + 100 + this.excessWidth / 2, (int)(314.0F + 11.0F * aMath.sin((float)(this.fd[0] * 60))), 1);
                           textureRenderer.setImageAlpha(255);
                        } else {
                           textureRenderer.drawScaledImageI(this.ae[15], this.eH[1] - (this.bR[0][0][6] * cw - 92) - 4 + this.excessWidth / 2, 410, 0);
                           textureRenderer.setImageAlpha(216);
                           textureRenderer.drawScaledImageI(this.ae[15], this.eH[1] - (this.bR[0][0][6] * cw - 92) - 30 - 4 + this.excessWidth / 2, (int)(314.0F + 11.0F * aMath.sin((float)(this.fd[0] * 60))), 1);
                           textureRenderer.setImageAlpha(255);
                        }
                     }
                     break;
                  case 2:
                     this.eH[1] = (this.bR[1][var3][3] - 850 - this.bM[5]) / 10;
                     this.eH[2] = this.bR[1][var3][4] / 10 + this.bR[1][var3][5] * 4 - 97;
                     this.aD[1].a(this.aE[1][0], this.bR[1][var3][2]);
                     textureRenderer.setTextures(this.aD[1], this.eH[1] + this.excessWidth / 2, this.eH[2]);
                     textureRenderer.setImageAlpha(255);
                     break;
                  case 3:
                     this.eH[1] = (this.bR[0][var3][3] - this.bM[5]) / 10;
                     this.eH[2] = this.bR[0][var3][4] / 10 + this.bR[0][var3][5] * 4 - 97;
                     this.eH[3] = eT[this.bR[0][var3][2] % 8];
                     textureRenderer.setImageAlpha(this.bR[0][var3][25]);
                     var4 = this.eH;
                     var4[1] = (int)((float)var4[1] + (float)this.bR[0][var3][27] * aMath.sin((float)this.bR[0][var3][29]));
                     this.aD[1].a(this.aE[1][0], this.bR[0][var3][2]);
                     textureRenderer.setTextures(this.aD[1], this.eH[1] + this.excessWidth / 2, this.eH[2]);
                     textureRenderer.setImageAlpha(255);
                     break;
                  case 4:
                     this.eH[1] = (this.bR[0][var3][3] - this.bM[5]) / 10;
                     this.eH[2] = this.bR[0][var3][4] / 10 + this.bR[0][var3][5] * 4 - 97;
                     this.aD[1].a(this.aE[1][1], this.bR[0][var3][2]);
                     textureRenderer.setTextures(this.aD[1], this.eH[1] + this.excessWidth / 2, this.eH[2]);
                     textureRenderer.setImageAlpha(255);
                     break;
                  case 10:
                  case 11:
                  case 12:
                  case 13:
                  case 14:
                  case 15:
                  case 16:
                  case 17:
                  case 18:
                  case 19:
                     this.eH[1] = (this.bR[1][var3][3] - this.bM[5]) / 10;
                     this.eH[2] = this.bR[1][var3][4] / 10 + this.bR[1][var3][5] * 4;
                     if (this.bR[1][var3][1] == 0) {
                        this.aw[this.bH[var6][1] - 10].a(this.ax[this.bH[var6][1] - 10][0], this.bR[1][var3][2]);
                     } else if (this.bR[1][var3][1] == 1) {
                        this.aw[this.bH[var6][1] - 10].a(this.ax[this.bH[var6][1] - 10][1], this.bR[1][var3][2]);
                     } else if (this.bR[1][var3][1] == 2) {
                        this.aw[this.bH[var6][1] - 10].a(this.ax[this.bH[var6][1] - 10][2], this.bR[1][var3][2]);
                     } else if (this.bR[1][var3][1] == 3) {
                        this.aw[this.bH[var6][1] - 10].a(this.ax[this.bH[var6][1] - 10][3], this.bR[1][var3][2]);
                     } else if (this.bR[1][var3][1] == 5) {
                        this.aw[this.bH[var6][1] - 10].a(this.ax[this.bH[var6][1] - 10][3], this.bR[1][var3][2]);
                     }

                     this.aw[this.bH[var6][1] - 10].a(0).a().a(this.aw[this.bH[var6][1] - 10], this.aw[this.bH[var6][1] - 10].a(0).b(), this.aw[this.bH[var6][1] - 10].a(0).c(), this.x);
                     textureRenderer.setTextures(this.aw[this.bH[var6][1] - 10], this.eH[1] - this.x.x + this.excessWidth / 2, this.eH[2] - this.x.y);
                     break;
                  case 100:
                  case 101:
                  case 102:
                  case 103:
                  case 104:
                  case 105:
                  case 106:
                  case 107:
                  case 108:
                  case 109:
                     this.eH[1] = (this.bR[0][var3][3] - this.bM[5]) / 10;
                     this.eH[2] = this.bR[0][var3][4] / 10 + this.bR[0][var3][5] * 4;
                     if (this.bR[0][var3][1] == 0) {
                        this.at[this.bH[var6][1] - 100].a(this.au[this.bH[var6][1] - 100][0], this.bR[0][var3][2]);
                     } else if (this.bR[0][var3][1] == 1) {
                        this.at[this.bH[var6][1] - 100].a(this.au[this.bH[var6][1] - 100][1], this.bR[0][var3][2]);
                     } else if (this.bR[0][var3][1] == 2) {
                        this.at[this.bH[var6][1] - 100].a(this.au[this.bH[var6][1] - 100][2], this.bR[0][var3][2]);
                     } else if (this.bR[0][var3][1] == 3) {
                        this.at[this.bH[var6][1] - 100].a(this.au[this.bH[var6][1] - 100][3], this.bR[0][var3][2]);
                     }

                     this.at[this.bH[var6][1] - 100].a(0).a().a(this.at[this.bH[var6][1] - 100], this.at[this.bH[var6][1] - 100].a(0).b(), this.at[this.bH[var6][1] - 100].a(0).c(), this.x);
                     textureRenderer.setTextures(this.at[this.bH[var6][1] - 100], this.eH[1] - this.x.x + this.excessWidth / 2, this.eH[2] - this.x.y);
               }
            }

            if (this.eL[5] >= 1) {
               this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 100;
               this.eH[2] = (int)((float)(this.bR[0][0][4] / 10 - 323 - 360) + 10.0F * aMath.sin(this.ep[0]));
               textureRenderer.drawScaledImage(this.ae[20], (float)(this.eH[1] + this.em[0] + this.excessWidth / 2), (float)this.eH[2] + 114.56F, 53.7F, 161.1F, 6);
               textureRenderer.setImageOrientation(1);
               textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 132.46F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 114.56F, 53.7F, 161.1F, 6);
               textureRenderer.setImageOrientation(0);
               if (this.ex) {
                  textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 53.7F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 202.27F + (float)this.ez, 82.34F, 91.29F, 5);
               } else {
                  textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 51.91F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 202.27F, 82.34F, 91.29F, 4);
               }

               textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 42.96F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 286.4F, 91.29F, 42.96F, 3);
               textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 34.01F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 288.19F, 93.08F, 57.28F, 0, 68, 26, 0, this.ep[1], 2);
               textureRenderer.setColor(0, 0, 0);
               textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 34.01F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 268.5F, 118.14F, 59.07F, 1);
               textureRenderer.drawScaledImage(this.ae[20], (float)(this.eH[1] + this.em[0] + this.excessWidth / 2), (float)this.eH[2], 93.08F, 187.95F, 0);
               textureRenderer.setImageOrientation(1);
               textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 93.08F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2], 93.08F, 187.95F, 0);
               textureRenderer.setImageOrientation(0);
               if (this.ex) {
                  textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 51.91F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 186.16F + (float)this.ez, 89.5F, 69.81F, 9);
               } else {
                  textureRenderer.drawScaledImage(this.ae[20], (float)this.eH[1] + 50.12F + (float)this.em[0] + (float)(this.excessWidth / 2), (float)this.eH[2] + 193.32F, 89.5F, 69.81F, 9);
               }

               this.eH[3] = (int)(47.0F * aMath.cos(this.ep[1]));
               this.eH[4] = (int)(28.0F * aMath.sin(this.ep[1]));
               if (this.eC) {
                  for(var3 = 0; var3 < 4; ++var3) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + 35 + this.em[0] - 68 + 68 - this.eH[3] + this.eA[var3][0] + this.excessWidth / 2, this.eH[2] + 288 - 58 + 26 - this.eH[4] + this.eA[var3][1], 137, 117, this.eA[var3][2] / 2 + 8);
                  }
               }

               this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 100 + 93 - 40;
               this.eH[2] = this.bR[0][0][4] / 10 - 323 + 370;
               textureRenderer.drawScaledImage(this.ae[20], (float)(this.eH[1] + this.em[0] + this.excessWidth / 2), (float)this.eH[2], 80.55F, 7.16F, 7);

               for(var3 = 0; var3 < 50; ++var3) {
                  if (this.et[var3]) {
                     this.eH[1] = (this.eq[var3] - this.bM[5]) / 10;
                     textureRenderer.drawScaledImageI(this.ae[20], this.eH[1] + this.excessWidth / 2, this.er[var3] / 10, 53, 53, 0, 0, 0, 5, 0.0F, 8);
                  }
               }

               for(var3 = 0; var3 < this.getLength(this.eB); ++var3) {
                  for(var6 = 0; var6 < this.getLength(this.eB[var3]); ++var6) {
                     if (this.eB[var3][var6][0] > 0) {
                        this.eH[1] = (this.eB[var3][var6][1] - this.bM[5]) / 10;
                        if (6 - this.eB[var3][var6][0] / 2 - 1 <= 4) {
                           textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, this.eB[var3][var6][2] / 10, 137, 117, 6 - this.eB[var3][var6][0] / 2 - 1 + 8);
                        }
                     }
                  }
               }
            }

            for(var3 = 0; var3 < this.getLength(this.bS); ++var3) {
               for(var6 = 0; var6 < this.getLength(this.bS[var3]); ++var6) {
                  if (this.bS[var3][var6][0] > 0) {
                     this.eH[1] = (this.bS[var3][var6][1] - this.bM[5]) / 10;
                     if (6 - this.bS[var3][var6][0] / 2 - 1 <= 4) {
                        textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, this.bS[var3][var6][2] / 10, 137, 117, 6 - this.bS[var3][var6][0] / 2 - 1 + 8);
                     }
                  }
               }
            }

            if (this.bR[0][0][9] == 1) {
               this.eH[1] = (this.bR[0][0][3] - this.bM[5]) / 10 + 27;
               this.eH[2] = this.eH[1] - (this.bR[0][0][6] * cw - 92) * this.bR[0][0][10] / 16;
               this.eH[3] = this.bR[0][0][4] / 10 - 160;
               textureRenderer.setColor(255, 0, 255);
               textureRenderer.drawLine(this.eH[1] + this.excessWidth / 2, this.eH[3], this.eH[2] + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] - 5 + this.excessWidth / 2, this.eH[3], this.eH[2] - 5 + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] + 1 + this.excessWidth / 2, this.eH[3], this.eH[2] + 1 + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] - 6 + this.excessWidth / 2, this.eH[3], this.eH[2] - 6 + this.excessWidth / 2, 500);
               textureRenderer.setColor(255, 255, 255);
               textureRenderer.drawLine(this.eH[1] - 1 + this.excessWidth / 2, this.eH[3], this.eH[2] - 1 + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] - 2 + this.excessWidth / 2, this.eH[3], this.eH[2] - 2 + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] - 3 + this.excessWidth / 2, this.eH[3], this.eH[2] - 3 + this.excessWidth / 2, 500);
               textureRenderer.drawLine(this.eH[1] - 4 + this.excessWidth / 2, this.eH[3], this.eH[2] - 4 + this.excessWidth / 2, 500);
               textureRenderer.drawScaledImageI(this.aC[0], this.eH[2] - 30 + this.excessWidth / 2, 450, 132, 50, this.bR[0][0][10] % 4 / 2 + 5);
            }

            for(var3 = 0; var3 < this.getLength(this.bT); ++var3) {
               if (this.bT[var3][0] != 0) {
                  this.eH[1] = (this.bT[var3][1] - this.bM[5]) / 10;
                  this.eH[2] = cx[this.bT[var3][0]];
                  if (this.eH[2] == 0) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, 418, 185, 102, this.eH[2]);
                  } else if (this.eH[2] == 1) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, 243, 185, 277, this.eH[2]);
                  } else if (this.eH[2] == 2) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, 193, 185, 327, this.eH[2]);
                  } else if (this.eH[2] == 3) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, 193, 185, 327, this.eH[2]);
                  } else if (this.eH[2] == 4) {
                     textureRenderer.drawScaledImageI(this.aC[0], this.eH[1] + this.excessWidth / 2, 193, 185, 327, this.eH[2]);
                  }
               }
            }

            if (this.bV[4] == 3) {
               var7 = this.bM[5] / 10;

               for(var3 = 0; var3 < this.getLength(this.ce); ++var3) {
                  for(var6 = 0; var6 < 8; ++var6) {
                     this.cf[var3][0][var6] = (int)((float)(this.ce[var3][0] / 100 - var7 - this.excessWidth) + 12.0F * aMath.cos((float)(var6 * 45)));
                     this.cf[var3][1][var6] = (int)((float)(this.ce[var3][1] / 100) + 12.0F * aMath.sin((float)(var6 * 45)));
                  }

                  textureRenderer.setColor(255, 255, 255, 127);
                  textureRenderer.drawVertices(this.cf[var3][0], this.cf[var3][1], 8);
               }
            }

            if (this.dH <= 47 && this.bd >= 1) {
               textureRenderer.drawScaledImageI(this.ae[15], (this.bV[0] / 2 - this.bM[5]) / 10 - 65 - dv[this.hk[0]] / 2 + this.excessWidth / 2, -24 - this.eZ - this.he[0] - dv[this.hk[0]] / 2 - this.eI[0], dv[this.hk[0]] + 131, dv[this.hk[0]] + 131, 0, 0, 0, 5, this.hb[0], 40);
               textureRenderer.drawScaledImageI(this.ae[15], (this.bV[0] / 2 - this.bM[5]) / 10 + 27 - 65 - dv[this.hk[0]] / 2 + this.excessWidth / 2, 1 - this.he[0] - this.eZ - dv[this.hk[0]] / 2 - this.eI[0], dv[this.hk[0]] + 76, dv[this.hk[0]] + 76, 41);
            }

            textureRenderer.removeAnimTransformer();
            textureRenderer.setAlpha(255);
            if (this.bR[0][0][9] == 2 && (this.bR[0][0][10] == 1 || this.bR[0][0][10] == 2)) {
               textureRenderer.setColor(255, 255, 255);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            }

            textureRenderer.setImageAlpha(255);
            textureRenderer.drawScaledImageI(this.ae[17], 62, 10 - this.eZ, 0);
            this.eH[3] = 0;
            if (this.bM[25] % 4 == 1 || this.bM[25] % 4 == 2) {
               this.eH[3] = 68;
            }

            this.eH[1] = this.getWidth() - 4;
            var4 = this.eH;
            var4[1] -= 30;
            textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + 11);
            var4 = this.eH;
            var4[1] -= 29;
            var3 = this.bM[9] / 100;

            do {
               textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, var3 % 10 + this.eH[3]);
               var3 /= 10;
               var4 = this.eH;
               var4[1] -= 29;
            } while(var3 > 0);

            textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 29, 42, this.eH[3] + 10);
            var4 = this.eH;
            var4[1] -= 28;
            var3 = this.bM[10] / 100;

            do {
               textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, var3 % 10 + this.eH[3]);
               var3 /= 10;
               var4 = this.eH;
               var4[1] -= 29;
            } while(var3 > 0);

            this.a(textureRenderer);
            this.eH[1] = 8;
            this.eH[2] = 64;
            this.eH[3] = 6000 - this.eN * 100 / 30;
            if (this.hm[3] == 1) {
               if (this.eH[3] < 1000) {
                  textureRenderer.setImageColor(255, 0, 0);
               } else {
                  textureRenderer.setImageColor(255, 255, 255);
               }

               if (this.hl == 3) {
                  textureRenderer.setImageAlpha(255 - this.hc[7]);
               } else {
                  textureRenderer.setImageAlpha(255);
               }

               var3 = this.eH[3] / 6000;
               var4 = this.eH;
               var4[1] += 24;
               var6 = 2;

               label904:
               while(true) {
                  textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 24, 46, var3 % 10 + 83);
                  var3 /= 10;
                  --var6;
                  if (var6 <= 0) {
                     var4 = this.eH;
                     var4[1] += 48;
                     textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 27, 46, 93);
                     var4 = this.eH;
                     var4[1] += 27;
                     if (this.eH[3] % 6000 != 0) {
                        var3 = this.eH[3] / 100;
                     }

                     var4 = this.eH;
                     var4[1] += 24;
                     var6 = 2;

                     while(true) {
                        textureRenderer.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 24, 46, var3 % 10 + 83);
                        var3 /= 10;
                        --var6;
                        if (var6 <= 0) {
                           var4 = this.eH;
                           var4[1] += 48;
                           textureRenderer.drawScaledImage(this.ae[4], (float)this.eH[1], (float)(this.eH[2] - this.eZ + 46) - 38.333332F, 22.5F, 38.333332F, 93);
                           var4 = this.eH;
                           var4[1] += 22;
                           var3 = this.eH[3];
                           var6 = 2;
                           var4 = this.eH;
                           var4[1] += 20;

                           do {
                              textureRenderer.drawScaledImage(this.ae[4], (float)this.eH[1], (float)(this.eH[2] - this.eZ + 46) - 38.333332F, 20.0F, 38.333332F, var3 % 10 + 83);
                              var3 /= 10;
                              var7 = var6 - 1;
                              var4 = this.eH;
                              var4[1] -= 20;
                              var6 = var7;
                           } while(var7 > 0);
                           break label904;
                        }

                        var4 = this.eH;
                        var4[1] -= 24;
                     }
                  }

                  var4 = this.eH;
                  var4[1] -= 24;
               }
            }

            textureRenderer.setImageColor(255, 255, 255);
            textureRenderer.drawScaledImageI(this.ae[15], 4 - this.eI[0] - dv[this.fx[3]] / 2, 4 - this.eZ - dv[this.fx[3]] / 2, dv[this.fx[3]] + 58, dv[this.fx[3]] + 58, 2);
            if (this.eD[0] == 0) {
               this.eH[0] = 0;
            } else if (this.eD[0] == 1) {
               this.eH[0] = 5;
            }

            var3 = 5;

            for(var6 = 5; var6 >= 0; --var6) {
               if (this.eM[var6]) {
                  if (this.eL[var6] == 0) {
                     textureRenderer.drawScaledImageI(this.ae[15], var3 * 88 + 447 - dv[this.eK[var6]] / 2 + this.excessWidth, 58 - this.eZ - this.eI[0] - dv[this.eK[var6]] / 2, dv[this.eK[var6]] + 58, dv[this.eK[var6]] + 58, var6 + 33);
                  } else {
                     textureRenderer.drawScaledImageI(this.ae[15], var3 * 88 + 447 - dv[this.eK[var6]] / 2 + this.excessWidth, 58 - this.eZ - this.eI[0] - dv[this.eK[var6]] / 2, dv[this.eK[var6]] + 58, dv[this.eK[var6]] + 58, var6 + 27);
                  }

                  --var3;
               }
            }

            for(var3 = 0; var3 < 6; ++var3) {
               if (this.eM[var3]) {
                  this.eH[0] = 1;
               }
            }

            if ((this.dV || this.gA[1] >= 1) && this.eH[0] == 1) {
               var6 = 5;

               for(var3 = 5; var3 >= 0 && this.dW != var3; var6 = var7) {
                  var7 = var6;
                  if (this.eM[var3]) {
                     var7 = var6 - 1;
                  }

                  --var3;
               }

               textureRenderer.setColor(255, 255, 255, 216);
               textureRenderer.fillRect(242.0F + (float)this.excessWidth, 134.0F, 710.0F, 159.0F);
               this.gk[0][0] = var6 * 88 + 447 + 29 + this.excessWidth;
               this.gk[0][1] = var6 * 88 + 447 + 15 + 29 + this.excessWidth;
               this.gk[0][2] = var6 * 88 + 447 - 15 + 29 + this.excessWidth;
               this.gk[1][0] = 118;
               this.gk[1][1] = 134;
               this.gk[1][2] = 134;
               textureRenderer.setColor(255, 255, 255, 216);
               textureRenderer.drawVertices(this.gk[0], this.gk[1], 3);
               textureRenderer.setColor(0, 0, 0);

               for(var3 = 0; var3 < 4; ++var3) {
                  if (var3 == 0) {
                     textureRenderer.drawScaledImage(this.ag[this.gA[0] + var3], this.excessWidth + 597, var3 * 36 + 253 - 108, 1);
                  } else if (!aString.equals(this.dd[this.dW][var3 - 1], "＠")) {
                     textureRenderer.drawScaledImage(this.ag[this.gA[0] + var3], this.excessWidth + 597, var3 * 36 + 253 - 108, 1);
                  }
               }
            }

            if (this.bM[14] == 0) {
               if (!this.R()) {
                  this.dV = false;
               }
            } else {
               this.dV = false;
            }

            if (!this.ha[0]) {
               textureRenderer.drawScaledImageI(this.af[2], this.getWidth() / 2 - 190 - dv[this.fx[0]] / 2, 640 - this.eI[1] - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 381, dv[this.fx[0]] + 72, 3);
               textureRenderer.drawScaledImageI(this.ae[21], this.getWidth() / 2 - 190 + 190 - 127 - dv[this.fx[0]] / 2, 640 - this.eI[1] + 36 - 27 - dv[this.fx[0]] / 2 + this.eZ, dv[this.fx[0]] + 254, dv[this.fx[0]] + 55, 1);
               textureRenderer.drawScaledImageI(this.ae[4], 711 - dv[this.fx[10]] / 2 + this.excessWidth, 640 - this.eI[1] - dv[this.fx[10]] / 2 + this.eZ, dv[this.fx[10]] + 68, dv[this.fx[10]] + 68, 99);
               if (Twitter.getInstance().isEnabled()) {
                  textureRenderer.drawScaledImageI(this.ae[4], 809 - dv[this.fx[11]] / 2 + this.excessWidth, 640 - this.eI[1] - dv[this.fx[11]] / 2 + this.eZ, dv[this.fx[11]] + 68, dv[this.fx[11]] + 68, 100);
               }
            }

            if ((this.bM[14] == 1 || this.bM[14] == 4) && this.bM[15] == 7 && !this.eE[0] && this.ek[0] == 0 && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eb && this.R() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3])) {
               textureRenderer.drawScaledImageI(this.af[2], this.getWidth() / 2 - 190, 640 - this.eI[1] + this.eZ, 381, 72, this.fQ[5] % 4 / 2 + 4);
            }

            if (this.ct > 0 && this.bM[14] == 0) {
               var3 = 0;

               while(true) {
                  if (var3 >= 5) {
                     textureRenderer.setColor(255, 255, 0);
                     textureRenderer.drawScaledImage(this.aj[0], this.getWidth() / 2, 220, 1);
                     break;
                  }

                  for(var6 = 0; var6 < 5; ++var6) {
                     textureRenderer.setColor(0, 0, 0);
                     textureRenderer.drawScaledImage(this.aj[0], this.getWidth() / 2 - 2 + var6, var3 + 318 - 100, 1);
                  }

                  ++var3;
               }
            }

            if (this.bM[14] == 1) {
               this.b(textureRenderer);
            } else if (this.bM[14] == 2) {
               this.c(textureRenderer);
            } else if (this.bM[14] != 3) {
               if (this.bM[14] == 4) {
                  this.d(textureRenderer);
               } else if (this.bM[14] == 5) {
                  this.e(textureRenderer);
               }
            } else {
               textureRenderer.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.eP] * 690 / 100 / 2, 320 - eO[this.eP] * 179 / 100 / 2, eO[this.eP] * 690 / 100, eO[this.eP] * 179 / 100, 0);
               if (this.fQ[0] % 4 != 0 && this.fQ[0] % 4 != 1) {
                  textureRenderer.setColor(255, 255, 0);
               } else {
                  textureRenderer.setColor(255, 255, 255);
               }

               if (this.eP >= this.getLength(eO) - 1) {
                  var6 = 0;

                  for(var3 = 0; var3 < this.getLength(this.cW[0]) && !aString.equals(this.cW[0][var3], "＠"); ++var3) {
                     --var6;
                  }

                  ++var6;

                  for(var3 = 0; var3 < this.getLength(this.cW[0]) && !aString.equals(this.cW[0][var3], "＠"); ++var3) {
                     textureRenderer.drawScaledImage(this.ag[var3 + 1], this.getWidth() / 2, var6 * 18 + 305, 1);
                     var6 += 2;
                  }
               }
            }

            if (this.ee) {
               textureRenderer.setColor(0, 0, 0);
               textureRenderer.setAlpha(178);
               textureRenderer.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248, 84, 0);
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 131, 113, 16);
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 404 - dv[this.fC[5]] / 2, 48 - dv[this.fC[5]] / 2, dv[this.fC[5]] + 96, dv[this.fC[5]] + 96, 21);
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 40 - dv[this.fC[6]] / 2, 464 - dv[this.fC[6]] / 2, dv[this.fC[6]] + 384, dv[this.fC[6]] + 72, 6);
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288 + 65 - dv[this.fC[6]] / 2, 472 - dv[this.fC[6]] / 2, dv[this.fC[6]] + 254, dv[this.fC[6]] + 55, 10);
               //if (!jp.co.ponos.library.c.a.b().f()) {
               //   if (jp.co.ponos.library.c.a.b().e()) {
               //      textureRenderer.a(this.af[1], this.w / 2 + 535 - dv[this.fC[2]] / 2, 299 - dv[this.fC[2]] / 2, dv[this.fC[2]] + 106, dv[this.fC[2]] + 42, 20);
               //   } else {
               //      textureRenderer.a(this.af[1], this.w / 2 + 535 - dv[this.fC[2]] / 2, 299 - dv[this.fC[2]] / 2, dv[this.fC[2]] + 106, dv[this.fC[2]] + 42, 19);
               //   }
               //}

               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 500 - dv[this.fC[12]] / 2, 199 - dv[this.fC[12]] / 2, dv[this.fC[12]] + 172, dv[this.fC[12]] + 68, 3);
               if (!Sound.getInstance().isMutedBGM()) {
                  textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 252 - dv[this.fC[3]] / 2, 373 - dv[this.fC[3]] / 2, dv[this.fC[3]] + 68, dv[this.fC[3]] + 68, 4);
               } else {
                  textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 252 - dv[this.fC[3]] / 2, 373 - dv[this.fC[3]] / 2, dv[this.fC[3]] + 68, dv[this.fC[3]] + 68, 5);
               }

               if (!Sound.getInstance().isMutedSE()) {
                  textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 356 - dv[this.fC[4]] / 2, 373 - dv[this.fC[4]] / 2, dv[this.fC[4]] + 68, dv[this.fC[4]] + 68, 7);
               } else {
                  textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 356 - dv[this.fC[4]] / 2, 373 - dv[this.fC[4]] / 2, dv[this.fC[4]] + 68, dv[this.fC[4]] + 68, 8);
               }

               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 40 - dv[this.fC[7]] / 2, 197 - dv[this.fC[7]] / 2, dv[this.fC[7]] + 170, dv[this.fC[7]] + 72, 1);
               textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 298 - dv[this.fC[7]] / 2, 205 - dv[this.fC[7]] / 2, dv[this.fC[7]] + 150, dv[this.fC[7]] + 55, 13);
               if (this.dH <= 47 && this.bd >= 1) {
                  textureRenderer.drawScaledImageI(this.ae[15], 309 - dv[this.fC[8]] / 2 + this.excessWidth / 2, 284 - dv[this.fC[8]] / 2 + 20, dv[this.fC[8]] + 131, dv[this.fC[8]] + 131, 0, 0, 0, 5, this.hb[2], 40);
                  textureRenderer.drawScaledImageI(this.ae[15], 336 - dv[this.fC[8]] / 2 + this.excessWidth / 2, 308 - dv[this.fC[8]] / 2 + 20, dv[this.fC[8]] + 76, dv[this.fC[8]] + 76, 41);
               }

               if (!this.ef) {
                  if (this.R() && this.b(this.fB[7][0], this.fB[7][1], this.fB[7][2], this.fB[7][3])) {
                     textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 197, 170, 72, this.fQ[5] % 4 / 2 + 14);
                  } else if (this.R() && this.b(this.fB[6][0], this.fB[6][1], this.fB[6][2], this.fB[6][3])) {
                     textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 464, 384, 72, this.fQ[5] % 4 / 2 + 17);
                  }
               }

               if (this.ef) {
                  textureRenderer.drawScaledImageI(this.al, this.excessWidth / 2 + 135, 250, 690, 229, 0);
                  textureRenderer.setColor(255, 255, 255);
                  textureRenderer.drawScaledImage(this.ag[10], this.getWidth() / 2, 295, 1);
                  textureRenderer.drawScaledImageI(this.af[2], 251 - dv[this.fC[10]] / 2 + this.excessWidth / 2, 382 - dv[this.fC[10]] / 2, dv[this.fC[10]] + 168, dv[this.fC[10]] + 72, 0);
                  textureRenderer.drawScaledImageI(this.af[2], 541 - dv[this.fC[11]] / 2 + this.excessWidth / 2, 382 - dv[this.fC[11]] / 2, dv[this.fC[11]] + 168, dv[this.fC[11]] + 72, 0);
                  textureRenderer.drawScaledImageI(this.ae[21], 260 - dv[this.fC[10]] / 2 + this.excessWidth / 2, 390 - dv[this.fC[10]] / 2, dv[this.fC[10]] + 150, dv[this.fC[10]] + 55, 4);
                  textureRenderer.drawScaledImageI(this.ae[21], 550 - dv[this.fC[11]] / 2 + this.excessWidth / 2, 390 - dv[this.fC[11]] / 2, dv[this.fC[11]] + 150, dv[this.fC[11]] + 55, 5);
                  if (this.R() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3]) && !this.eb && !this.gu) {
                     textureRenderer.drawScaledImageI(this.af[2], this.excessWidth / 2 + 250, 381, 168, 72, this.fQ[5] % 4 / 2 + 1);
                  } else if (this.R() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3]) && !this.eb && !this.gu) {
                     textureRenderer.drawScaledImageI(this.af[2], this.excessWidth / 2 + 540, 381, 168, 72, this.fQ[5] % 4 / 2 + 1);
                  }
               }

               if (this.R() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
                  textureRenderer.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 404, 48, 96, 96, this.fQ[5] % 4 / 2 + 22);
               }
            }

            if (this.ha[0]) {
               this.h(textureRenderer);
            }

            textureRenderer.setBlendMode(0);
            textureRenderer.setImageAlpha(255);
            this.a(textureRenderer, this.ed);
      }

      textureRenderer.removeAnimTransformer();
      this.l(textureRenderer);
      if (this.gU) {
         this.q(textureRenderer);
      }

   }

   void f(int var1) {
      if (this.eE[0]) {
         int[] var2 = this.eD;
         var2[5] += this.el[0];
         if (var1 == 0) {
            if (this.eD[5] <= 0) {
               this.eD[1] = 0;
               this.eD[2] = 0;
               this.eD[3] = 0;
               this.eD[4] = 0;
               this.eD[5] = 0;
               if (this.eD[0] == 0) {
                  this.eD[0] = 0;
               } else if (this.eD[0] == 1) {
                  this.eD[0] = 1;
               }

               this.eE[0] = false;
            }

            if (this.eD[5] == 1) {
               this.eD[1] = -20;
               this.eD[2] = 20;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 2) {
               this.eD[1] = -40;
               this.eD[2] = 40;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 3) {
               this.eD[1] = -80;
               this.eD[2] = 80;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 4) {
               this.eD[1] = -40;
               this.eD[2] = 40;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 5) {
               this.eD[1] = -20;
               this.eD[2] = 20;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] >= 6) {
               this.eD[1] = 0;
               this.eD[2] = 0;
               this.eD[3] = 0;
               this.eD[4] = 0;
               this.eD[5] = 0;
               if (this.eD[0] == 0) {
                  this.eD[0] = 1;
               } else if (this.eD[0] == 1) {
                  this.eD[0] = 0;
               }

               this.eE[0] = false;
            }
         } else if (var1 == 1) {
            if (this.eD[5] <= 0) {
               this.eD[1] = 0;
               this.eD[2] = 0;
               this.eD[3] = 0;
               this.eD[4] = 0;
               this.eD[5] = 0;
               this.eE[0] = false;
               if (this.eD[0] == 0) {
                  this.eD[0] = 0;
               } else if (this.eD[0] == 1) {
                  this.eD[0] = 1;
               }
            }

            if (this.eD[5] == 1) {
               this.eD[1] = 20;
               this.eD[2] = -20;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 2) {
               this.eD[1] = 40;
               this.eD[2] = -40;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 3) {
               this.eD[1] = 80;
               this.eD[2] = -80;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 4) {
               this.eD[1] = 40;
               this.eD[2] = -40;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] == 5) {
               this.eD[1] = 20;
               this.eD[2] = -20;
               this.eD[3] = 0;
               this.eD[4] = 0;
            } else if (this.eD[5] >= 6) {
               this.eD[1] = 0;
               this.eD[2] = 0;
               this.eD[3] = 0;
               this.eD[4] = 0;
               this.eD[5] = 0;
               this.eE[0] = false;
               if (this.eD[0] == 0) {
                  this.eD[0] = 1;
               } else if (this.eD[0] == 1) {
                  this.eD[0] = 0;
               }
            }
         }
      } else {
         this.eD[5] = 0;
      }

   }

   void f(TextureRenderer var1) {
      var1.drawScaledImageI(this.ae[6], 0, 0, this.getWidth(), 640, 0);
      var1.setImageAlpha((int)(115.0F * aMath.cos((float)this.fQ[5])) + 140);
      var1.drawScaledImageI(this.ae[7], 0, 0, this.getWidth(), 816, 0);
      var1.setImageAlpha(255);

      int var2;
      int var3;
      int var4;
      Texture var6;
      for(var2 = 0; var2 < this.gC[1]; ++var2) {
         var6 = this.ae[6];
         var3 = this.eh[0];
         var4 = this.gy;
         var1.drawScaledImageI(var6, this.excessWidth / 2 + var3 + 112 + var4 * var2, 359, 738, 218, 1);
      }

      var1.setColor(255, 255, 255);

      for(var2 = 0; var2 < 5; ++var2) {
         if (var2 == 0) {
            var1.drawScaledImage(this.ag[var2], this.eh[0] + 128 + this.fs[2] * this.gy + this.excessWidth / 2, var2 * 36 + 378);
         } else {
            var1.drawScaledImage(this.ag[var2], this.eh[0] + 211 + this.fs[2] * this.gy + this.excessWidth / 2, var2 * 36 + 378);
         }
      }

      var3 = -(this.getLength(dt) - 1);
      var2 = this.getLength(dt) - 1;
      var4 = 0;

      int var5;
      do {
         if (this.fs[2] == var4) {
            var1.setImageColor(255, 255, 255);
            var1.setImageAlpha(255);
         } else {
            var1.setImageColor(0, 0, 0);
            var1.setImageAlpha(200);
         }

         var1.drawScaledImageI(this.ae[9], this.getWidth() / 2 - 6 + var3 * 10, 60, 0);
         var3 += 2;
         var5 = var2 - 1;
         ++var4;
         var2 = var5;
      } while(var5 >= 0);

      var1.setImageColor(255, 255, 255);
      var1.setImageAlpha(255);
      var1.setImageAlpha(127);
      if (this.fs[2] > 0) {
         var1.drawScaledImageI(this.ae[0], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 171, 8);
      }

      var1.setImageOrientation(1);
      if (this.fs[2] < this.gC[1] - 1) {
         var1.drawScaledImageI(this.ae[0], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30))) + this.excessWidth, 171, 8);
      }

      var1.setImageOrientation(0);
      var1.setImageAlpha(255);
      var1.setImageOrientation(0);
      var1.drawScaledImageI(this.ae[2], 0, -42, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, 0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
         } else {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 8);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 5);
      }

      if (!this.eE[0] && !this.eE[1] && !this.eE[9] && !this.eE[13] && !this.eE[2] && !this.eb && this.eE[10]) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[4] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var2 = this.aY;
      var3 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var3 * 29 + this.excessWidth, 6, var2 % 10);
         var4 = var2 / 10;
         ++var3;
         var2 = var4;
      } while(var4 > 0);

      var6 = this.ae[0];
      var2 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (633 - var2), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      if (this.fs[2] >= 0) {
         if (this.bt[dt[this.fs[2]] - 2] == 0) {
            var1.drawScaledImageI(this.ae[6], this.eh[0] + 430 + this.fs[2] * this.gy + this.excessWidth / 2, 132 - du[this.fQ[3]], 2);
            var1.drawScaledImageI(this.ae[6], this.eh[0] + 440 + this.fs[2] * this.gy + this.excessWidth / 2, 340, 3);
         } else if (this.bR[1][0][1] != 0 && this.bR[1][0][1] != 1 && this.bR[1][0][1] != 2 && this.bR[1][0][1] != 3 && this.bR[1][0][1] != 5) {
            if (this.bR[1][0][1] == 4) {
               this.eH[1] = this.getWidth() / 2 - 42;
               this.eH[2] = this.bR[1][0][4] / 10 + 348 - 97;
               this.eH[3] = eT[this.bR[1][0][2] % 8];
               int[] var10 = this.eH;
               var10[1] = (int)((float)var10[1] + (float)this.bR[1][0][27] * aMath.sin((float)this.bR[1][0][29]));
               var1.setImageAlpha(this.bR[1][0][25]);
               var6 = this.ae[8];
               var3 = this.eH[1];
               var2 = this.eh[0];
               var1.drawScaledImageI(var6, this.gy + var3 + var2, this.eH[2], 85, 100, this.eH[3] + 13);
               var1.setImageAlpha(255);
            }
         } else {
            if (this.bR[1][0][1] == 0) {
               this.aw[0].a(this.ax[0][0], this.bR[1][0][2]);
            } else if (this.bR[1][0][1] == 1) {
               this.aw[0].a(this.ax[0][1], this.bR[1][0][2]);
            } else if (this.bR[1][0][1] == 2) {
               this.aw[0].a(this.ax[0][2], this.bR[1][0][2]);
            } else if (this.bR[1][0][1] == 3) {
               this.aw[0].a(this.ax[0][3], this.bR[1][0][2]);
            } else if (this.bR[1][0][1] == 5) {
               this.aw[0].a(this.ax[0][3], this.bR[1][0][2]);
            }

            this.aw[0].a(0).a().a(this.aw[0], this.aw[0].a(0).b(), this.aw[0].a(0).c(), this.x);
            this.eH[1] = this.getWidth() / 2;
            this.eH[2] = this.bR[1][0][4] / 10 + 348;
            var1.setTextures(this.aw[0], this.eH[1] - this.x.x / 2 + this.bR[1][0][3] / 10 + this.eh[0] + this.fs[2] * this.gy, this.eH[2] - this.x.y);
         }
      }

      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var6 = this.af[0];
      var2 = this.getWidth() / 2;
      var1.drawScaledImageI(var6, this.fP + var2, 0, 572, 637, 1);
      var2 = 0;
      if (this.fR[0] == 0) {
         var2 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var2 = cv[this.fQ[0]];
      } else {
         var3 = this.fR[0];
      }

      if (this.eE[0] || this.eE[1] || this.eE[13]) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 355, 0);
         if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
            var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 191, 2);
         }

         var1.drawScaledImageI(this.ae[2], 0, -42, 10);
         var1.drawScaledImageI(this.ae[2], 0, 638, 10);
         var1.drawScaledImageI(this.ae[2], 0, 0, 0);
         if (this.gm[0] < 297) {
            if (this.gQ == 0) {
               var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
            } else {
               var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 8);
            }
         }

         if (this.gm[1] < 297) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 5);
         }
      }

      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, 0);
      var1.setImageOrientation(0);
      var6 = this.ae[0];
      var5 = this.fw[5][0];
      int var7 = dv[this.fx[5]] / 2;
      int var8 = this.fw[5][1];
      var4 = dv[this.fx[5]] / 2;
      var3 = this.fw[5][2];
      var2 = dv[this.fx[5]];
      int var9 = this.fw[5][3];
      var1.drawScaledImageI(var6, var5 - var7, var8 - var4, var2 + var3, dv[this.fx[5]] + var9, 9);
      var1.drawScaledImageI(this.ae[0], this.fw[5][0] + 4 - dv[this.fx[5]] / 2, this.fw[5][1] + 17 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[9] && !this.eE[13] && !this.eE[2] && !this.eb && this.eE[10]) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[4] % 4 / 2 + 12);
      }

      if (this.eE[0] || this.eE[1] || this.eE[13]) {
         var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
         var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
         var2 = this.aY;
         var3 = 0;

         do {
            var1.drawScaledImageI(this.ae[5], 924 - var3 * 29 + this.excessWidth, 6, var2 % 10);
            var4 = var2 / 10;
            ++var3;
            var2 = var4;
         } while(var4 > 0);

         var6 = this.ae[0];
         var2 = dv[this.fx[15]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (633 - var2), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      }

      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      var6 = this.ae[0];
      var2 = dv[this.fx[14]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (688 - var2), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var6 = this.ae[0];
         var2 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (733 - var2), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var2 = this.aL;
      var3 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var3 * 29 + this.excessWidth, 592, var2 % 10);
         var4 = var2 / 10;
         ++var3;
         var2 = var4;
      } while(var4 > 0);

   }

   void g() {
      byte var1 = 0;
      //if (!jp.co.ponos.library.b.aa.equals(jp.co.ponos.library.b.stream.b.d("t_unit.csv"), (new String[]{"48ffde5dd85d010a1e497456122afc2e"})[0])) {
      //   this.D = 0;
      //   this.j(4);
      //} else {
          AssetTextStream var2 = new AssetTextStream();
         var2.openRead(String.format("t_unit.csv"));

         int var3;
         for(var3 = 0; var3 < this.getLength(this.bY); ++var3) {
            var2.readLine();

            for(int var4 = 0; var4 < this.getLength(this.bY[var3]); ++var4) {
               this.bY[var3][var4] = 0;
               this.bY[var3][var4] = var2.getInt(var4);
            }

            this.bY[var3][2] = this.bY[var3][2] * 4 / 2;
            this.bY[var3][4] *= 2;
            this.bY[var3][5] *= 4;
            this.bY[var3][8] *= 4;
         }

         for(var3 = var1; var3 < this.getLength(this.bY); ++var3) {
            int[] var5 = this.bY[var3];
            var5[6] *= 100;
         }

         var2.close();
      //}

   }

   void g(TextureRenderer var1) {
      var1.drawScaledImageI(this.ae[0], 0, -40, this.getWidth(), 720, 0);
      if (this.eQ >= 1) {
         if (this.fQ[1] == 0) {
            this.aJ.a(this.aK[0], this.fQ[0]);
         } else {
            this.aJ.a(this.aK[1], this.fQ[0]);
         }

         this.aJ.a(0).a().a(this.aJ, this.aJ.a(0).b(), this.aJ.a(0).c(), this.x);
         var1.setTextures(this.aJ, 425 - this.x.x + this.excessWidth / 2, 320 - this.x.y + 90);
      }

      var1.drawScaledImageI(this.al, 480 - eO[this.fQ[2]] * 690 / 100 / 2 + this.excessWidth / 2, 529 - eO[this.fQ[2]] * 179 / 100 / 2, eO[this.fQ[2]] * 690 / 100, eO[this.fQ[2]] * 179 / 100, 0);
      if (this.fQ[2] >= this.getLength(eO) - 1 && this.eQ >= 1) {
         for(int var2 = 0; var2 < this.getLength(this.dr[this.eQ - 1]); ++var2) {
            if (var2 == 0) {
               if (this.fQ[4] % 4 / 2 == 0) {
                  var1.setColor(255, 255, 0);
               } else {
                  var1.setColor(255, 0, 255);
               }
            } else {
               var1.setColor(255, 255, 255);
            }

            var1.drawScaledImage(this.ag[var2], this.getWidth() / 2, var2 * 36 + 439 - 72 + 90, 1);
         }
      }

      if (this.fQ[3] >= 10) {
         var1.drawScaledImageI(this.af[2], 657 - dv[this.fx[0]] / 2 + this.excessWidth / 2, 360 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 168, dv[this.fx[0]] + 72, 0);
         var1.drawScaledImageI(this.ae[1], 693 - dv[this.fx[0]] / 2 + this.excessWidth / 2, 368 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 97, dv[this.fx[0]] + 55, 20);
         if (!this.eb && this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
            var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 657, 360, 168, 72, this.fQ[4] % 4 / 2 + 1);
         }
      }

   }

   boolean g(int var1) {
      boolean var2 = false;
      boolean var3;
      if (!this.eb) {
         this.ec = 0;
      } else if (var1 == 0) {
         ++this.ec;
         if (this.ec == 1) {
            this.U();
         }

         if (this.ec == 26) {
            this.screenTransition();
            switch (this.getScene()) {
               case 98:
                  for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                     this.eM[var1] = false;
                  }

                  this.j(100);
                  this.screen = 0;
                  this.fF = -1;
               case 99:
               default:
                  break;
               case 100:
                  if (this.screen != 0 && this.screen != 99999) {
                     if (this.screen == 5 || this.aZ == 0 && this.screen == 9) {
                        if (this.fE == 5) {
                           this.screen = 0;
                           this.fF = -1;
                           this.fI = 0;

                           for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                              this.fQ[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                              this.fR[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }
                        } else if (this.aZ == 0 && this.screen == 9) {
                           this.screen = 0;
                           this.fF = -1;
                           this.fI = 0;

                           for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                              this.fQ[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                              this.fR[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }
                        }
                     }
                  } else {
                     if (this.eg == 0) {
                        if (this.aZ == 0) {
                           this.screen = 9;
                           this.fF = -1;
                        } else {
                           this.screen = 5;
                           this.fF = -1;
                           this.fP = 0;
                           this.eE[0] = false;
                           this.fR[0] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
                           this.ae[var1].reset();
                        }

                        if (this.ae[0].isLoaded()) {
                           this.ae[0].reset();
                        }

                        if (!this.ae[0].isLoaded()) {
                           this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                        }

                        if (this.ae[1].isLoaded()) {
                           this.ae[1].reset();
                        }

                        if (!this.ae[1].isLoaded()) {
                           this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                        }

                        if (this.ae[2].isLoaded()) {
                           this.ae[2].reset();
                        }

                        if (!this.ae[2].isLoaded()) {
                           this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 8)), MyUtility.getString(String.format("img%03d.imgcut", 8)));
                        }

                        if (this.ae[3].isLoaded()) {
                           this.ae[3].reset();
                        }

                        if (!this.ae[3].isLoaded()) {
                           this.ae[3].load(MyUtility.getString(String.format("img%03d_%d.png", 9, 0)), MyUtility.getString(String.format("img%03d.imgcut", 9)));
                        }

                        if (this.ae[4].isLoaded()) {
                           this.ae[4].reset();
                        }

                        if (!this.ae[4].isLoaded()) {
                           this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 10)), MyUtility.getString(String.format("img%03d.imgcut", 10)));
                        }

                        if (this.ae[5].isLoaded()) {
                           this.ae[5].reset();
                        }

                        if (!this.ae[5].isLoaded()) {
                           this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 24)), MyUtility.getString(String.format("img%03d.imgcut", 24)));
                        }

                        if (this.af[0].isLoaded()) {
                           this.af[0].reset();
                        }

                        if (!this.af[0].isLoaded()) {
                           this.af[0].load(MyUtility.getString(String.format("img%03d_%d.png", 9, this.eQ + 3)), MyUtility.getString(String.format("img%03d_%d.imgcut", 9, this.eQ + 3)));
                        }

                        Sound.getInstance().stop(-1);
                        Sound.getInstance().play(2);

                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }
                     } else if (this.eg == 1) {
                        this.j(98);

                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }
                     } else if (this.eg == 2) {
                        this.j(99);

                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }
                     }

                     this.bg = this.eQ;
                     if (this.screen != 5) {
                        this.ac();
                     }
                  }
            }
         }

         if (this.ec >= 26) {
            this.eb = false;
            var3 = var2;
            if (this.screen != 5) {
               this.ac();
               var3 = var2;
            }

            return var3;
         }
      } else if (var1 == 1) {
         if (this.ec == 10) {
            this.screenTransition();
            switch (this.getScene()) {
               case 98:
               case 99:
               case 100:
               default:
                  break;
               case 300:
                  if (this.bM[14] == 1 && this.bM[21] == 0) {
                     if (this.bz[1] == 0) {
                        this.bz[1] = 1;
                     }

                     if (this.bM[0] == 13 && this.bz[4] == 0) {
                        this.gu = true;
                        this.gw = 0;
                        this.gx = 3;
                        var3 = var2;
                        return var3;
                     }

                     if (this.bM[0] == 6 && this.be == 0) {
                        this.gu = true;
                        this.gw = 0;
                        this.gx = 4;
                        var3 = var2;
                        return var3;
                     }

                     if (this.bM[0] >= 1 && this.bM[31] != -1) {
                        for(var1 = 0; var1 < this.getLength(this.bJ); ++var1) {
                           if (this.bJ[var1][15] == this.eQ && this.bJ[var1][0] == this.bM[31]) {
                              this.bC[this.bJ[var1][13]] = 0;
                           }
                        }

                        for(var1 = 0; var1 < this.getLength(this.bJ); ++var1) {
                           if (this.bJ[var1][15] == this.eQ && this.bJ[var1][0] == this.bM[31]) {
                              this.gu = true;
                              this.gw = 0;
                              this.gx = 999;
                              this.bM[31] = -1;
                              this.by[1] = 1;
                              var3 = var2;
                              return var3;
                           }
                        }
                     }

                     if (this.eQ == 0 && this.bM[0] == 6 && this.bM[33] == 1) {
                        this.gu = true;
                        this.gw = 0;
                        this.gx = 11;
                        this.bM[33] = 0;
                        var3 = var2;
                        return var3;
                     }
                  }
            }
         }

         ++this.ec;
         if (this.ec == 1) {
            this.U();
         }

         if (this.ec == 11) {
            this.screenTransition();
            switch (this.getScene()) {
               case 98:
               default:
                  break;
               case 99:
                  if (this.eg == 2) {
                     this.j(100);
                     this.screen = 0;
                     this.fF = -1;
                     var1 = 0;

                     while(true) {
                        var3 = var2;
                        if (var1 >= this.getLength(this.eM)) {
                           return var3;
                        }

                        this.eM[var1] = false;
                        ++var1;
                     }
                  } else {
                     this.bj = 1;
                     this.j(100);

                     for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                        this.eM[var1] = false;
                     }

                     this.fP = 0;

                     for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                        this.eE[var1] = false;
                     }

                     for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                        this.fQ[var1] = 0;
                     }

                     for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                        this.fR[var1] = 0;
                     }

                     this.screen = 0;
                     this.fF = -1;
                     this.resetTextures();
                     Sound.getInstance().stop(-1);
                     Sound.getInstance().play(2);
                     var3 = var2;
                     if (this.screen != 5) {
                        this.ac();
                        var3 = var2;
                     }

                     return var3;
                  }
               case 100:
                  //jp.co.ponos.library.a.a.b().f();
                  if (this.eg == 0) {
                     if (this.screen == 9999) {
                        this.screen = 5;
                        this.fF = -1;
                        this.bo = 0;
                        --this.aV;
                        if (this.aV <= 0) {
                           this.aV = 0;
                        }

                        if (this.bl >= 30) {
                           for(var1 = 0; var1 < this.getLength(this.bm); ++var1) {
                              this.bm[var1] = 0;
                           }

                           this.bl = 0;
                        }

                        if (this.hp == 1) {
                           this.bz[1] = 1;
                        } else if (this.hp == 2) {
                           this.bz[2] = 1;
                        } else if (this.hp == 3) {
                           this.bz[3] = 1;
                        } else if (this.hp == 4) {
                           this.bz[4] = 1;
                        }

                        this.hp = 0;
                        var3 = var2;
                        if (this.screen != 5) {
                           this.ac();
                           var3 = var2;
                           return var3;
                        }

                        return var3;
                     } else if (this.screen == 5 && this.bo == 1) {
                        this.screen = 9999;
                        this.fF = -1;
                        var3 = var2;
                        return var3;
                     } else {
                        if (this.screen == 0 && this.hr) {
                           this.screen = 99999;
                           this.fF = -1;
                           this.hr = false;
                           var3 = var2;
                        } else {
                           if (this.screen == 0) {
                              this.dH = 48;
                              this.eQ = 0;
                           }

                           this.j(300);
                           var3 = var2;
                           if (this.screen != 5) {
                              this.ac();
                              var3 = var2;
                              return var3;
                           }
                        }

                        return var3;
                     }
                  } else if (this.eg == 1) {
                     this.j(98);
                     this.eg = 0;
                     var1 = 0;

                     while(true) {
                        var3 = var2;
                        if (var1 >= this.getLength(this.eM)) {
                           return var3;
                        }

                        this.eM[var1] = false;
                        ++var1;
                     }
                  } else {
                     var3 = var2;
                     if (this.eg == 2) {
                        this.j(99);
                        this.eg = 0;
                        var1 = 0;

                        while(true) {
                           var3 = var2;
                           if (var1 >= this.getLength(this.eM)) {
                              return var3;
                           }

                           this.eM[var1] = false;
                           ++var1;
                        }
                     }

                     return var3;
                  }
               case 300:
                  if (this.bM[14] == 0) {
                     if (this.aZ == 0) {
                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }

                        this.j(100);
                        this.screen = 0;
                        this.fF = -1;
                        var1 = 0;

                        while(true) {
                           var3 = var2;
                           if (var1 >= this.getLength(this.eM)) {
                              return var3;
                           }

                           this.eM[var1] = false;
                           ++var1;
                        }
                     } else {
                        if (this.dH >= 48) {
                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }

                           this.j(100);
                           this.fP = 0;

                           for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                              this.eE[var1] = false;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                              this.fQ[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                              this.fR[var1] = 0;
                           }

                           this.screen = 0;
                           this.fF = -1;
                           this.resetTextures();
                           this.gL = true;
                           var3 = var2;
                           if (this.screen != 5) {
                              this.ac();
                              var3 = var2;
                              return var3;
                           }
                        } else {
                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }

                           for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                              this.ek[var1] = 0;
                           }

                           this.j(100);
                           this.fP = 0;

                           for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                              this.eE[var1] = false;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                              this.fQ[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                              this.fR[var1] = 0;
                           }

                           this.screen = 5;
                           this.fF = -1;

                           for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
                              this.ae[var1].reset();
                           }

                           if (this.ae[0].isLoaded()) {
                              this.ae[0].reset();
                           }

                           if (!this.ae[0].isLoaded()) {
                              this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                           }

                           if (this.ae[1].isLoaded()) {
                              this.ae[1].reset();
                           }

                           if (!this.ae[1].isLoaded()) {
                              this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                           }

                           if (this.ae[2].isLoaded()) {
                              this.ae[2].reset();
                           }

                           if (!this.ae[2].isLoaded()) {
                              this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 8)), MyUtility.getString(String.format("img%03d.imgcut", 8)));
                           }

                           if (this.ae[3].isLoaded()) {
                              this.ae[3].reset();
                           }

                           if (!this.ae[3].isLoaded()) {
                              this.ae[3].load(MyUtility.getString(String.format("img%03d_%d.png", 9, 0)), MyUtility.getString(String.format("img%03d.imgcut", 9)));
                           }

                           if (this.ae[4].isLoaded()) {
                              this.ae[4].reset();
                           }

                           if (!this.ae[4].isLoaded()) {
                              this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 10)), MyUtility.getString(String.format("img%03d.imgcut", 10)));
                           }

                           if (this.ae[5].isLoaded()) {
                              this.ae[5].reset();
                           }

                           if (!this.ae[5].isLoaded()) {
                              this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 24)), MyUtility.getString(String.format("img%03d.imgcut", 24)));
                           }

                           if (this.af[0].isLoaded()) {
                              this.af[0].reset();
                           }

                           if (!this.af[0].isLoaded()) {
                              this.af[0].load(MyUtility.getString(String.format("img%03d_%d.png", 9, this.eQ + 3)), MyUtility.getString(String.format("img%03d_%d.imgcut", 9, this.eQ + 3)));
                           }

                           this.resetTextures();
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(2);
                           var3 = var2;
                           if (this.screen != 5) {
                              this.ac();
                              var3 = var2;
                              return var3;
                           }
                        }

                        return var3;
                     }
                  }

                  if (this.bM[14] == 1) {
                     for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                        this.ek[var1] = 0;
                     }

                     if (this.bM[21] != 0) {
                        this.aZ = 1;
                        this.bf = 1;

                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }

                        this.resetTextures();
                        this.j(99);
                        var3 = var2;
                        return var3;
                     }

                     if (!this.gu) {
                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }

                        this.j(100);
                        this.fP = 0;

                        for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                           this.eE[var1] = false;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                           this.fQ[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                           this.fR[var1] = 0;
                        }

                        this.screen = 5;
                        this.fF = -1;

                        for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
                           this.fx[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
                           this.eK[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
                           this.hk[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
                           this.fC[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
                           this.fy[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
                           this.fz[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                           this.ek[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
                           this.ae[var1].reset();
                        }

                        if (this.ae[0].isLoaded()) {
                           this.ae[0].reset();
                        }

                        if (!this.ae[0].isLoaded()) {
                           this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                        }

                        if (this.ae[1].isLoaded()) {
                           this.ae[1].reset();
                        }

                        if (!this.ae[1].isLoaded()) {
                           this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                        }

                        if (this.ae[2].isLoaded()) {
                           this.ae[2].reset();
                        }

                        if (!this.ae[2].isLoaded()) {
                           this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 8)), MyUtility.getString(String.format("img%03d.imgcut", 8)));
                        }

                        if (this.ae[3].isLoaded()) {
                           this.ae[3].reset();
                        }

                        if (!this.ae[3].isLoaded()) {
                           this.ae[3].load(MyUtility.getString(String.format("img%03d_%d.png", 9, 0)), MyUtility.getString(String.format("img%03d.imgcut", 9)));
                        }

                        if (this.ae[4].isLoaded()) {
                           this.ae[4].reset();
                        }

                        if (!this.ae[4].isLoaded()) {
                           this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 10)), MyUtility.getString(String.format("img%03d.imgcut", 10)));
                        }

                        if (this.ae[5].isLoaded()) {
                           this.ae[5].reset();
                        }

                        if (!this.ae[5].isLoaded()) {
                           this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 24)), MyUtility.getString(String.format("img%03d.imgcut", 24)));
                        }

                        if (this.af[0].isLoaded()) {
                           this.af[0].reset();
                        }

                        if (!this.af[0].isLoaded()) {
                           this.af[0].load(MyUtility.getString(String.format("img%03d_%d.png", 9, this.eQ + 3)), MyUtility.getString(String.format("img%03d_%d.imgcut", 9, this.eQ + 3)));
                        }

                        this.resetTextures();
                        Sound.getInstance().stop(-1);
                        Sound.getInstance().play(2);
                        if (this.aZ == 0) {
                           String var4;
                           if (this.p == 0) {
                              var4 = "4d4de961-b1a0-4294-8b29-d81c26a229b2";
                           } else {
                              var4 = "9d70f289-44cd-49cf-a4c1-e7e0e5188814";
                           }

                           //com.tapjoy.g.a().a(var4);
                        }

                        this.aZ = 1;
                        this.bf = 1;
                        if (this.screen != 5) {
                           this.ac();
                        }
                     }
                  } else if (this.bM[14] == 2) {
                     if (this.eR == 0) {
                        for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
                           this.fx[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
                           this.eK[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
                           this.hk[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
                           this.fC[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
                           this.fy[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
                           this.fz[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                           this.ek[var1] = 0;
                        }

                        if (this.aZ == 0) {
                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }

                           this.j(100);
                           this.screen = 0;
                           this.fF = -1;
                           var3 = var2;
                        } else {
                           for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                              this.eM[var1] = false;
                           }

                           this.j(100);
                           this.screen = 5;
                           this.fF = -1;
                           this.fP = 0;

                           for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                              this.eE[var1] = false;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                              this.fQ[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                              this.fR[var1] = 0;
                           }

                           for(var1 = 0; var1 < this.getLength(this.ae); ++var1) {
                              this.ae[var1].reset();
                           }

                           if (this.ae[0].isLoaded()) {
                              this.ae[0].reset();
                           }

                           if (!this.ae[0].isLoaded()) {
                              this.ae[0].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
                           }

                           if (this.ae[1].isLoaded()) {
                              this.ae[1].reset();
                           }

                           if (!this.ae[1].isLoaded()) {
                              this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 7)), MyUtility.getString(String.format("img%03d.imgcut", 7)));
                           }

                           if (this.ae[2].isLoaded()) {
                              this.ae[2].reset();
                           }

                           if (!this.ae[2].isLoaded()) {
                              this.ae[2].load(MyUtility.getString(String.format("img%03d.png", 8)), MyUtility.getString(String.format("img%03d.imgcut", 8)));
                           }

                           if (this.ae[3].isLoaded()) {
                              this.ae[3].reset();
                           }

                           if (!this.ae[3].isLoaded()) {
                              this.ae[3].load(MyUtility.getString(String.format("img%03d_%d.png", 9, 0)), MyUtility.getString(String.format("img%03d.imgcut", 9)));
                           }

                           if (this.ae[4].isLoaded()) {
                              this.ae[4].reset();
                           }

                           if (!this.ae[4].isLoaded()) {
                              this.ae[4].load(MyUtility.getString(String.format("img%03d.png", 10)), MyUtility.getString(String.format("img%03d.imgcut", 10)));
                           }

                           if (this.ae[5].isLoaded()) {
                              this.ae[5].reset();
                           }

                           if (!this.ae[5].isLoaded()) {
                              this.ae[5].load(MyUtility.getString(String.format("img%03d.png", 24)), MyUtility.getString(String.format("img%03d.imgcut", 24)));
                           }

                           if (this.af[0].isLoaded()) {
                              this.af[0].reset();
                           }

                           if (!this.af[0].isLoaded()) {
                              this.af[0].load(MyUtility.getString(String.format("img%03d_%d.png", 9, this.eQ + 3)), MyUtility.getString(String.format("img%03d_%d.imgcut", 9, this.eQ + 3)));
                           }

                           this.resetTextures();
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(2);
                           var3 = var2;
                        }

                        return var3;
                     }

                     if (this.eR == 1) {
                        for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
                           this.eh[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
                           this.ei[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                           this.fQ[var1] = 0;
                        }

                        int var5;
                        int var6;
                        for(var5 = 0; var5 < this.getLength(this.bR[1]); ++var5) {
                           var1 = 0;

                           while(true) {
                              if (var1 >= 10) {
                                 var6 = 0;
                                 break;
                              }

                              var6 = var1;
                              if (this.eU[var1] == this.bR[1][var5][0]) {
                                 break;
                              }

                              ++var1;
                           }

                           if (this.bR[1][var5][1] == 2) {
                              this.bR[1][var5][2] = this.ax[var6][1].b() - 1;
                           }
                        }

                        this.fw[0][0] = this.excessWidth + 814;
                        this.fw[0][1] = this.eZ + 510;
                        this.fw[0][2] = 146;
                        this.fw[0][3] = 130;
                        this.fw[1][0] = 0;
                        this.fw[1][1] = this.eZ + 515;
                        this.fw[1][2] = 146;
                        this.fw[1][3] = 125;

                        for(var1 = 0; var1 < this.getLength(this.eI); ++var1) {
                           this.eI[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eW); ++var1) {
                           this.eW[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.bS); ++var1) {
                           for(var5 = 0; var5 < this.getLength(this.bS[var1]); ++var5) {
                              for(var6 = 0; var6 < this.getLength(this.bS[var1][var5]); ++var6) {
                                 this.bS[var1][var5][var6] = 0;
                              }
                           }
                        }

                        for(var1 = 0; var1 < this.getLength(this.bT); ++var1) {
                           for(var5 = 0; var5 < this.getLength(this.bT[var1]); ++var5) {
                              this.bT[var1][var5] = 0;
                           }
                        }

                        this.bM[5] = this.bV[0] - 9600;
                        this.bM[15] = 0;
                        this.bM[14] = 3;
                        this.bR[0][0][1] = 0;
                        this.bR[0][0][7] = ad[6] + this.bx[6] * 1000;
                        if (this.bx[6] >= 4 && this.bx[6] <= 7) {
                           this.bR[0][0][7] = (this.bx[6] - 4) * 2000 + 6000;
                        } else if (this.bx[6] >= 8) {
                           this.bR[0][0][7] = (this.bx[6] - 8) * 3000 + 15000;
                        }

                        int[] var7;
                        for(var1 = 0; var1 < 10; ++var1) {
                           var7 = this.bR[0][0];
                           var7[7] += cB[4] * this.bO[var1][4] / 100;
                        }

                        this.bR[0][0][8] = this.bR[0][0][7];

                        for(var1 = 0; var1 < this.getLength(this.bR[1]); ++var1) {
                           this.bR[1][var1][3] = 2800;
                        }

                        this.eH[0] = 0;

                        for(var1 = 0; var1 < 10; ++var1) {
                           if (this.eQ == var1 && this.bM[0] == 47) {
                              this.eH[0] = var1;
                              break;
                           }
                        }

                        if (this.eH[0] >= 1) {
                           var7 = this.eH;
                           int var10002 = var7[0]++;
                        }

                        if (this.cj[4] == 0) {
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3]);
                        } else {
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3 + 2]);
                        }

                        for(var1 = 0; var1 < this.getLength(this.em); ++var1) {
                           this.em[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.en); ++var1) {
                           this.en[var1] = 0;
                        }

                        this.eo = 0;

                        for(var1 = 0; var1 < this.getLength(this.ep); ++var1) {
                           this.ep[var1] = 0.0F;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eq); ++var1) {
                           this.eq[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.er); ++var1) {
                           this.er[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.es); ++var1) {
                           this.es[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.et); ++var1) {
                           this.et[var1] = false;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eu); ++var1) {
                           this.eu[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ev); ++var1) {
                           this.ev[var1] = 0;
                        }

                        this.ew = 0;

                        for(var1 = 0; var1 < this.getLength(this.ev); ++var1) {
                           this.ev[var1] = 0;
                        }

                        this.ex = false;
                        this.ey = 0;
                        this.ez = 0;

                        for(var1 = 0; var1 < this.getLength(this.eA); ++var1) {
                           for(var5 = 0; var5 < this.getLength(this.eA[var1]); ++var5) {
                              this.eA[var1][var5] = 0;
                           }
                        }

                        for(var1 = 0; var1 < this.getLength(this.eB); ++var1) {
                           for(var5 = 0; var5 < this.getLength(this.eB[var1]); ++var5) {
                              for(var6 = 0; var6 < this.getLength(this.eB[var1][var5]); ++var6) {
                                 this.eB[var1][var5][var6] = 0;
                              }
                           }
                        }

                        for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                           this.ek[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
                           this.fx[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
                           this.eK[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
                           this.hk[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
                           this.fC[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
                           this.fy[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
                           this.fz[var1] = 0;
                        }

                        this.eC = false;
                     }
                  } else {
                     if (this.bM[14] == 4) {
                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }

                        this.j(100);
                        this.fP = 0;

                        for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                           this.eE[var1] = false;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                           this.fQ[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                           this.fR[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
                           this.fx[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
                           this.eK[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
                           this.hk[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
                           this.fC[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
                           this.fy[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
                           this.fz[var1] = 0;
                        }

                        this.screen = 0;
                        this.fF = -1;
                        this.resetTextures();
                        this.gL = true;
                        var3 = var2;
                        if (this.screen != 5) {
                           this.ac();
                           var3 = var2;
                        }

                        return var3;
                     }

                     if (this.bM[14] == 5) {
                        for(var1 = 0; var1 < this.getLength(this.eM); ++var1) {
                           this.eM[var1] = false;
                        }

                        this.j(100);
                        this.fP = 0;

                        for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
                           this.eE[var1] = false;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
                           this.fQ[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
                           this.fR[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
                           this.fx[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
                           this.eK[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
                           this.hk[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
                           this.fC[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
                           this.fy[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
                           this.fz[var1] = 0;
                        }

                        for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
                           this.ek[var1] = 0;
                        }

                        this.screen = 0;
                        this.fF = -1;
                        this.resetTextures();
                        this.gL = true;
                        var3 = var2;
                        if (this.screen != 5) {
                           this.ac();
                           var3 = var2;
                        }

                        return var3;
                     }
                  }
            }
         }

         if (this.ec > 23) {
            this.screenTransition();
            this.eb = false;
            var3 = var2;
            return var3;
         }
      }

      var3 = true;
      return var3;
   }

   void h(int var1) {
      if (this.fr == -1) {
         boolean var2 = true;

         int var3;
         for(var3 = 0; var3 < this.getLength(cz[var1]) && cz[var1][var3] != -1; ++var3) {
            if (this.bs[this.eQ][cz[var1][var3]] == 0) {
               var2 = false;
            }
         }

         if (this.ae[7].isLoaded()) {
            this.ae[7].reset();
         }

         if (!var2) {
            if (!this.ae[7].isLoaded()) {
               this.ae[7].load(MyUtility.getString(String.format("ot%03d_c.png", cA[var1])), MyUtility.getString(String.format("ot%03d_c.imgcut", cA[var1])));
            }
         } else if (!this.ae[7].isLoaded()) {
            this.ae[7].load(MyUtility.getString(String.format("ot%03d_o.png", cA[var1])), MyUtility.getString(String.format("ot%03d_o.imgcut", cA[var1])));
         }

         for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
            if (this.ag[var3].isLoaded()) {
               this.ag[var3].reset();
            }
         }

         for(var3 = 0; var3 < 3; ++var3) {
            if (!var2) {
               if (!this.ag[var3].isLoaded()) {
                  this.ag[var3].a(this.cI[var1 + 12][var3], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else if (!this.ag[var3].isLoaded()) {
               if (var3 == 0) {
                  this.ag[var3].a(this.cI[var1][var3], "FONT_SYSTEM_BOLD", 30, 0);
               } else {
                  this.ag[var3].a(this.cI[var1][var3], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }

         if (var2) {
            if (this.p == 0) {
               if (!this.ag[3].isLoaded()) {
                  this.ag[3].a(String.format("%d%s%s", this.bO[this.eQ][var1], this.cH[8], this.cH[7]), "FONT_SYSTEM_BOLD", 30, 0);
               }
            } else if (this.p == 1 && !this.ag[3].isLoaded()) {
               this.ag[3].a(String.format("%s%d%s", this.cH[7], this.bO[this.eQ][var1], this.cH[8]), "FONT_SYSTEM_BOLD", 30, 0);
            }
         }

         for(int var4 = 0; var4 < this.getLength(cz[var1]) && cz[var1][var4] != -1; ++var4) {
            if (this.bs[this.eQ][cz[var1][var4]] == 0) {
               if (this.p == 0) {
                  if (!this.ag[var4 * 3 + 4 + 0].isLoaded()) {
                     this.ag[var4 * 3 + 4 + 0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                  }

                  if (!this.ag[var4 * 3 + 4 + 1].isLoaded()) {
                     this.ag[var4 * 3 + 4 + 1].a(this.cG[48], "FONT_SYSTEM_BOLD", 30, 0);
                  }

                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s%s", this.cF[cz[var1][var4]], this.cH[9]), "FONT_SYSTEM_BOLD", 30, 0);
               } else if (this.p == 1) {
                  if (!this.ag[var4 * 3 + 4 + 0].isLoaded()) {
                     this.ag[var4 * 3 + 4 + 0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                  }

                  if (this.fq[2] != 10) {
                     if (!this.ag[var4 * 3 + 4 + 1].isLoaded()) {
                        this.ag[var4 * 3 + 4 + 1].a(String.format(" %s", this.cG[48]), "FONT_SYSTEM_BOLD", 30, 0);
                     }
                  } else if (!this.ag[var4 * 3 + 4 + 1].isLoaded()) {
                     this.ag[var4 * 3 + 4 + 1].a(String.format(" %s", this.cG[48]), "FONT_SYSTEM_BOLD", 30, 0);
                  }

                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s %s", this.cH[4], this.cF[cz[var1][var4] + 49]), "FONT_SYSTEM_BOLD", 30, 0);
               }
            } else if (this.bs[this.eQ][cz[var1][var4]] == 1) {
               if (this.p == 0) {
                  this.ag[var4 * 3 + 4 + 0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s%s", this.cH[0], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s%s", this.cF[cz[var1][var4]], this.cH[4]), "FONT_SYSTEM_BOLD", 30, 0);
               } else if (this.p == 1) {
                  this.ag[var4 * 3 + 4 + 0].a(String.format("%s", this.cH[10]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s %s", this.cH[0], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s %s", this.cH[4], this.cF[cz[var1][var4] + 49]), "FONT_SYSTEM_BOLD", 30, 0);
               }
            } else if (this.bs[this.eQ][cz[var1][var4]] == 2) {
               if (this.p == 0) {
                  this.ag[var4 * 3 + 4 + 0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s%s", this.cH[1], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s%s", this.cF[cz[var1][var4]], this.cH[4]), "FONT_SYSTEM_BOLD", 30, 0);
               } else if (this.p == 1) {
                  this.ag[var4 * 3 + 4 + 0].a(String.format("%s", this.cH[10]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s %s", this.cH[1], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s %s", this.cH[4], this.cF[cz[var1][var4] + 49]), "FONT_SYSTEM_BOLD", 30, 0);
               }
            } else if (this.bs[this.eQ][cz[var1][var4]] == 3) {
               if (this.p == 0) {
                  this.ag[var4 * 3 + 4 + 0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s%s", this.cH[2], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s%s", this.cF[cz[var1][var4]], this.cH[4]), "FONT_SYSTEM_BOLD", 30, 0);
               } else if (this.p == 1) {
                  this.ag[var4 * 3 + 4 + 0].a(String.format("%s", this.cH[10]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 1].a(String.format("%s %s", this.cH[2], this.cG[cz[var1][var4]]), "FONT_SYSTEM_BOLD", 30, 0);
                  this.ag[var4 * 3 + 4 + 2].a(String.format("%s %s", this.cH[4], this.cF[cz[var1][var4] + 49]), "FONT_SYSTEM_BOLD", 30, 0);
               }
            }
         }

         this.fr = 1;
      }

   }

   void h(TextureRenderer var1) {
      var1.setColor(0, 0, 0, this.hc[0]);
      var1.drawRectangle(0, -this.eZ - 100, this.getWidth(), this.getHeight() + 200);
      Texture var2;
      int var3;
      int var4;
      int var5;
      if (this.hc[1] >= 2) {
         var2 = this.ay[0];
         var3 = this.excessWidth / 2;
         var4 = this.he[1];
         var1.drawScaledImageI(var2, var3 + 29, this.he[2] + var4 + 16, 548, 508, 0);
         var1.drawScaledImageI(this.ae[23], this.excessWidth / 2 + 172, this.he[1] + 283, 768, 256, 0);
         if (this.hc[1] <= 3) {
            var2 = this.ae[25];
            var3 = dv[this.hk[1]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (246 - var3), this.he[1] + 345 - dv[this.hk[1]] / 2, dv[this.hk[1]] + 96, dv[this.hk[1]] + 96, 0);
            var2 = this.ae[25];
            var3 = dv[this.hk[2]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (426 - var3), this.he[1] + 345 - dv[this.hk[2]] / 2 - 10, dv[this.hk[2]] + 96, dv[this.hk[2]] + 96, 1);
            var2 = this.ae[25];
            var3 = dv[this.hk[3]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (606 - var3), this.he[1] + 345 - dv[this.hk[3]] / 2, dv[this.hk[3]] + 96, dv[this.hk[3]] + 96, 2);
            if (!this.ha[1] && this.bB[9] == 2) {
               var1.drawScaledImageI(this.an, this.excessWidth / 2 + 786, (int)(235.0F + 10.0F * aMath.sin((float)(this.hc[28] * 30))), 96, 96, 0);
            }

            var2 = this.ae[25];
            var3 = dv[this.hk[4]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (786 - var3), this.he[1] + 345 - dv[this.hk[4]] / 2 - 10, dv[this.hk[4]] + 96, dv[this.hk[4]] + 96, 3);
         } else if (this.hl == 0) {
            var2 = this.ae[25];
            var3 = dv[this.hk[1]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (246 - var3), this.he[1] + 345 - dv[this.hk[1]] / 2, dv[this.hk[1]] + 96, dv[this.hk[1]] + 96, 0);
         } else if (this.hl == 1) {
            var2 = this.ae[25];
            var3 = dv[this.hk[2]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (426 - var3), this.he[1] + 345 - dv[this.hk[2]] / 2 - 10, dv[this.hk[2]] + 96, dv[this.hk[2]] + 96, 1);
         } else if (this.hl == 2) {
            var2 = this.ae[25];
            var3 = dv[this.hk[3]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (606 - var3), this.he[1] + 345 - dv[this.hk[3]] / 2, dv[this.hk[3]] + 96, dv[this.hk[3]] + 96, 2);
         } else if (this.hl == 3) {
            var2 = this.ae[25];
            var3 = dv[this.hk[4]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (786 - var3), this.he[1] + 345 - dv[this.hk[4]] / 2 - 10, dv[this.hk[4]] + 96, dv[this.hk[4]] + 96, 3);
         }

         if (this.hc[1] <= 3) {
            for(var3 = 0; var3 < this.getLength(ab); ++var3) {
               var5 = 0;

               for(var4 = 10; var4 <= ab[var3]; var4 *= 10) {
                  --var5;
               }

               var5 -= 2;
               if (var3 % 2 == 0) {
                  var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (var3 * 180 + 294 + var5 * 14 - 27), this.he[1] + 463, 55, 42, 21);
               } else {
                  var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (var3 * 180 + 294 + var5 * 14 - 27), this.he[1] + 453, 55, 42, 21);
               }

               var5 += 4;

               for(var4 /= 10; var4 >= 1; var4 /= 10) {
                  if (var3 % 2 == 0) {
                     var1.drawScaledImageI(this.ae[4], var3 * 180 + 294 + var5 * 14 - 27 + this.excessWidth / 2, this.he[1] + 462, ab[var3] / var4 % 10);
                  } else {
                     var1.drawScaledImageI(this.ae[4], var3 * 180 + 294 + var5 * 14 - 27 + this.excessWidth / 2, this.he[1] + 452, ab[var3] / var4 % 10);
                  }

                  var5 += 2;
               }
            }
         } else {
            for(var3 = 0; var3 < this.getLength(ab); ++var3) {
               if (this.hl == var3) {
                  var5 = 0;

                  for(var4 = 10; var4 <= ab[var3]; var4 *= 10) {
                     --var5;
                  }

                  var5 -= 2;
                  if (var3 % 2 == 0) {
                     var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (var3 * 180 + 294 + var5 * 14 - 27), this.he[1] + 463, 55, 42, 21);
                  } else {
                     var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (var3 * 180 + 294 + var5 * 14 - 27), this.he[1] + 453, 55, 42, 21);
                  }

                  var5 += 4;

                  for(var4 /= 10; var4 >= 1; var4 /= 10) {
                     if (var3 % 2 == 0) {
                        var1.drawScaledImageI(this.ae[4], var3 * 180 + 294 + var5 * 14 - 27 + this.excessWidth / 2, this.he[1] + 462, ab[var3] / var4 % 10);
                     } else {
                        var1.drawScaledImageI(this.ae[4], var3 * 180 + 294 + var5 * 14 - 27 + this.excessWidth / 2, this.he[1] + 452, ab[var3] / var4 % 10);
                     }

                     var5 += 2;
                  }
               }
            }
         }
      }

      if (this.hc[1] >= 3) {
         var1.setImageAlpha(165);
         var1.drawScaledImageI(this.ae[24], this.excessWidth / 2 + 212, this.he[1] + 33, 700, 112, 1);
         var1.setImageAlpha(255);
         var1.setColor(255, 255, 255);
         var1.drawScaledImage(this.ag[0], this.excessWidth / 2 + 579, this.he[1] + 55, 1);
         var1.drawScaledImage(this.ag[1], this.excessWidth / 2 + 579, this.he[1] + 91, 1);
         var1.drawScaledImage(this.ag[2], this.excessWidth / 2 + 555, this.he[1] + 299, 1);
         if (this.hc[1] <= 3) {
            var1.drawScaledImageI(this.ae[21], 4 - dv[this.hk[5]] / 2, 541 - dv[this.hk[5]] / 2, dv[this.hk[5]] + 95, dv[this.hk[5]] + 95, 9);
            var1.drawScaledImageI(this.ae[21], 8 - dv[this.hk[5]] / 2, 558 - dv[this.hk[5]] / 2, dv[this.hk[5]] + 84, dv[this.hk[5]] + 60, 3);
            if (this.bB[9] >= 3 && this.R() && this.b(this.hj[5][0], this.hj[5][1], this.hj[5][2], this.hj[5][3]) && !this.gu && !this.eb) {
               var1.drawScaledImageI(this.ae[21], 3, 540, 96, 96, this.hc[2] % 4 / 2 + 12);
            }

            var2 = this.ae[21];
            var3 = dv[this.fx[14]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth + (688 - var3), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
            var2 = this.ae[21];
            var3 = dv[this.fx[14]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth + (733 - var3), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
            var3 = this.aL;
            var4 = 0;

            do {
               var1.drawScaledImageI(this.ae[4], 924 - var4 * 29 + this.excessWidth, 592, var3 % 10);
               var5 = var3 / 10;
               ++var4;
               var3 = var5;
            } while(var5 > 0);

            var1.drawScaledImageI(this.ae[21], this.excessWidth + 610, 607, 76, 25, 24);
         }
      }

      if (this.ha[1]) {
         var1.drawScaledImageI(this.ae[23], this.excessWidth / 2 + 113, 197, 768, 384, 0);
         var2 = this.ae[21];
         var3 = dv[this.hk[7]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth / 2 + (803 - var3), 173 - dv[this.hk[7]] / 2 - 16, dv[this.hk[7]] + 95, dv[this.hk[7]] + 95, 9);
         var2 = this.ae[21];
         var3 = dv[this.hk[7]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth / 2 + (808 - var3), 190 - dv[this.hk[7]] / 2 - 16, dv[this.hk[7]] + 84, dv[this.hk[7]] + 60, 11);
         if (this.bB[9] >= 3 && this.R() && this.b(this.hj[7][0], this.hj[7][1], this.hj[7][2], this.hj[7][3]) && !this.gu && !this.eb) {
            var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + 802, 156, 96, 96, this.hc[2] % 4 / 2 + 12);
         }

         var1.drawScaledImageI(this.ae[25], this.excessWidth / 2 + 220, 284, 96, 96, this.hl);
         var2 = this.af[2];
         var3 = dv[this.hk[6]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth / 2 + (422 - var3), 321 - dv[this.hk[6]] / 2, dv[this.hk[6]] + 381, dv[this.hk[6]] + 72, 3);
         var2 = this.ae[24];
         var3 = dv[this.hk[6]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth / 2 + (485 - var3), 329 - dv[this.hk[6]] / 2, dv[this.hk[6]] + 254, dv[this.hk[6]] + 55, 0);
         if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
            var1.setImageColor(0, 0, 0);
            var1.setImageAlpha(127);
            var2 = this.af[2];
            var3 = dv[this.hk[6]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (422 - var3), 321 - dv[this.hk[6]] / 2, dv[this.hk[6]] + 381, dv[this.hk[6]] + 72, 3);
            var1.setImageColor(255, 255, 255);
            var1.setImageAlpha(255);
         }

         var1.setColor(255, 255, 255);
         if (this.R() && this.b(this.hj[6][0], this.hj[6][1], this.hj[6][2], this.hj[6][3]) && !this.gu && !this.eb) {
            var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 422, 321, 381, 72, this.fQ[5] % 4 / 2 + 4);
         }

         var4 = 0;

         for(var3 = 10; var3 <= ab[this.hl]; var3 *= 10) {
            --var4;
         }

         var4 -= 2;
         var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (var4 * 14 + 268 - 27), this.he[1] + 389, 55, 42, 21);
         var4 += 4;

         for(var3 /= 10; var3 >= 1; var3 /= 10) {
            var1.drawScaledImageI(this.ae[4], var4 * 14 + 268 - 27 + this.excessWidth / 2, this.he[1] + 388, ab[this.hl] / var3 % 10);
            var4 += 2;
         }

         var1.drawScaledImage(this.ag[3], this.excessWidth / 2 + 500, 230, 1);
         var1.drawScaledImage(this.ag[4], this.excessWidth / 2 + 499, 468, 1);
         var1.drawScaledImage(this.ag[5], this.excessWidth / 2 + 499, 504, 1);
         if (this.bB[9] == 2) {
            var1.drawScaledImageI(this.an, this.excessWidth / 2 + 564, (int)(211.0F + 10.0F * aMath.sin((float)(this.hc[28] * 30))), 96, 96, 0);
         }
      }

      if (this.hc[1] == 5) {
         if (this.hl == 0) {
            if (this.hc[6] < this.aA[1][0].a()) {
               this.az[1][0].a(this.aA[1][0], this.hc[6]);
               var1.setTextures(this.az[1][0], 0, 0);
            }

            if (this.hc[7] >= 1 && this.hc[7] < this.aA[1][1].a()) {
               this.az[1][1].a(this.aA[1][1], this.hc[7]);
               var1.setTextures(this.az[1][1], this.excessWidth / 2 - 300, 0);
            }

            if (this.hc[8] >= 1 && this.hc[8] < this.aA[1][1].a()) {
               this.az[1][1].a(this.aA[1][1], this.hc[8]);
               var1.setTextures(this.az[1][1], this.excessWidth / 2 + 300, 0);
            }

            if (this.hc[9] >= 1 && this.hc[9] < this.aA[1][1].a()) {
               this.az[1][1].a(this.aA[1][1], this.hc[9]);
               var1.setTextures(this.az[1][1], 0, 0);
            }
         } else if (this.hl == 1) {
            if (this.hc[6] < this.aA[2][0].a()) {
               this.az[2][0].a(this.aA[2][0], this.hc[6]);
               var1.setTextures(this.az[2][0], this.excessWidth / 2 + 0, 0);
            }

            if (this.hc[7] >= 1 && this.hc[7] < this.aA[2][1].a()) {
               this.az[2][1].a(this.aA[2][1], this.hc[7]);
               var1.setTextures(this.az[2][1], this.excessWidth / 2 + 0, 0);
            }

            var1.setColor(0, 0, 0, this.hc[8] - this.hc[9]);
            var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
         } else if (this.hl == 2) {
            if (this.hc[6] < this.aA[0][0].a()) {
               this.az[0][0].a(this.aA[0][0], this.hc[6]);
               var1.setTextures(this.az[0][0], this.excessWidth / 2 + 0, 0);
            }

            for(var3 = 0; var3 < 10; ++var3) {
               if (this.hc[var3 + 7] >= 1 && this.hc[var3 + 7] < this.aA[0][1].a()) {
                  this.az[0][1].a(this.aA[0][1], this.hc[var3 + 7]);
                  var1.setTextures(this.az[0][1], this.hh[var3 + 0] * 40 + this.excessWidth / 2, this.hi[var3 + 0] * 30);
               }
            }
         } else if (this.hl == 3) {
            this.az[3][0].a(this.aA[3][0], this.hc[6]);
            var1.setTextures(this.az[3][0], this.excessWidth / 2 + 0, 0);
            this.eH[1] = this.hd[0] + 8;
            this.eH[2] = this.he[2] + 64;
            this.eH[3] = 6000;
            if (this.eH[3] < 1000) {
               var1.setImageColor(255, 0, 0);
            } else {
               var1.setImageColor(255, 255, 255);
            }

            var1.setImageAlpha(this.hc[7]);
            var3 = this.eH[3] / 6000;
            int[] var6 = this.eH;
            var6[1] += 24;
            var4 = 2;

            while(true) {
               var1.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 24, 46, var3 % 10 + 83);
               var3 /= 10;
               --var4;
               if (var4 <= 0) {
                  var6 = this.eH;
                  var6[1] += 48;
                  var1.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 27, 46, 93);
                  var6 = this.eH;
                  var6[1] += 27;
                  if (this.eH[3] % 6000 != 0) {
                     var3 = this.eH[3] / 100;
                  }

                  var6 = this.eH;
                  var6[1] += 24;
                  var4 = 2;

                  while(true) {
                     var1.drawScaledImageI(this.ae[4], this.eH[1], this.eH[2] - this.eZ, 24, 46, var3 % 10 + 83);
                     var3 /= 10;
                     --var4;
                     if (var4 <= 0) {
                        var6 = this.eH;
                        var6[1] += 48;
                        var1.drawScaledImage(this.ae[4], (float)this.eH[1], (float)(this.eH[2] - this.eZ + 46) - 38.333332F, 22.5F, 38.333332F, 93);
                        var6 = this.eH;
                        var6[1] += 22;
                        var3 = this.eH[3];
                        var4 = 2;
                        var6 = this.eH;
                        var6[1] += 20;

                        do {
                           var1.drawScaledImage(this.ae[4], (float)this.eH[1], (float)(this.eH[2] - this.eZ + 46) - 38.333332F, 20.0F, 38.333332F, var3 % 10 + 83);
                           var3 /= 10;
                           var5 = var4 - 1;
                           var6 = this.eH;
                           var6[1] -= 20;
                           var4 = var5;
                        } while(var5 > 0);

                        var1.setImageAlpha(255);
                        var1.setImageColor(255, 255, 255);
                        return;
                     }

                     var6 = this.eH;
                     var6[1] -= 24;
                  }
               }

               var6 = this.eH;
               var6[1] -= 24;
            }
         }
      }

   }

   boolean h() {
      boolean var1 = false;
      this.eG = 1;
      if (this.bM[15] != 0) {
         this.l();
      } else {
         this.ek[0] = 0;
      }

      int[] var2 = this.bM;
      int var10002 = var2[16]++;
      if (this.bM[15] == 0) {
         this.z += 800;
         var2 = this.eI;
         var2[0] += 10;
         if (this.bM[12] == 0 && this.bM[16] >= 20) {
            this.bM[15] = 1;
            this.bM[16] = 0;
            this.eI[0] = 1000;
         }
      } else if (this.bM[15] >= 1 && this.bM[15] <= 2) {
         if (this.bM[16] >= this.getLength(cq)) {
            var2 = this.bM;
            var10002 = var2[15]++;
            this.bM[16] = 0;
         }
      } else {
         int var3;
         if (this.bM[15] == 3) {
            if (this.bb == 0 && this.bM[0] == 6) {
               this.bb = 1;
            }

            if (this.bM[16] >= 30) {
               this.bM[18] = 0;
               this.bM[19] = -1;
               var3 = 35;
               if (this.eL[1] == 1) {
                  var3 = 100;
               }

               if (this.bb == 0) {
                  var3 = 0;
               } else if (this.bb == 1) {
                  var3 = 100;
               }

               if (var3 > aMath.rand(100)) {
                  var3 = aMath.rand(100);
                  if (var3 < 45) {
                     this.bM[18] = 1;
                  } else if (var3 < 75) {
                     this.bM[18] = 2;
                  } else {
                     this.bM[18] = 3;
                  }

                  if (this.eL[1] == 1) {
                     this.bM[18] = 3;
                  }

                  if (this.bb == 1) {
                     this.bM[18] = 3;
                     this.bb = 2;
                  }

                  if (this.bs[this.eQ][this.bM[20]] < this.bM[18]) {
                     this.bs[this.eQ][this.bM[20]] = this.bM[18];
                  }

                  int var4 = -1;
                  var3 = 0;

                  int var5;
                  while(true) {
                     if (var3 >= this.getLength(cy)) {
                        var5 = var4;
                        break;
                     }

                     for(var5 = 0; var5 < cy[var3]; ++var5) {
                        if (cz[var3][var5] == this.bM[20]) {
                           var4 = var3;
                           break;
                        }
                     }

                     var5 = var4;
                     if (var4 != -1) {
                        break;
                     }

                     ++var3;
                  }

                  if (var5 >= 0 && this.bO[this.eQ][var5] == 0) {
                     this.U();
                     if (this.bO[this.eQ][var5] != 0) {
                        this.bM[19] = var5;
                     } else {
                        this.U();
                     }
                  }

                  this.bM[15] = 4;
                  this.bM[16] = 0;
                  if (this.bM[18] >= 1) {
                     for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
                        if (this.ag[var3].isLoaded()) {
                           this.ag[var3].reset();
                        }
                     }

                     if (this.p == 0) {
                        this.ag[0].a(this.cH[3], "FONT_SYSTEM_BOLD", 30, 0);
                        this.ag[1].a(String.format("%s%s", this.cH[this.bM[18] - 1], this.cG[this.bM[20]]), "FONT_SYSTEM_BOLD", 30, 0);
                        this.ag[2].a(this.cH[6], "FONT_SYSTEM_BOLD", 30, 0);
                     } else if (this.p == 1) {
                        this.ag[0].a(String.format("%s %s", this.cH[6], this.cH[9]), "FONT_SYSTEM_BOLD", 30, 0);
                        this.ag[1].a(String.format("%s %s", this.cH[this.bM[18] - 1], this.cG[this.bM[20]]), "FONT_SYSTEM_BOLD", 30, 0);
                     }
                  }

                  Sound.getInstance().play(29);
               } else {
                  this.bM[15] = 6;
                  this.bM[16] = 0;
               }
            }
         } else if (this.bM[15] == 4) {
            if (this.bM[19] != -1) {
               ++this.eP;
               if (this.eP > this.getLength(eO) - 1) {
                  this.eP = this.getLength(eO) - 1;
               }

               if (this.eP >= this.getLength(eO) - 1) {
                  var2 = this.fQ;
                  var10002 = var2[10]++;
                  if (this.fQ[10] >= 30) {
                     this.fQ[10] = 30;
                     if (this.S()) {
                        this.fQ[10] = 0;
                        if (this.bM[0] == 6 && this.bz[3] == 0) {
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 0;
                           this.gx = 2;
                           return var1;
                        }

                        this.eP = 0;
                        this.bM[15] = 5;
                        this.bM[16] = 0;

                        for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
                           if (this.ag[var3].isLoaded()) {
                              this.ag[var3].reset();
                           }
                        }

                        this.ag[0].a(this.cI[this.bM[19]][0], "FONT_SYSTEM_BOLD", 30, 0);
                        this.ag[1].a(this.cH[5], "FONT_SYSTEM_BOLD", 30, 0);
                        Sound.getInstance().play(29);
                     }
                  }
               }
            } else {
               ++this.eP;
               if (this.eP > this.getLength(eO) - 1) {
                  this.eP = this.getLength(eO) - 1;
               }

               if (this.eP >= this.getLength(eO) - 1) {
                  var2 = this.fQ;
                  var10002 = var2[10]++;
                  if (this.fQ[10] >= 30) {
                     this.fQ[10] = 30;
                     if (this.S()) {
                        this.fQ[10] = 0;
                        if (this.bM[0] == 6 && this.bz[3] == 0) {
                           this.gu = true;
                           this.gw = 0;
                           this.gx = 2;
                           this.screenTransition();
                           return var1;
                        }

                        this.eP = 0;
                        this.bM[15] = 6;
                        this.bM[16] = 0;
                        Sound.getInstance().play(11);
                     }
                  }
               }
            }
         } else if (this.bM[15] == 5) {
            ++this.eP;
            if (this.eP > this.getLength(eO) - 1) {
               this.eP = this.getLength(eO) - 1;
            }

            if (this.eP >= this.getLength(eO) - 1) {
               var2 = this.fQ;
               var10002 = var2[10]++;
               if (this.fQ[10] >= 30) {
                  this.fQ[10] = 30;
                  if (this.S()) {
                     this.fQ[10] = 0;
                     if (this.bM[0] == 6 && this.bz[3] == 0) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 0;
                        this.gx = 2;
                        return var1;
                     }

                     this.eP = 0;
                     this.bM[15] = 6;
                     this.bM[16] = 0;
                     Sound.getInstance().play(11);
                  }
               }
            }
         } else if (this.bM[15] == 6) {
            this.fw[4][0] = this.getWidth() / 2 - 190;
            this.fw[4][1] = 640;
            this.fw[4][2] = 381;
            this.fw[4][3] = 88;
            var2 = this.eI;
            var2[1] += 20;
            if (this.eI[1] >= 82) {
               this.eI[1] = 82;
               this.bM[15] = 7;
            }

            this.fw[4][1] = 640 - this.eI[1] - 8 + this.eZ;
         } else if (this.bM[15] == 7) {
            if (this.R()) {
               if (this.eE[0] || this.eE[4]) {
                  this.eE[1] = true;
               }
            } else if (!this.S()) {
               this.eE[1] = false;
            }

            if (this.fx[0] >= 1) {
               var2 = this.fx;
               var10002 = var2[0]++;
               if (this.fx[0] > this.getLength(dv) - 1) {
                  this.fx[0] = 0;
                  this.screenTransition();
                  this.eb = true;
                  this.ed = 1;
                  return var1;
               }
            } else if (this.fx[10] >= 1) {
               var2 = this.fx;
               var10002 = var2[10]++;
               if (this.fx[10] > this.getLength(dv) - 1) {
                  this.fx[10] = 0;
                  //if (!jp.co.ponos.library.c.a.b().f()) {
                     //this.f();
                     //this.j = true;
                     //this.g = 5;

                     this.screenTransition();
                     this.j = true;
                     this.menuType = 5;


                  return var1;
               }
            } else if (this.fx[11] >= 1) {
               var2 = this.fx;
               var10002 = var2[11]++;
               if (this.fx[11] > this.getLength(dv) - 1) {
                  this.fx[11] = 0;
                  String var6 = String.format(MyUtility.getString("twitter_txt1"), this.cF[cm[this.bM[0]]]);
                  Twitter.getInstance().tweet(String.format("%s %s %s", var6, MyUtility.getString("url_abbr"), MyUtility.getString("twitter_hash")), null, null);
                  this.zoom.reset();
               }
            } else {
               if (!this.eE[0] && this.ek[0] == 0 && !this.eE[1] && !this.eE[2] && !this.eE[3]) {
                  if (this.R() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3])) {
                     if (!this.gp[4]) {
                        Sound.getInstance().play(10);
                        this.gp[4] = true;
                     }
                  } else {
                     this.gp[4] = false;
                  }

                  if (this.R() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
                     if (!this.gp[10]) {
                        Sound.getInstance().play(10);
                        this.gp[10] = true;
                     }
                  } else {
                     this.gp[10] = false;
                  }

                  if (Twitter.getInstance().isEnabled()) {
                     if (this.R() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
                        if (!this.gp[11]) {
                           Sound.getInstance().play(10);
                           this.gp[11] = true;
                        }
                     } else {
                        this.gp[11] = false;
                     }
                  }
               }

               if (!this.eE[0] && this.ek[0] == 0 && !this.eE[1] && !this.eE[2] && !this.eE[3]) {
                  if (this.S() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3])) {
                     var2 = this.fx;
                     var10002 = var2[0]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
                     var2 = this.fx;
                     var10002 = var2[10]++;
                     Sound.getInstance().play(11);
                  } else if (this.S() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3]) && Twitter.getInstance().isEnabled()) {
                     var2 = this.fx;
                     var10002 = var2[11]++;
                     Sound.getInstance().play(11);
                  }
               }
            }
         }
      }

      var1 = true;
      return var1;
   }

   void i(TextureRenderer var1) {
      var1.drawScaledImageI(this.ae[7], 0, 0, this.getWidth(), 407, 0);
      var1.drawScaledImageI(this.ae[7], 0, 362, this.getWidth(), 238, 1);
      var1.drawScaledImageI(this.ae[8], 0, 78, 1);
      var1.setColor(255, 255, 255);
      var1.drawScaledImage(this.ag[this.gA[0]], 146, 82, 1);

      int var2;
      for(var2 = 0; var2 < 3; ++var2) {
         if (!aString.equals(this.dd[this.gP[2]][var2], "＠")) {
            var1.drawScaledImage(this.ag[this.gA[1] + var2], this.getWidth() / 2 + 20, var2 * 36 + 470 - 5, 1);
         }
      }

      boolean var18;
      label221: {
         if (this.gP[2] < this.gB[0]) {
            if (this.bA[this.gP[2]] < 9000) {
               var18 = true;
               break label221;
            }
         } else if (this.aY < 90000000) {
            var18 = true;
            break label221;
         }

         var18 = false;
      }

      if (var18) {
         var1.drawScaledImageI(this.ae[7], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 2);
      }

      if (var18) {
         if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
            if (this.aL >= 500) {
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
            } else {
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
               var1.setImageColor(0, 0, 0);
               var1.setImageAlpha(127);
               var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
               var1.setImageColor(255, 255, 255);
               var1.setImageAlpha(255);
            }
         } else if (this.aL >= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]]) {
            var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
         } else {
            var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
            var1.setImageColor(0, 0, 0);
            var1.setImageAlpha(127);
            var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
            var1.setImageColor(255, 255, 255);
            var1.setImageAlpha(255);
         }
      }

      int var3;
      int var4;
      if (this.gP[2] < this.gB[0]) {
         var1.drawScaledImageI(this.ae[7], this.excessWidth + 552, 402, 7);
         var3 = this.bA[this.gP[2]];
         var4 = 0;

         while(true) {
            var1.drawScaledImageI(this.ae[5], this.excessWidth + (916 - var4 * 29), 404, 30, 42, var3 % 10);
            var3 /= 10;
            if (var3 <= 0) {
               break;
            }

            ++var4;
         }
      } else {
         var1.setColor(0, 0, 0);
         var1.drawRectangle(400, 395, this.getWidth(), 60);
      }

      if (var18) {
         if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
            var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
         } else {
            var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
         }
      }

      int var5;
      Texture var6;
      for(var4 = 1; var4 < this.gC[0] + 1 + this.gC[1] + this.gC[2]; ++var4) {
         float var10;
         if (this.gP[0] == var4) {
            this.eH[0] = this.gH;
            this.eH[1] = this.fx[2];
            var10 = (float)(-(328 - this.go[var4][0]));
         } else if (this.gP[0] + 1 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var10 = (float)(328 - this.go[var4][0]);
         } else if (this.gP[0] + 2 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var10 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F;
         } else if (this.gP[0] + 3 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var10 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F + (float)(328 - this.go[var4 - 2][0]) / 2.0F;
         } else if (this.gP[0] - 1 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var10 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F);
         } else {
            if (this.gP[0] - 2 != var4) {
               continue;
            }

            this.eH[0] = 0;
            this.eH[1] = 0;
            var10 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F);
         }

         float var11;
         float var12;
         float var13;
         float var14;
         if (var4 - this.gC[0] > -1 && var4 - this.gC[0] < this.gC[1] + 1) {
            var6 = this.ae[8];
            var11 = (float)this.getWidth() / 2.0F;
            var12 = (float)this.go[var4][0] / 2.0F;
            var13 = (float)(this.gy * var4);
            var14 = (float)this.eh[0];
            var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var11 - var12 + var13 + var14 + var10, (float)(347 - this.go[var4][1]), (float)this.go[var4][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var4][1], 0);
         }

         if (var4 - this.gC[0] >= 0 && var4 - this.gC[0] <= this.gC[1]) {
            var1.setColor(255, 255, 255);
            var2 = this.ag[var4 - this.gC[0]].a();
            var1.drawScaledImage(this.ag[var4 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var4][0] / 2.0F + (float)(this.gy * var4) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F, 30.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F);
            var6 = this.ae[11];
            var14 = (float)this.getWidth() / 2.0F;
            var11 = (float)this.go[var4][0] / 2.0F;
            var12 = (float)(this.gy * var4);
            var13 = (float)this.eh[0];
            var1.drawScaledImage(var6, 310.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var14 - var11 + var12 + var13 + var10, 347.0F - 219.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 310.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 310.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 112.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, var4 - this.gC[0]);
            var6 = this.ae[8];
            float var15 = (float)this.getWidth() / 2.0F;
            var14 = (float)this.go[var4][0] / 2.0F;
            var13 = (float)(this.gy * var4);
            var12 = (float)this.eh[0];
            var11 = 107.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
            var1.drawScaledImage(var6, 57.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var15 - var14 + var13 + var12 + var10 + var11, 347.0F - 88.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 213.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - 213.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 45.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 28);
            var6 = this.ae[0];
            var13 = (float)this.getWidth() / 2.0F;
            var14 = (float)this.go[var4][0] / 2.0F;
            float var16 = (float)(this.gy * var4);
            var12 = (float)this.eh[0];
            var15 = (float)0;
            var11 = 29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
            float var17 = 127.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
            var1.drawScaledImage(var6, (37.0F + (float)0 * (29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var13 - var14 + var16 + var12 + var10 - var15 * var11 + var17, 347.0F - 86.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 55.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 62.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 21);
            var6 = this.ae[5];
            var12 = (float)this.getWidth() / 2.0F;
            var15 = (float)this.go[var4][0] / 2.0F;
            var17 = (float)(this.gy * var4);
            var14 = (float)this.eh[0];
            var11 = (float)0;
            var16 = 29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
            var13 = 78.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
            var1.drawScaledImage(var6, (86.0F + (float)0 * (29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var12 - var15 + var17 + var14 + var10 - var11 * var16 + var13, 347.0F - 75.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 47.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 47.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 28.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 15);
            if (Z[var4 - this.gC[0]] + Z[var4 - this.gC[0]] * this.gS[var4 - this.gC[0]] <= 0) {
               var2 = 500;
            } else {
               var2 = Z[var4 - this.gC[0]] + Z[var4 - this.gC[0]] * this.gS[var4 - this.gC[0]];
            }

            var5 = 0;
            var3 = var2;
            var2 = var5;

            while(true) {
               var6 = this.ae[5];
               var13 = (float)this.getWidth() / 2.0F;
               var12 = (float)this.go[var4][0] / 2.0F;
               var11 = (float)(this.gy * var4);
               var14 = (float)this.eh[0];
               var17 = (float)var2;
               var16 = 29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var15 = 281.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var1.drawScaledImage(var6, (-117.0F + (float)var2 * (29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var13 - var12 + var11 + var14 + var10 - var17 * var16 + var15, 347.0F - 86.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 30.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 30.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, var3 % 10);
               var3 /= 10;
               if (var3 <= 0) {
                  break;
               }

               ++var2;
            }
         }

         var1.setColor(0, 0, 0);
         var1.setAlpha((255 - this.go[var4][0] * 100 / 328 * 255 / 100) * 2);
         var1.drawRectangle((int)((float)(this.getWidth() / 2 - this.go[var4][0] / 2 + this.gy * var4 + this.eh[0]) + var10 + (float)(cC[this.eH[0]] * 328 / 100 / 2)), 347 - this.go[var4][1], this.go[var4][0] - cC[this.eH[0]] * 328 / 100, this.go[var4][1]);
         if (var4 - this.gC[0] >= 0 && this.gG[var4 - this.gC[0]] == 1) {
            var1.setColor(255, 255, 255);
            var1.setAlpha(this.fQ[5]);
            var1.drawRectangle((int)((float)(this.getWidth() / 2 - this.go[var4][0] / 2 + this.gy * var4 + this.eh[0]) + var10), 347 - this.go[var4][1], this.go[var4][0], this.go[var4][1]);
         }
      }

      var1.setImageAlpha(127);
      if (this.gP[2] > 1 - this.gC[0]) {
         var1.drawScaledImageI(this.ae[10], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 171, 0);
      }

      if (this.gP[2] < this.gC[1] + this.gC[2]) {
         var1.setImageOrientation(1);
         var1.drawScaledImageI(this.ae[10], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30))) + this.excessWidth, 171, 0);
      }

      var1.setImageAlpha(255);
      var1.setImageOrientation(0);
      if (this.gP[2] >= 0 && this.gP[2] <= this.gC[1]) {
         var2 = -this.gC[1];
         var4 = this.gC[1];
         var3 = 0;

         do {
            if (this.gP[2] == var3) {
               var1.setImageColor(255, 255, 255);
               var1.setImageAlpha(255);
            } else {
               var1.setImageColor(0, 0, 0);
               var1.setImageAlpha(200);
            }

            var1.drawScaledImageI(this.ae[6], this.getWidth() / 2 - 6 + var2 * 10, 60, 0);
            var2 += 2;
            var5 = var4 - 1;
            ++var3;
            var4 = var5;
         } while(var5 >= 0);
      }

      var1.setImageColor(255, 255, 255);
      var1.setImageAlpha(255);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var6 = this.af[0];
      var2 = this.getWidth() / 2;
      var1.drawScaledImageI(var6, this.fP + var2, 0, 572, 637, 1);
      var2 = 0;
      if (this.fR[0] == 0) {
         var2 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var2 = cv[this.fQ[0]];
      } else {
         var4 = this.fR[0];
      }

      var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 355, 0);
      if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 191, 2);
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
         } else if (this.gQ == 1) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 6);
         } else if (this.gQ == 2) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 2);
         } else if (this.gQ == 3) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 3);
         } else if (this.gQ == 4) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 4);
         } else if (this.gQ == 5) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 5);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 8);
      }

      var6 = this.ae[0];
      var3 = this.fw[5][0];
      var4 = dv[this.fx[5]] / 2;
      int var7 = this.fw[5][1];
      var2 = dv[this.fx[5]] / 2;
      int var8 = this.fw[5][2];
      var5 = dv[this.fx[5]];
      int var9 = this.fw[5][3];
      var1.drawScaledImageI(var6, var3 - var4, var7 - var2, var5 + var8, dv[this.fx[5]] + var9, 9);
      var1.drawScaledImageI(this.ae[0], this.fw[5][0] + 4 - dv[this.fx[5]] / 2, this.fw[5][1] + 17 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eb && this.eE[10] && !this.eE[13]) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var2 = this.aY;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 6, var2 % 10);
         var3 = var2 / 10;
         ++var4;
         var2 = var3;
      } while(var3 > 0);

      var6 = this.ae[0];
      var2 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (633 - var2), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      var6 = this.ae[0];
      var2 = dv[this.fx[14]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (688 - var2), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var6 = this.ae[0];
         var2 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (733 - var2), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var2 = this.aL;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 592, var2 % 10);
         var3 = var2 / 10;
         ++var4;
         var2 = var3;
      } while(var3 > 0);

   }

   boolean i() {
      int var1 = 0;
      int var2 = 0;
      byte var3 = 0;
      boolean var4 = false;
      this.eG = 1;
      int[] var5 = this.bM;
      int var10002 = var5[16]++;
      if (this.bM[15] == 0) {
         var5 = this.eI;
         var5[0] += 10;
         this.z += 800;
         if (this.bM[12] == 0 && this.bM[16] >= 20) {
            this.bM[15] = 1;
            this.bM[16] = 0;
            this.eI[0] = 1000;
         }
      } else if (this.bM[15] == 1) {
         if (this.bM[16] >= this.getLength(cs)) {
            this.bM[15] = 2;
            this.bM[16] = 0;
         }
      } else if (this.bM[15] == 2) {
         if (this.bM[16] >= 80) {
            if (this.aZ == 0) {
               if (this.aZ == 0) {
                  this.bM[15] = 4;
               } else {
                  this.bM[15] = 3;
               }

               for(this.bM[16] = 0; var1 < this.getLength(this.cE[2]); ++var1) {
                  this.ag[var1].a(this.cE[2][var1], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else {
               var5 = this.ei;
               var5[2] -= 10;
               if (this.ei[2] <= -100) {
                  this.ei[2] = -100;
                  if (this.aZ == 0) {
                     this.bM[15] = 4;
                  } else {
                     this.bM[15] = 3;
                  }

                  this.bM[16] = 0;

                  for(var1 = var2; var1 < this.getLength(this.cE[2]); ++var1) {
                     this.ag[var1].a(this.cE[2][var1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            }
         }
      } else if (this.bM[15] == 3) {
         ++this.eP;
         if (this.eP == 1) {
            Sound.getInstance().play(42);
         }

         if (this.eP == 1) {
            this.fw[0][0] = this.getWidth() / 2 - 345 + 116;
            this.fw[0][1] = 472;
            this.fw[0][2] = 168;
            this.fw[0][3] = 89;
            this.fw[1][0] = this.getWidth() / 2 - 345 + 406;
            this.fw[1][1] = 472;
            this.fw[1][2] = 168;
            this.fw[1][3] = 89;
         }

         if (this.eP > this.getLength(eO) - 1) {
            this.eP = this.getLength(eO) - 1;
         }

         if (this.eP >= this.getLength(eO) - 1) {
            if (this.fx[0] >= 1) {
               var5 = this.fx;
               var10002 = var5[0]++;
               if (this.fx[0] > this.getLength(dv) - 1) {
                  this.fx[0] = 0;
                  if (this.aL >= 30) {
                     this.screenTransition();
                     this.aL -= 30;
                     this.eb = true;
                     this.ed = 1;
                     this.eR = 1;
                     this.eP = 0;
                     ++this.hF;
                     if (this.hF >= 999999999) {
                        this.hF = 999999999;
                     }

                     this.ac();
                  } else {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 1;
                  }

                  return var4;
               }
            } else if (this.fx[1] >= 1) {
               var5 = this.fx;
               var10002 = var5[1]++;
               if (this.fx[1] > this.getLength(dv) - 1) {
                  this.fx[1] = 0;
                  this.bM[15] = 4;
                  this.eP = 0;
                  if (this.eQ != 0 && this.bM[0] != 0 && this.ba == 0) {
                     this.ba = 1;
                  }

                  this.bM[24] = 1;
                  var2 = 0;

                  for(var1 = 0; var1 < this.getLength(this.da[this.eQ]) && !aString.equals(this.da[this.eQ][var1][0], "＠"); ++var1) {
                     ++var2;
                  }

                  this.eS = aMath.rand(var2);

                  for(var1 = var3; var1 < this.getLength(this.da[this.eQ][this.eS]); ++var1) {
                     this.ag[var1 + 2].a(this.da[this.eQ][this.eS][var1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            } else if (this.fx[14] >= 1) {
               var5 = this.fx;
               var10002 = var5[14]++;
               if (this.fx[14] > this.getLength(dv) - 1) {
                  this.fx[14] = 0;
                  if (this.bB[8] == 0) {
                     this.screenTransition();
                     this.bB[8] = 1;
                     this.gU = true;

                     for(var1 = 0; var1 < this.getLength(this.gV); ++var1) {
                        this.gV[var1] = 0;
                     }

                     Sound.getInstance().setVolume(50);
                     return var4;
                  } else {
                     if (this.aL >= 900000) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 10000;
                     } else {
                        this.screenTransition();
                        this.menuType = 0;
                        this.j = true;
                     }

                     return var4;
                  }
               }
            } else {
               if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  this.fa = 0;
               } else if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                  this.fa = 1;
               }

               if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  if (!this.gp[0]) {
                     Sound.getInstance().play(10);
                     this.gp[0] = true;
                  }
               } else {
                  this.gp[0] = false;
               }

               if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                  if (!this.gp[1]) {
                     Sound.getInstance().play(10);
                     this.gp[1] = true;
                  }
               } else {
                  this.gp[1] = false;
               }

               if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  var5 = this.fx;
                  var10002 = var5[0]++;
                  Sound.getInstance().play(11);
               } else if (this.S() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                  var5 = this.fx;
                  var10002 = var5[1]++;
                  Sound.getInstance().play(11);
               }

               if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                  if (!this.gp[14]) {
                     Sound.getInstance().play(10);
                     this.gp[14] = true;
                  }
               } else {
                  this.gp[14] = false;
               }

               if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                  Sound.getInstance().play(11);
                  var5 = this.fx;
                  var10002 = var5[14]++;
               }
            }
         }
      } else if (this.bM[15] == 4) {
         ++this.eP;
         if (this.eP == 1) {
            Sound.getInstance().play(42);
         }

         if (this.eP > this.getLength(eO) - 1) {
            this.eP = this.getLength(eO) - 1;
            if (this.S()) {
               this.screenTransition();
               this.eR = 0;
               this.eb = true;
               this.ed = 1;
               return var4;
            }
         }
      }

      var4 = true;
      return var4;
   }

   void j(TextureRenderer var1) {
      var1.setColor(0, 0, 0);
      var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
      var1.drawScaledImageI(this.ae[1], this.excessWidth / 2 + 490, 430, 100, 100, 0);
      var1.drawScaledImageI(this.ae[1], this.excessWidth / 2 + 490, 360, 100, 100, 0);
      var1.setImageOrientation(1);
      var1.drawScaledImageI(this.ae[1], this.excessWidth / 2 + 430, 480, 100, 100, 0);
      var1.setImageOrientation(0);
      int[] var2 = this.gh;
      this.gh[1] = 0;
      var2[0] = 0;
      int[] var3 = this.gh;
      var2 = this.gh;
      int var4 = this.getWidth();
      var2[3] = var4;
      var3[2] = var4;
      var2 = this.gi;
      this.gi[3] = 0;
      var2[0] = 0;
      var2 = this.gi;
      this.gi[2] = 640;
      var2[1] = 640;
      var2 = this.gj;
      this.gj[3] = -16777216;
      var2[0] = -16777216;
      var2 = this.gj;
      this.gj[2] = 838860800;
      var2[1] = 838860800;
      var1.a(this.gh, this.gi, this.gj, 4);
      var1.a(this.gh, this.gi, this.gj, 4);
      var1.setBlendMode(1);
      var1.setColor(255, 0, 0);
      var1.setAlpha(255);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(523.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(465.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(548.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(465.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(548.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(395.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(523.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(395.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(497.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(515.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[0][var4] = (int)(472.0F + 5.0F * aMath.sin((float)(var4 * 45))) + this.excessWidth / 2;
      }

      for(var4 = 0; var4 < this.getLength(this.gl[0]); ++var4) {
         this.gl[1][var4] = (int)(515.0F + 5.0F * aMath.cos((float)(var4 * 45)));
      }

      var1.drawVertices(this.gl[0], this.gl[1], 8);
      var1.setBlendMode(0);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      Texture var11 = this.af[0];
      var4 = this.getWidth() / 2;
      int var5 = this.fP;
      var1.drawScaledImageI(var11, this.eh[0] + var4 + var5, 0, 572, 637, 1);
      var4 = 0;
      if (this.fR[0] == 0) {
         var4 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var4 = cv[this.fQ[0]];
      } else {
         var5 = this.fR[0];
      }

      var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var4, 355, 355, 0);
      if (!this.eE[1] && (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5)) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var4, 355, 191, 2);
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      var1.drawScaledImageI(this.ae[0], 4 - dv[this.fx[5]] / 2, 541 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 95, dv[this.fx[5]] + 95, 9);
      var1.drawScaledImageI(this.ae[0], 8 - dv[this.fx[5]] / 2, 558 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eb && this.fx[0] == 0 && this.fx[1] == 0 && this.fx[2] == 0 && this.fx[3] == 0 && this.fx[4] == 0 && this.fx[14] == 0 && this.fx[15] == 0 && !this.eb && !this.gu && (this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[2], 8, 3, 1);
      int var6;
      if (!this.eE[2] && !this.eE[1]) {
         var1.drawScaledImageI(this.ae[3], this.excessWidth + 422, 114, 512, 280, 2);
         var1.setColor(255, 255, 255);
         var4 = 0;
         var5 = 0;

         while(true) {
            var6 = var4;
            if (var4 >= 5) {
               break;
            }

            if (this.fK == 0) {
               if (aString.equals(this.cL[0][var4], "＠")) {
                  break;
               }
            } else if (this.fK == 1) {
               if (aString.equals(this.cM[0][var4], "＠")) {
                  break;
               }
            } else if (this.fK == 2) {
               if (aString.equals(this.cN[0][var4], "＠")) {
                  break;
               }
            } else if (this.fK == 3) {
               if (aString.equals(this.cO[0][var4], "＠")) {
                  break;
               }
            } else if (this.fK == 4) {
               if (aString.equals(this.cP[0][var4], "＠")) {
                  break;
               }
            } else {
               if (this.aX == 0) {
                  var4 = 2;
               } else {
                  var4 = 0;
               }

               if (this.fJ < this.getLength(this.cL) - var4) {
                  if (aString.equals(this.cL[this.fJ][var6], "＠")) {
                     break;
                  }
               } else {
                  int var7;
                  if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM)) {
                     var7 = this.getLength(this.cL);
                     if (aString.equals(this.cM[this.fJ - (var7 - var4)][var6], "＠")) {
                        break;
                     }
                  } else {
                     int var8;
                     if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM) + this.getLength(this.cN)) {
                        var8 = this.getLength(this.cL);
                        var7 = this.getLength(this.cM);
                        if (aString.equals(this.cN[this.fJ - (var8 - var4 + var7)][var6], "＠")) {
                           break;
                        }
                     } else {
                        int var9;
                        if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM) + this.getLength(this.cN) + this.getLength(this.cO)) {
                           var9 = this.getLength(this.cL);
                           var8 = this.getLength(this.cM);
                           var7 = this.getLength(this.cN);
                           if (aString.equals(this.cO[this.fJ - (var9 - var4 + var8 + var7)][var6], "＠")) {
                              break;
                           }
                        } else {
                           var7 = this.getLength(this.cL);
                           var9 = this.getLength(this.cM);
                           var8 = this.getLength(this.cN);
                           int var10 = this.getLength(this.cO);
                           if (aString.equals(this.cP[this.fJ - (var7 - var4 + var9 + var8 + var10)][var6], "＠")) {
                              break;
                           }
                        }
                     }
                  }
               }
            }

            ++var4;
            var5 = var6 + 1;
         }

         var6 = 0;

         for(var4 = 0; var6 < var5 - 1; var4 += 180) {
            ++var6;
         }

         for(var6 = 0; var6 < var5; ++var6) {
            var1.drawScaledImage(this.ag[var6], this.excessWidth + 678, var6 * 36 + 223 - var4 / 10, 1);
         }
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var4 = this.aY;
      var5 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var5 * 29 + this.excessWidth, 6, var4 % 10);
         var6 = var4 / 10;
         ++var5;
         var4 = var6;
      } while(var6 > 0);

      var11 = this.ae[0];
      var4 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var11, this.excessWidth + (633 - var4), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      if (this.be >= 1) {
         var11 = this.ae[0];
         var4 = dv[this.fx[15]] / 2;
         var1.drawScaledImageI(var11, this.excessWidth + (681 - var4), 23 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 27, dv[this.fx[15]] + 26, 18);
      }

      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      if (this.be >= 1) {
         var11 = this.ae[0];
         var4 = dv[this.fx[13]] / 2;
         var1.drawScaledImageI(var11, this.excessWidth + (344 - var4), 590 - dv[this.fx[13]] / 2, dv[this.fx[13]] + 247, dv[this.fx[13]] + 48, 22);
         if (this.be == 1 && this.fQ[3] % 8 / 4 == 0) {
            var1.drawScaledImageI(this.am, this.excessWidth + 312, 550, 80, 80, 0);
         }
      }

      var11 = this.ae[0];
      var4 = dv[this.fx[14]] / 2;
      var1.drawScaledImageI(var11, this.excessWidth + (688 - var4), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var11 = this.ae[0];
         var4 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var11, this.excessWidth + (733 - var4), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var4 = this.aL;
      var5 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var5 * 29 + this.excessWidth, 592, var4 % 10);
         var6 = var4 / 10;
         ++var5;
         var4 = var6;
      } while(var6 > 0);

      var4 = 0;

      for(var5 = 0; var5 < this.fL; ++var5) {
         if (this.by[var5] >= 1) {
            var1.drawScaledImageI(this.af[2], 20 - this.gc[var4] - dv[this.fx[var5]] / 2, var4 * 72 + 75 + var4 * 20 - dv[this.fx[var5]] / 2, dv[this.fx[var5]] + 381, dv[this.fx[var5]] + 72, 3);
            var1.drawScaledImageI(this.ae[4], 20 - this.gc[var4] + 63 - dv[this.fx[var5]] / 2, var4 * 72 + 75 + var4 * 20 + 8 - dv[this.fx[var5]] / 2, dv[this.fx[var5]] + 254, dv[this.fx[var5]] + 55, var5 + 2);
            if (!this.eE[0] && !this.eE[2] && !this.eb && this.fx[5] == 0 && !this.gu && this.R() && this.b(this.fw[var5][0], this.fw[var5][1], this.fw[var5][2], this.fw[var5][3]) && this.fI == var5) {
               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  if (this.fx[var5] == 0) {
                     var1.drawScaledImageI(this.af[2], 20 - this.gc[var4], var4 * 20 + var4 * 72 + 75, 381, 72, 5);
                  }
               } else if (this.fx[var5] == 0) {
                  var1.drawScaledImageI(this.af[2], 20 - this.gc[var4], var4 * 20 + var4 * 72 + 75, 381, 72, 4);
               }
            }

            if ((this.eE[1] || this.fx[var5] >= 1) && this.fI == var5) {
               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[2], 20 - this.gc[var4], var4 * 20 + var4 * 72 + 75, 381, 72, 5);
               } else {
                  var1.drawScaledImageI(this.af[2], 20 - this.gc[var4], var4 * 20 + var4 * 72 + 75, 381, 72, 4);
               }
            }

            if (this.by[var5] == 1 && this.fQ[3] % 8 / 4 == 0 && var5 >= 1) {
               var1.drawScaledImageI(this.am, 20 - this.gc[var4] + 381 - 32 - 15, var4 * 72 + 75 + var4 * 20 - 40, 80, 80, 0);
            }

            ++var4;
         }
      }

   }

   boolean j() {
      boolean var1 = false;
      this.eG = 1;
      if (this.bM[15] != 0) {
         this.l();
      } else {
         this.ek[0] = 0;
      }

      int[] var2 = this.bM;
      int var10002 = var2[16]++;
      if (this.bM[15] == 0) {
         this.z += 800;
         var2 = this.eI;
         var2[0] += 10;
         if (this.bM[12] == 0 && this.bM[16] >= 20) {
            this.bM[15] = 1;
            this.bM[16] = 0;
            this.eI[0] = 1000;
         }
      } else if (this.bM[15] >= 1 && this.bM[15] <= 2) {
         if (this.bM[16] >= this.getLength(cq)) {
            var2 = this.bM;
            var10002 = var2[15]++;
            this.bM[16] = 0;
         }
      } else if (this.bM[15] == 3) {
         this.fw[4][0] = this.getWidth() / 2 - 190;
         this.fw[4][1] = 640;
         this.fw[4][2] = 381;
         this.fw[4][3] = 88;
         var2 = this.eI;
         var2[1] += 20;
         if (this.eI[1] >= 96) {
            this.eI[1] = 96;
            this.bM[15] = 7;
         }

         this.fw[4][1] = 640 - this.eI[1] - 8 + this.eZ;
      } else if (this.bM[15] == 7) {
         if (this.R()) {
            if (this.eE[0] || this.eE[4]) {
               this.eE[1] = true;
            }
         } else if (!this.S()) {
            this.eE[1] = false;
         }

         if (this.fx[0] >= 1) {
            var2 = this.fx;
            var10002 = var2[0]++;
            if (this.fx[0] > this.getLength(dv) - 1) {
               this.fx[0] = 0;
               this.screenTransition();
               this.eb = true;
               this.ed = 1;
               return var1;
            }
         } else if (this.fx[10] >= 1) {
            var2 = this.fx;
            var10002 = var2[10]++;
            if (this.fx[10] > this.getLength(dv) - 1) {
               this.fx[10] = 0;
               this.screenTransition();
               this.j = true;
               this.menuType = 5;
               return var1;
            }
         } else if (this.fx[11] >= 1) {
            var2 = this.fx;
            var10002 = var2[11]++;
            if (this.fx[11] > this.getLength(dv) - 1) {
               this.zoom.reset();
               this.fx[11] = 0;
               if (!MyUtility.isConnected()) {
                  MyUtility.getInstance().addButton(MyUtility.getString("network_unavailable"));
               } else {
                  String var3 = MyUtility.getString("twitter_txt2");
                  Twitter.getInstance().tweet(String.format("%s %s %s", var3, MyUtility.getString("url_abbr"), MyUtility.getString("twitter_hash")), null, null);
               }
            }
         } else if (!this.eE[0] && this.ek[0] == 0 && !this.eE[1] && !this.eE[2] && !this.eE[3]) {
            if (this.R() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3])) {
               if (!this.gp[4]) {
                  Sound.getInstance().play(10);
                  this.gp[4] = true;
               }
            } else {
               this.gp[4] = false;
            }

            if (this.R() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
               if (!this.gp[10]) {
                  Sound.getInstance().play(10);
                  this.gp[10] = true;
               }
            } else {
               this.gp[10] = false;
            }

            if (Twitter.getInstance().isEnabled()) {
               if (this.R() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
                  if (!this.gp[11]) {
                     Sound.getInstance().play(10);
                     this.gp[11] = true;
                  }
               } else {
                  this.gp[11] = false;
               }
            }

            if (this.S() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3])) {
               var2 = this.fx;
               var10002 = var2[0]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[10][0], this.fw[10][1], this.fw[10][2], this.fw[10][3])) {
               var2 = this.fx;
               var10002 = var2[10]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3]) && Twitter.getInstance().isEnabled()) {
               var2 = this.fx;
               var10002 = var2[11]++;
               Sound.getInstance().play(11);
            }
         }
      }

      var1 = true;
      return var1;
   }

   void k(TextureRenderer var1) {
      var1.setColor(220, 223, 209);
      var1.drawRectangle(0, 0, this.getWidth(), this.getHeight());
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 3156, this.dK[0] + 12, 258, 412, 10);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 2782, this.dK[0] + 986, 153, 153, 8);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 2680, this.dK[0] + 1023, 86, 86, 7);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 2271, this.dK[0] + 1068, 664, 464, 0);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 1363, this.dK[0] + 1485, 1572, 1155, 1);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 1010, this.dK[0] + 1852, 135, 95, 9);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 11, this.dK[0] + 1000, 292, 135, 3);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 360, this.dK[0] + 1043, 89, 83, 5);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 873, this.dK[0] + 785, 316, 230, 2);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 1197, this.dK[0] + 741, 76, 55, 6);
      var1.drawScaledImageI(this.ae[6], this.dJ[0] + 1280, this.dK[0] + 581, 323, 153, 4);
      var1.drawScaledImageI(this.ae[7], this.dJ[0] + 3082, this.dK[0] + 0, 70, 113, 48);
      var1.drawScaledImageI(this.ae[7], this.dJ[0] + 2321, this.dK[0] + 308, 1569, 701, 49);
      var1.drawScaledImageI(this.ae[11], this.dJ[0] + 90, this.dK[0] + 2018, 1289, 781, 0);
      var1.drawScaledImageI(this.ae[11], this.dJ[0] + 12, this.dK[0] + 2336, 172, 172, 4);
      var1.drawScaledImageI(this.ae[11], this.dJ[0] + 238, this.dK[0] + 2785, 280, 147, 1);
      var1.drawScaledImageI(this.ae[11], this.dJ[0] + 183, this.dK[0] + 2945, 236, 147, 2);
      var1.drawScaledImageI(this.ae[11], this.dJ[0] + 163, this.dK[0] + 2912, 30, 27, 3);

      int var2;
      int var4;
      int var5;
      int var6;
      int var7;
      int var8;
      int var9;
      int var10;
      float var11;
      for(var2 = 0; var2 < 45; ++var2) {
         if (this.br[this.eQ][var2] >= 1) {
            var8 = cm[var2];
            var4 = cm[var2 + 1];
            var11 = aMath.atan2((float)ck[var4][1] - (float)ck[var8][1], (float)ck[var4][0] - (float)ck[var8][0]);

            for(var5 = 0; var5 < 200; ++var5) {
               var1.drawScaledImageI(this.ae[9], (int)((float)(ck[var8][0] + this.dJ[0]) + (float)(var5 * 20 + 24) * aMath.cos(var11) - 8.0F), (int)((float)(ck[var8][1] + this.dK[0]) + (float)(var5 * 20 + 24) * aMath.sin(var11) - 8.0F), 16, 16, 1);
               var10 = (int)((float)(ck[var8][0] + this.dJ[0]) + (float)(var5 * 20 + 24) * aMath.cos(var11));
               int var12 = (int)((float)(ck[var8][1] + this.dK[0]) + (float)(var5 * 20 + 24) * aMath.sin(var11));
               var7 = ck[var4][0];
               var9 = this.dJ[0];
               var6 = ck[var4][1];
               if (this.d(var10, var12, 8, var9 + var7, this.dK[0] + var6, 20)) {
                  break;
               }
            }
         }
      }

      for(var2 = 0; var2 < 48; ++var2) {
         var5 = cm[var2];
         var1.setImageAlpha(255);
         var1.setImageOrientation(0);
         if (var2 == this.bq[this.eQ]) {
            var1.drawScaledImageI(this.ae[9], ck[var5][0] + this.dJ[0] - 23, ck[var5][1] + this.dK[0] - 23, 47, 47, 4);
         } else if (this.br[this.eQ][var2] >= 1) {
            var1.drawScaledImageI(this.ae[9], ck[var5][0] + this.dJ[0] - 20, ck[var5][1] + this.dK[0] - 20, 41, 41, 2);
            var1.setImageOrientation(0);
         }
      }

      var1.setImageAlpha(63);
      var1.drawScaledImageI(this.ae[1], this.dM[this.dS] + this.dJ[0] - 1, this.dN[this.dS] + this.dK[0] + 40, 59, 26, 6);
      var1.setImageAlpha(255);
      if (this.dT == 0) {
         var1.setImageOrientation(0);
      } else {
         var1.setImageOrientation(1);
      }

      Texture var3;
      if (this.fQ[3] % 16 / 4 == 0) {
         var3 = this.ae[1];
         var2 = this.dM[this.dS];
         var4 = this.dJ[0];
         var5 = this.dN[this.dS];
         var1.drawScaledImageI(var3, var4 + var2, this.dK[0] + var5, 57, 57, 3);
      } else if (this.fQ[3] % 16 / 4 == 1) {
         var3 = this.ae[1];
         var4 = this.dM[this.dS];
         var5 = this.dJ[0];
         var2 = this.dN[this.dS];
         var1.drawScaledImageI(var3, var5 + var4, this.dK[0] + var2, 57, 57, 4);
      } else if (this.fQ[3] % 16 / 4 == 2) {
         var3 = this.ae[1];
         var2 = this.dM[this.dS];
         var4 = this.dJ[0];
         var5 = this.dN[this.dS];
         var1.drawScaledImageI(var3, var4 + var2, this.dK[0] + var5, 57, 57, 3);
      } else if (this.fQ[3] % 16 / 4 == 3) {
         var3 = this.ae[1];
         var2 = this.dM[this.dS];
         var5 = this.dJ[0];
         var4 = this.dN[this.dS];
         var1.drawScaledImageI(var3, var5 + var2, this.dK[0] + var4, 57, 57, 5);
      } else if (this.fQ[3] % 16 / 4 == 3) {
         var3 = this.ae[1];
         var5 = this.dM[this.dS];
         var2 = this.dJ[0];
         var4 = this.dN[this.dS];
         var1.drawScaledImageI(var3, var2 + var5, this.dK[0] + var4, 57, 57, 3);
      }

      var1.setImageOrientation(0);
      if (!this.eE[2] && this.dY == 0) {
         var3 = this.ae[9];
         var2 = dv[this.fx[0]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth + (640 - var2), 411 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 304, dv[this.fx[0]] + 74, 10);
         var3 = this.ae[9];
         var2 = dv[this.fx[0]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth + (678 - var2), 417 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 231, dv[this.fx[0]] + 62, 11);
         if (this.aZ == 0 && this.aM < this.bG[this.dI[2]] + X[this.eQ]) {
            var1.setImageColor(0, 0, 0);
            var1.setImageAlpha(127);
            var3 = this.ae[9];
            var2 = dv[this.fx[0]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth + (640 - var2), 411 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 304, dv[this.fx[0]] + 74, 10);
            var1.setImageColor(255, 255, 255);
            var1.setImageAlpha(255);
         }

         var1.drawScaledImageI(this.ae[9], this.excessWidth + 640, 411, 304, 74, this.fQ[3] % 4 / 2 + 5);
         var3 = this.ae[9];
         var2 = dv[this.fx[16]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth + (667 - var2), 362 - dv[this.fx[16]] / 2, dv[this.fx[16]] + 272, dv[this.fx[16]] + 44, 39);
         if (this.aZ != 0) {
            var3 = this.ae[0];
            var2 = dv[this.fx[16]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth + (899 - var2), 358 - dv[this.fx[16]] / 2, dv[this.fx[16]] + 27, dv[this.fx[16]] + 26, 18);
         }

         var2 = 0;

         for(var5 = 0; var5 < 10; ++var5) {
            var2 += cB[10] * this.bO[var5][10] / 100;
         }

         var5 = this.aM;
         if (var5 >= var2 + ad[10] + this.bx[10] * 10) {
            var1.setImageColor(128, 255, 0);
         } else {
            var1.setImageColor(255, 255, 255);
         }

         var2 = 0;

         label594:
         while(true) {
            var5 /= 10;
            if (var5 <= 0) {
               var5 = this.aM;

               while(true) {
                  var3 = this.ae[9];
                  var4 = dv[this.fx[16]] / 2;
                  var1.drawScaledImageI(var3, this.excessWidth + (861 - var2 * 8 - 9 - var4), 371 - dv[this.fx[16]] / 2, dv[this.fx[16]] + 18, dv[this.fx[16]] + 27, var5 % 10 + 14);
                  var5 /= 10;
                  if (var5 <= 0) {
                     break label594;
                  }

                  var2 += 2;
               }
            }

            --var2;
         }
      }

      var1.setImageColor(255, 255, 255);

      float var13;
      float var14;
      float var15;
      float var16;
      for(var2 = 2; var2 < this.gC[0] + this.gC[1]; ++var2) {
         if (this.dI[0] == var2) {
            var11 = (float)(-(243 - this.go[var2][0]));
         } else if (this.dI[0] + 1 == var2) {
            var11 = (float)(243 - this.go[var2][0]);
         } else if (this.dI[0] + 2 == var2) {
            var11 = (float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 - 1][0]) / 2.0F;
         } else if (this.dI[0] + 3 == var2) {
            var11 = (float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 - 1][0]) / 2.0F + (float)(243 - this.go[var2 - 2][0]) / 2.0F;
         } else if (this.dI[0] - 1 == var2) {
            var11 = -((float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 + 1][0]) / 2.0F);
         } else {
            if (this.dI[0] - 2 != var2) {
               continue;
            }

            var11 = -((float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 + 1][0]) / 2.0F);
         }

         var1.setImageAlpha(255 - (255 - this.go[var2][0] * 100 / 243 * 255 / 100) * 2);
         var1.drawScaledImage(this.ae[9], (float)this.getWidth() / 2.0F - (float)this.go[var2][0] / 2.0F + (float)(this.gy * var2) + (float)this.eh[0] + var11, 66.0F, (float)this.go[var2][0], (float)this.go[var2][1], 0);
         var3 = this.ae[7];
         var13 = (float)this.getWidth() / 2.0F;
         var14 = (float)this.go[var2][0] / 2.0F;
         var15 = (float)(this.gy * var2);
         var16 = (float)this.eh[0];
         var1.drawScaledImage(var3, 10.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var13 - var14 + var15 + var16 + var11, 19.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 224.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 45.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, cm[var2 - 2]);
         var1.setImageAlpha(255);
         var3 = this.ae[9];
         var13 = (float)this.getWidth() / 2.0F;
         var14 = (float)this.go[var2][0] / 2.0F;
         var15 = (float)(this.gy * var2);
         var16 = (float)this.eh[0];
         var1.drawScaledImage(var3, 37.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var13 - var14 + var15 + var16 + var11, 84.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 73.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 30.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 27);
         var8 = this.bG[var2 - 2];
         var4 = X[this.eQ];
         var5 = 0;
         var4 += var8;

         do {
            var3 = this.ae[9];
            var15 = (float)this.getWidth() / 2.0F;
            var14 = (float)this.go[var2][0] / 2.0F;
            var16 = (float)(this.gy * var2);
            var13 = (float)this.eh[0];
            var1.drawScaledImage(var3, (float)(182 - var5 * 17) * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var15 - var14 + var16 + var13 + var11, 84.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 18.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 27.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, var4 % 10 + 29);
            var4 /= 10;
            ++var5;
         } while(var4 > 0);

         var1.drawScaledImage(this.ae[9], (float)this.getWidth() / 2.0F - (float)this.go[var2][0] / 2.0F + (float)(this.gy * var2) + (float)this.eh[0] + var11 + (float)(182 - var5 * 17) * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 84.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 18.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 27.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 28);
         if (!this.eE[2] && this.dY == 0) {
            var4 = this.br[this.eQ][var2 - 2];
            if (var2 - 2 == this.dI[2] && !this.eE[9] && var4 >= 1) {
               if (this.p == 0) {
                  var3 = this.ae[9];
                  var13 = (float)this.getWidth() / 2.0F;
                  var16 = (float)this.go[var2][0] / 2.0F;
                  var15 = (float)(this.gy * var2);
                  var14 = (float)this.eh[0];
                  var1.drawScaledImage(var3, 42.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var13 - var16 + var15 + var14 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 64.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 29.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 12);
                  var3 = this.ae[9];
                  var13 = (float)this.getWidth() / 2.0F;
                  var15 = (float)this.go[var2][0] / 2.0F;
                  var16 = (float)(this.gy * var2);
                  var14 = (float)this.eh[0];
                  var1.drawScaledImage(var3, 168.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var13 - var15 + var16 + var14 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 28.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 29.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 13);
                  var5 = 0;

                  while(true) {
                     var3 = this.ae[9];
                     var14 = (float)this.getWidth() / 2.0F;
                     var15 = (float)this.go[var2][0] / 2.0F;
                     var13 = (float)(this.gy * var2);
                     var16 = (float)this.eh[0];
                     var1.drawScaledImage(var3, (float)(148 - var5 * 17) * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var14 - var15 + var13 + var16 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 18.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 27.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, var4 % 10 + 14);
                     var4 /= 10;
                     if (var4 <= 0) {
                        break;
                     }

                     ++var5;
                  }
               } else if (this.p == 1) {
                  var3 = this.ae[9];
                  var13 = (float)this.getWidth() / 2.0F;
                  var15 = (float)this.go[var2][0] / 2.0F;
                  var16 = (float)(this.gy * var2);
                  var14 = (float)this.eh[0];
                  var1.drawScaledImage(var3, 45.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var13 - var15 + var16 + var14 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 64.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 29.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 12);
                  var3 = this.ae[9];
                  var15 = (float)this.getWidth() / 2.0F;
                  var13 = (float)this.go[var2][0] / 2.0F;
                  var16 = (float)(this.gy * var2);
                  var14 = (float)this.eh[0];
                  var1.drawScaledImage(var3, 168.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var15 - var13 + var16 + var14 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 28.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 29.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 13);
                  var5 = 0;

                  while(true) {
                     var3 = this.ae[9];
                     var14 = (float)this.getWidth() / 2.0F;
                     var16 = (float)this.go[var2][0] / 2.0F;
                     var15 = (float)(this.gy * var2);
                     var13 = (float)this.eh[0];
                     var1.drawScaledImage(var3, (float)(182 - var5 * 17) * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var14 - var16 + var15 + var13 + var11, 116.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 18.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 27.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, var4 % 10 + 14);
                     var4 /= 10;
                     if (var4 <= 0) {
                        break;
                     }

                     ++var5;
                  }
               }
            }
         }
      }

      for(var2 = 2; var2 < this.gC[0] + this.gC[1]; ++var2) {
         if (this.dI[0] == var2) {
            var11 = (float)(-(243 - this.go[var2][0]));
         } else if (this.dI[0] + 1 == var2) {
            var11 = (float)(243 - this.go[var2][0]);
         } else if (this.dI[0] + 2 == var2) {
            var11 = (float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 - 1][0]) / 2.0F;
         } else if (this.dI[0] + 3 == var2) {
            var11 = (float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 - 1][0]) / 2.0F + (float)(243 - this.go[var2 - 2][0]) / 2.0F;
         } else if (this.dI[0] - 1 == var2) {
            var11 = -((float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 + 1][0]) / 2.0F);
         } else {
            if (this.dI[0] - 2 != var2) {
               continue;
            }

            var11 = -((float)(243 - this.go[var2][0]) + (float)(243 - this.go[var2 + 1][0]) / 2.0F);
         }

         if (this.bq[0] >= 7) {
            if (this.bs[this.eQ][cm[var2 - 2]] == 1) {
               var3 = this.ae[9];
               var13 = (float)this.getWidth() / 2.0F;
               var14 = (float)this.go[var2][0] / 2.0F;
               var15 = (float)(this.gy * var2);
               var16 = (float)this.eh[0];
               var1.drawScaledImage(var3, 203.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var11 + var13 - var14 + var15 + var16, -9.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 47.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 47.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 7);
            } else if (this.bs[this.eQ][cm[var2 - 2]] == 2) {
               var3 = this.ae[9];
               var15 = (float)this.getWidth() / 2.0F;
               var14 = (float)this.go[var2][0] / 2.0F;
               var16 = (float)(this.gy * var2);
               var13 = (float)this.eh[0];
               var1.drawScaledImage(var3, 203.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var11 + var15 - var14 + var16 + var13, -9.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 47.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 47.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 8);
            } else if (this.bs[this.eQ][cm[var2 - 2]] == 3) {
               var3 = this.ae[9];
               var16 = (float)this.getWidth() / 2.0F;
               var13 = (float)this.go[var2][0] / 2.0F;
               var15 = (float)(this.gy * var2);
               var14 = (float)this.eh[0];
               var1.drawScaledImage(var3, 203.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F + var11 + var16 - var13 + var15 + var14, -9.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F + 66.0F, 47.0F * ((float)this.go[var2][0] * 100.0F / 243.0F) / 100.0F, 47.0F * ((float)this.go[var2][1] * 100.0F / 81.0F) / 100.0F, 9);
            }
         }

         var1.setImageAlpha(255);
      }

      var1.setImageAlpha(127);
      if (!this.gN) {
         if (this.dI[2] >= 1) {
            var1.drawScaledImageI(this.ae[10], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[3] * 30))), 58, 0);
         }

         if (this.dI[2] <= this.gC[1] - 2) {
            var1.setImageOrientation(1);
            var1.drawScaledImageI(this.ae[10], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[3] * 30))) + this.excessWidth, 58, 0);
         }
      }

      var1.setImageOrientation(0);
      var1.setImageAlpha(255);
      if (this.be >= 1 && !this.gN) {
         for(var4 = 0; var4 < 6; ++var4) {
            if (!this.eM[var4]) {
               var3 = this.ae[7];
               var2 = dv[this.eK[var4]] / 2;
               var1.drawScaledImageI(var3, this.excessWidth + (var4 * 88 + 447 - var2), 500 - dv[this.eK[var4]] / 2, dv[this.eK[var4]] + 58, dv[this.eK[var4]] + 58, var4 + 56);
            } else {
               var3 = this.ae[7];
               var2 = dv[this.eK[var4]] / 2;
               var1.drawScaledImageI(var3, this.excessWidth + (var4 * 88 + 447 - var2), 500 - dv[this.eK[var4]] / 2, dv[this.eK[var4]] + 58, dv[this.eK[var4]] + 58, var4 + 50);
            }

            var1.setImageAlpha(63);
            var1.drawScaledImageI(this.ae[7], this.excessWidth + var4 * 88 + 436, 559, 80, 22, 63);
            var1.setImageAlpha(255);
            if (!this.eM[var4]) {
               var8 = this.bA[var4];
               var2 = 1;
               var5 = 10;
            } else {
               var8 = this.bA[var4];
               var2 = 1;
               var5 = 10;
               --var8;
            }

            while(var5 <= var8) {
               var5 *= 10;
               --var2;
            }

            var1.drawScaledImageI(this.ae[13], var4 * 88 + 476 + (var2 - 2) * 6 - 7 + this.excessWidth, 561, 102);

            for(var5 /= 10; var5 >= 1; var5 /= 10) {
               var1.drawScaledImageI(this.ae[13], var4 * 88 + 476 + var2 * 6 - 7 + this.excessWidth, 561, var8 / var5 % 10 + 57);
               var2 += 2;
            }
         }
      }

      if (this.be >= 1) {
         if (!this.dV && this.gA[0] < 1) {
            if (this.ct >= 1) {
               var1.setColor(255, 255, 255, 216);
               var1.drawRectangle(this.excessWidth + 242, 323, 710, 159);
               var1.setImageAlpha(216);
               var1.drawScaledImageI(this.ae[7], this.dW * 88 + 460 + this.excessWidth, 482, 65);
               var1.setImageAlpha(255);
               var1.setColor(255, 255, 255);
               var1.setColor(255, 0, 0);

               for(var2 = 0; var2 < this.getLength(this.cE[1]) && !aString.equals(this.cE[1][var2], "＠"); ++var2) {
                  var1.drawScaledImage(this.ag[var2 + 10], this.excessWidth + 597, var2 * 36 + 421 - 108 + 21, 1);
               }
            }
         } else {
            if (this.dW == 1 && this.bb == 0) {
               var1.setColor(0, 0, 0, 216);
               var1.fillRect(242.0F + (float)this.excessWidth, 281.0F, 710.0F, 42.0F);
               var1.setColor(255, 0, 0);

               for(var2 = 0; var2 < this.getLength(this.cE[15]) && !aString.equals(this.cE[15][var2], "＠"); ++var2) {
                  var1.drawScaledImage(this.ag[var2 + 20], this.excessWidth + 597, 287, 1);
               }
            } else if (this.bA[this.dW] <= 0) {
               var1.setColor(0, 0, 0, 216);
               var1.fillRect(242.0F + (float)this.excessWidth, 281.0F, 710.0F, 42.0F);
               var1.setColor(255, 0, 0);

               for(var2 = 0; var2 < this.getLength(this.cE[1]) && !aString.equals(this.cE[1][var2], "＠"); ++var2) {
                  var1.drawScaledImage(this.ag[var2 + 10], this.excessWidth + 597, 287, 1);
               }
            }

            var1.setColor(255, 255, 255, 216);
            var1.fillRect(242.0F + (float)this.excessWidth, 323.0F, 710.0F, 159.0F);
            var1.setImageAlpha(216);
            var1.drawScaledImageI(this.ae[7], this.dW * 88 + 460 + this.excessWidth, 482, 65);
            var1.setImageAlpha(255);
            var1.setColor(0, 0, 0);

            for(var2 = 0; var2 < 4; ++var2) {
               if (var2 == 0) {
                  var1.drawScaledImage(this.ag[var2], this.excessWidth + 597, var2 * 36 + 421 - 108 + 21, 1);
               } else if (!aString.equals(this.dd[this.dW][var2 - 1], "＠")) {
                  var1.drawScaledImage(this.ag[var2], this.excessWidth + 597, var2 * 36 + 421 - 108 + 21, 1);
               }
            }
         }
      }

      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var3 = this.af[0];
      var2 = this.getWidth() / 2;
      var1.drawScaledImageI(var3, this.fP + var2, 0, 572, 637, 1);
      short var17 = 0;
      var2 = var17;
      if (this.dY == 0) {
         if (this.fR[0] == 0) {
            var2 = cu[this.fQ[0]];
         } else if (this.fR[0] == 1) {
            var2 = cv[this.fQ[0]];
         } else {
            var2 = this.fR[0];
            var2 = var17;
         }
      }

      if (this.dY == 1) {
         var17 = 312;
         short var18;
         if (this.p == 0) {
            label445: {
               if (this.fQ[0] != 2 && this.fQ[0] != 3 && this.fQ[0] != 6 && this.fQ[0] != 7 && this.fQ[0] != 10 && this.fQ[0] != 11 && this.fQ[0] != 14 && this.fQ[0] != 15 && this.fQ[0] != 18) {
                  var18 = var17;
                  if (this.fQ[0] != 19) {
                     break label445;
                  }
               }

               var18 = 308;
            }
         } else {
            var18 = var17;
            if (this.p == 1) {
               label649: {
                  if (this.fQ[0] != 2 && this.fQ[0] != 3 && this.fQ[0] != 6 && this.fQ[0] != 7 && this.fQ[0] != 10 && this.fQ[0] != 11 && this.fQ[0] != 14) {
                     var18 = var17;
                     if (this.fQ[0] != 15) {
                        break label649;
                     }
                  }

                  var18 = 308;
               }
            }
         }

         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var18, 355, 355, 0);
         if (this.fQ[0] >= 2) {
            if (this.p == 0) {
               if (this.fQ[0] - 2 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 - 28, -1, 504, 504, 0);
               } else if (this.fQ[0] - 2 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 35, 62, 378, 378, 0);
               } else if (this.fQ[0] - 2 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 98, 125, 252, 252, 0);
               } else if (this.fQ[0] - 2 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 161, 188, 126, 126, 0);
               }
            } else if (this.p == 1) {
               if (this.fQ[0] - 2 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 - 244, -1, 980, 504, 0);
               } else if (this.fQ[0] - 2 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 - 122, 62, 735, 378, 0);
               } else if (this.fQ[0] - 2 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 1, 125, 490, 252, 0);
               } else if (this.fQ[0] - 2 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 123, 188, 245, 126, 0);
               }
            }
         }

         if (this.fQ[0] >= 6) {
            if (this.p == 0) {
               if (this.fQ[0] - 6 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 100, -1, 504, 504, 1);
               } else if (this.fQ[0] - 6 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 163, 62, 378, 378, 1);
               } else if (this.fQ[0] - 6 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 226, 125, 252, 252, 1);
               } else if (this.fQ[0] - 6 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 289, 188, 126, 126, 1);
               }
            } else if (this.p == 1) {
               if (this.fQ[0] - 6 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 - 191, -1, 1500, 504, 1);
               } else if (this.fQ[0] - 6 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 - 4, 62, 1125, 378, 1);
               } else if (this.fQ[0] - 6 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 184, 125, 750, 252, 1);
               } else if (this.fQ[0] - 6 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 371, 188, 375, 126, 1);
               }
            }
         }

         if (this.fQ[0] >= 10) {
            if (this.p == 0) {
               if (this.fQ[0] - 10 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 228, -1, 504, 504, 2);
               } else if (this.fQ[0] - 10 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 291, 62, 378, 378, 2);
               } else if (this.fQ[0] - 10 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 354, 125, 252, 252, 2);
               } else if (this.fQ[0] - 10 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 417, 188, 126, 126, 2);
               }
            } else if (this.p == 1) {
               if (this.fQ[0] - 10 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 683, -1, 176, 504, 2);
               } else if (this.fQ[0] - 10 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 705, 62, 132, 378, 2);
               } else if (this.fQ[0] - 10 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 727, 125, 88, 252, 2);
               } else if (this.fQ[0] - 10 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 749, 188, 44, 126, 2);
               }
            }
         }

         if (this.fQ[0] >= 14) {
            if (this.p == 0) {
               if (this.fQ[0] - 14 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 356, -1, 504, 504, 3);
               } else if (this.fQ[0] - 14 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 419, 62, 378, 378, 3);
               } else if (this.fQ[0] - 14 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 482, 125, 252, 252, 3);
               } else if (this.fQ[0] - 14 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 545, 188, 126, 126, 3);
               }
            } else if (this.p == 1) {
               if (this.fQ[0] - 14 == 0) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 727, -1, 176, 504, 3);
               } else if (this.fQ[0] - 14 == 1) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 749, 62, 132, 378, 3);
               } else if (this.fQ[0] - 14 == 2) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 771, 125, 88, 252, 3);
               } else if (this.fQ[0] - 14 >= 3) {
                  var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 793, 188, 44, 126, 3);
               }
            }
         }

         if (this.fQ[0] >= 18 && this.p == 0) {
            if (this.fQ[0] - 18 == 0) {
               var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 484, -1, 504, 504, 4);
            } else if (this.fQ[0] - 18 == 1) {
               var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 547, 62, 378, 378, 4);
            } else if (this.fQ[0] - 18 == 2) {
               var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 610, 125, 252, 252, 4);
            } else if (this.fQ[0] - 18 >= 3) {
               var1.drawScaledImageI(this.ae[12], this.excessWidth / 2 + 673, 188, 126, 126, 4);
            }
         }
      } else {
         if (this.eE[2]) {
            var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 355, 0);
         }

         if (this.aZ >= 1) {
            var2 = 0;
            if (this.fR[0] == 0) {
               var2 = cu[this.fQ[0]];
            } else if (this.fR[0] == 1) {
               var2 = cv[this.fQ[0]];
            } else {
               var5 = this.fR[0];
            }

            var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 355, 0);
            if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
               var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 191, 2);
            }
         }
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0] - this.eh[2], 3, 1);
         } else if (this.gQ == 1) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0] - this.eh[2], 3, 8);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1] - this.eh[2], 3, 6);
      }

      var3 = this.ae[0];
      var4 = this.fw[5][0];
      var6 = dv[this.fx[5]] / 2;
      var7 = this.fw[5][1];
      var8 = dv[this.fx[5]] / 2;
      var5 = this.ei[0];
      var9 = this.fw[5][2];
      var2 = dv[this.fx[5]];
      var10 = this.fw[5][3];
      var1.drawScaledImageI(var3, var4 - var6, var5 + (var7 - var8), var2 + var9, dv[this.fx[5]] + var10, 9);
      var3 = this.ae[0];
      var8 = this.fw[5][0];
      var2 = dv[this.fx[5]] / 2;
      var4 = this.fw[5][1];
      var5 = dv[this.fx[5]] / 2;
      var1.drawScaledImageI(var3, var8 + 4 - var2, this.ei[0] + (var4 + 17 - var5), dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[13] && !this.eb && this.eE[10] && !this.gN && !this.dV) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.eh[2] + 670 + this.excessWidth, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.eh[2] + 570 + this.excessWidth, 17, 10);
      var2 = this.aY;
      var5 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var5 * 29 + this.eh[2] + this.excessWidth, 6, var2 % 10);
         var4 = var2 / 10;
         ++var5;
         var2 = var4;
      } while(var4 > 0);

      var3 = this.ae[0];
      var2 = dv[this.fx[15]] / 2;
      var5 = this.eh[2];
      var1.drawScaledImageI(var3, this.excessWidth + 633 - var2 + var5, 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      if (this.be >= 1) {
         var3 = this.ae[0];
         var5 = dv[this.fx[15]] / 2;
         var2 = this.eh[2];
         var1.drawScaledImageI(var3, this.excessWidth + 681 - var5 + var2, 23 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 27, dv[this.fx[15]] + 26, 18);
      }

      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.eh[2] + 670 + this.excessWidth, 585, 11);
      var1.setImageOrientation(0);
      if (this.be >= 1) {
         var3 = this.ae[0];
         var5 = dv[this.fx[13]] / 2;
         var2 = this.eh[2];
         var1.drawScaledImageI(var3, this.excessWidth + 344 - var5 + var2, 590 - dv[this.fx[13]] / 2, dv[this.fx[13]] + 247, dv[this.fx[13]] + 48, 22);
         if (this.be == 1 && this.fQ[3] % 8 / 4 == 0) {
            var3 = this.am;
            var2 = this.eh[2];
            var1.drawScaledImageI(var3, this.excessWidth + var2 + 312, 550, 80, 80, 0);
         }
      }

      var3 = this.ae[0];
      var2 = dv[this.fx[14]] / 2;
      var5 = this.eh[2];
      var1.drawScaledImageI(var3, this.excessWidth + 688 - var2 + var5, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var3 = this.ae[0];
         var5 = dv[this.fx[14]] / 2;
         var2 = this.eh[2];
         var1.drawScaledImageI(var3, this.excessWidth + 733 - var5 + var2, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.eh[2] + 610 + this.excessWidth, 607, 24);
      var2 = this.aL;
      var5 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var5 * 29 + this.eh[2] + this.excessWidth, 592, var2 % 10);
         var4 = var2 / 10;
         ++var5;
         var2 = var4;
      } while(var4 > 0);

   }

   boolean k() {
      boolean var1 = false;
      this.eG = 1;
      int[] var2 = this.bM;
      int var10002 = var2[16]++;
      if (this.bM[15] == 0) {
         var2 = this.eI;
         var2[0] += 10;
         this.z += 800;
         if (this.bM[12] == 0 && this.bM[16] >= 20) {
            this.bM[15] = 1;
            this.bM[16] = 0;
            this.eI[0] = 1000;
         }
      } else if (this.bM[15] == 1) {
         if (this.bM[16] >= this.getLength(cs)) {
            this.bM[15] = 2;
            this.bM[16] = 0;
         }
      } else if (this.bM[15] == 2) {
         if (this.bM[16] >= 20) {
            this.bM[15] = 3;
            this.bM[16] = 0;
         }
      } else if (this.bM[15] == 3 && this.R()) {
         this.screenTransition();
         this.eb = true;
         this.ed = 1;
         return var1;
      }

      var1 = true;
      return var1;
   }

   void l() {
      int[] var4;
      if (!this.eE[4]) {
         if (this.zoom.isZooming()) {
            this.ek[0] = 0;
            this.eH[0] = this.z / 100;
            this.eH[1] = this.z / 100;
            float var1 = (float)this.eH[0] / 100.0F;
            this.z += this.zoom.getZoomFactor() * 20;
            if (this.z < this.bM[28] * 100) {
               this.z = this.bM[28] * 100;
            } else if (this.z > 10000) {
               this.z = 10000;
            }

            this.eH[0] = this.z / 100;
            this.eH[2] = this.z / 100;
            float var2 = (float)this.eH[0] / 100.0F;
            this.eH[0] = this.eH[1] - this.eH[2];
            float var3 = 0.0F;
            var2 = 0.0F;

            do {
               int var10002;
               float var5;
               float var6;
               if (this.eH[0] > 0) {
                  var4 = this.eH;
                  var10002 = var4[0]--;
                  var5 = var2;
                  if (var3 != 0.0F) {
                     var5 = var2 - 0.01F;
                  }

                  var6 = var3 - 0.01F;
               } else {
                  var5 = var2;
                  var6 = var3;
                  if (this.eH[0] != 0) {
                     var4 = this.eH;
                     var10002 = var4[0]++;
                     var5 = var2;
                     if (var3 != 0.0F) {
                        var5 = var2 + 0.01F;
                     }

                     var6 = var3 + 0.01F;
                  }
               }

               int var7 = -((this.bM[5] + 5) / 10);
               int var8 = (int)((float)(this.getWidth() / 2) / (var1 + var6) - (float)var7);
               this.bM[5] = (int)(-((float)(var7 + var8) * (var1 + var5) / (var1 + var6) - (float)var8)) * 10;
               if (this.bM[5] < 0) {
                  this.bM[5] = 0;
               }

               var2 = var5;
               var3 = var6;
            } while(this.eH[0] != 0);

            this.eE[3] = true;
         } else if (!this.R() && !this.S() && !this.Q()) {
            this.eE[3] = false;
         }
      }

      if (this.R()) {
         if (!this.eE[2] && !this.eE[3]) {
            this.ei[0] = this.L() - this.N();
            this.ej[0] = (int) aMath.atan2((float)(this.L() - this.N()), (float)(this.K() - this.M()));
            if (this.gO && !this.eE[4]) {
               if (this.ei[0] <= -25 && this.ej[0] >= 225 && this.ej[0] <= 315) {
                  this.ek[0] = 0;
                  if (!this.eE[0]) {
                     this.el[0] = 1;
                     this.eD[6] = 0;
                  } else if (this.el[0] == 1) {
                     if (this.eD[6] == 1) {
                        this.el[0] = -1;
                     }
                  } else if (this.el[0] == -1 && this.eD[6] == 0) {
                     this.el[0] = 1;
                  }

                  this.eE[0] = true;
                  this.eE[2] = true;
               } else if (this.ei[0] >= 25 && this.ej[0] >= 45 && this.ej[0] <= 135) {
                  if (!this.eE[0]) {
                     this.el[0] = 1;
                     this.eD[6] = 1;
                  } else if (this.el[0] == 1) {
                     if (this.eD[6] == 0) {
                        this.el[0] = -1;
                     }
                  } else if (this.el[0] == -1 && this.eD[6] == 1) {
                     this.el[0] = 1;
                  }

                  this.ek[0] = 0;
                  this.eE[0] = true;
                  this.eE[2] = true;
               }
            }

            if (this.eE[4] || (!this.eE[0] || this.fT) && (this.ej[0] >= 135 && this.ej[0] <= 225 || this.ej[0] >= 315 || this.ej[0] <= 45)) {
               if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
                  this.ek[0] = 0;
               } else {
                  this.hI = true;
               }

               if (this.hI) {
                  this.ek[0] = this.K() - this.O();
                  if (this.z / 100 > this.bM[28]) {
                     var4 = this.bM;
                     var4[5] -= (this.K() - this.O()) * 10;
                  }

                  if (this.ek[0] != 0) {
                     this.eE[4] = true;
                  }
               }
            }
         }
      } else {
         this.eE[2] = false;
         this.eE[4] = false;
         this.hI = false;
      }

      if (this.z / 100 > this.bM[28] && !this.eE[4]) {
         var4 = this.bM;
         var4[5] -= this.ek[0] * 5;
      }

   }

   void l(TextureRenderer var1) {
      if (this.gu) {
         Texture var2;
         int var3;
         int var4;
         int var5;
         if (this.gw == 0) {
            var1.setColor(0, 0, 0);
            var1.setAlpha(178);
            var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gv[0]] * 690 / 100 / 2, 320 - eO[this.gv[0]] * 179 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 179 / 100, 0);
         } else if (this.gw != 1 && this.gw != 99) {
            if (this.gw == 2) {
               var1.setColor(0, 0, 0);
               var1.setAlpha(178);
               var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               var2 = this.al;
               var3 = eO[this.gv[0]] * 690 / 100 / 2;
               var1.drawScaledImageI(var2, this.excessWidth / 2 + (480 - var3), 364 - eO[this.gv[0]] * 229 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 229 / 100, 0);
               switch (this.getScene2()) {
                  case 98:
                  case 99:
                  default:
                     break;
                  case 100:
                     var2 = this.ae[0];
                     var4 = dv[this.fx[14]] / 2;
                     var3 = this.eh[2];
                     var1.drawScaledImageI(var2, this.excessWidth + 688 - var4 + var3, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
                     if (this.bf >= 1) {
                        var2 = this.ae[0];
                        var4 = dv[this.fx[14]] / 2;
                        var3 = this.eh[2];
                        var1.drawScaledImageI(var2, this.excessWidth + 733 - var4 + var3, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
                     }

                     var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
                     var3 = this.aL;
                     var4 = 0;

                     do {
                        var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.eh[2] + this.excessWidth, 592, var3 % 10);
                        var5 = var3 / 10;
                        ++var4;
                        var3 = var5;
                     } while(var5 > 0);
               }
            } else if (this.gw != 3 && this.gw != 4) {
               if (this.gw != 5 && this.gw != 6 && this.gw != 8 && this.gw != 9 && this.gw != 10) {
                  if (this.gw == 7) {
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(178);
                     var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
                     var2 = this.al;
                     var3 = eO[this.gv[0]] * 690 / 100 / 2;
                     var1.drawScaledImageI(var2, this.excessWidth / 2 + (480 - var3), 364 - eO[this.gv[0]] * 229 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 229 / 100, 0);
                  } else if (this.gw == 9999) {
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(178);
                     var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
                     var2 = this.al;
                     var3 = eO[this.gv[0]] * 690 / 100 / 2;
                     var1.drawScaledImageI(var2, this.excessWidth / 2 + (480 - var3), 363 - eO[this.gv[0]] * 179 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 179 / 100, 0);
                  } else if (this.gw == 10000) {
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(178);
                     var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
                     var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gv[0]] * 690 / 100 / 2, 320 - eO[this.gv[0]] * 179 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 179 / 100, 0);
                  }
               } else {
                  var1.setColor(0, 0, 0);
                  var1.setAlpha(178);
                  var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
                  var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gv[0]] * 690 / 100 / 2, 320 - eO[this.gv[0]] * 179 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 179 / 100, 0);
               }
            } else {
               var1.setColor(0, 0, 0);
               var1.setAlpha(178);
               var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
               var2 = this.al;
               var3 = eO[this.gv[0]] * 690 / 100 / 2;
               var1.drawScaledImageI(var2, this.excessWidth / 2 + (480 - var3), 364 - eO[this.gv[0]] * 229 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 229 / 100, 0);
               var2 = this.ae[0];
               var3 = dv[this.fx[14]] / 2;
               var4 = this.eh[2];
               var1.drawScaledImageI(var2, this.excessWidth + 688 - var3 + var4, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
               if (this.bf >= 1) {
                  var2 = this.ae[0];
                  var3 = dv[this.fx[14]] / 2;
                  var4 = this.eh[2];
                  var1.drawScaledImageI(var2, this.excessWidth + 733 - var3 + var4, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
               }

               var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
               var3 = this.aL;
               var4 = 0;

               do {
                  var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.eh[2] + this.excessWidth, 592, var3 % 10);
                  var5 = var3 / 10;
                  ++var4;
                  var3 = var5;
               } while(var5 > 0);
            }
         } else {
            var1.setColor(0, 0, 0);
            var1.setAlpha(178);
            var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
            var2 = this.al;
            var3 = eO[this.gv[0]] * 690 / 100 / 2;
            var1.drawScaledImageI(var2, this.excessWidth / 2 + (480 - var3), 364 - eO[this.gv[0]] * 229 / 100 / 2, eO[this.gv[0]] * 690 / 100, eO[this.gv[0]] * 229 / 100, 0);
            if (this.gw == 1) {
               label1068: {
                  switch (this.getScene2()) {
                     case 98:
                     case 99:
                     default:
                        break label1068;
                     case 100:
                        var2 = this.ae[0];
                        var3 = dv[this.fx[14]] / 2;
                        var4 = this.eh[2];
                        var1.drawScaledImageI(var2, this.excessWidth + 688 - var3 + var4, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
                        if (this.bf >= 1) {
                           var2 = this.ae[0];
                           var4 = dv[this.fx[14]] / 2;
                           var3 = this.eh[2];
                           var1.drawScaledImageI(var2, this.excessWidth + 733 - var4 + var3, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
                        }

                        var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
                        var3 = this.aL;
                        var4 = 0;

                        while(true) {
                           var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.eh[2] + this.excessWidth, 592, var3 % 10);
                           var5 = var3 / 10;
                           ++var4;
                           var3 = var5;
                           if (var5 <= 0) {
                              break label1068;
                           }
                        }
                     case 300:
                        var2 = this.ae[21];
                        var3 = dv[this.fx[14]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth + (688 - var3), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
                        var2 = this.ae[21];
                        var3 = dv[this.fx[14]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth + (733 - var3), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
                        var3 = this.aL;
                        var4 = 0;
                  }

                  do {
                     var1.drawScaledImageI(this.ae[4], 924 - var4 * 29 + this.excessWidth, 592, var3 % 10);
                     var5 = var3 / 10;
                     ++var4;
                     var3 = var5;
                  } while(var5 > 0);

                  var1.drawScaledImageI(this.ae[21], this.excessWidth + 610, 607, 76, 25, 24);
               }
            } else if (this.gw == 99) {
               label1118: {
                  switch (this.getScene2()) {
                     case 98:
                     case 99:
                     default:
                        break label1118;
                     case 100:
                        var1.drawScaledImageI(this.ae[5], 570, 17, 10);
                        var3 = this.aY;
                        var4 = 0;
                  }

                  do {
                     var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 6, var3 % 10);
                     var5 = var3 / 10;
                     ++var4;
                     var3 = var5;
                  } while(var5 > 0);

                  var2 = this.ae[0];
                  var3 = dv[this.fx[15]] / 2;
                  var1.drawScaledImageI(var2, this.excessWidth + (633 - var3), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
                  if (this.be >= 1) {
                     var2 = this.ae[0];
                     var3 = dv[this.fx[15]] / 2;
                     var1.drawScaledImageI(var2, this.excessWidth + (681 - var3), 23 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 27, dv[this.fx[15]] + 26, 18);
                  }
               }
            }
         }

         if (this.gv[0] >= this.getLength(eO) - 1) {
            if (this.gw == 0) {
               switch (this.getScene2()) {
                  case 98:
                  default:
                     break;
                  case 99:
                     if (this.gx == 999) {
                        var4 = 0;

                        for(var3 = 0; var3 < 4; ++var3) {
                           if (var3 == 0) {
                              if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                 var1.setColor(255, 0, 255);
                              } else {
                                 var1.setColor(255, 255, 0);
                              }
                           } else {
                              var1.setColor(255, 255, 255);
                           }

                           if (this.ah[var3].isLoaded()) {
                              var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var4 * 18 + 284, 1);
                           }

                           var4 += 2;
                        }

                        return;
                     } else if (this.gx == 1000) {
                        var4 = -1;

                        for(var3 = 0; var3 < 3; ++var3) {
                           if (var3 == 0) {
                              if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                 var1.setColor(255, 0, 255);
                              } else {
                                 var1.setColor(255, 255, 0);
                              }
                           } else {
                              var1.setColor(255, 255, 255);
                           }

                           if (this.ah[var3].isLoaded()) {
                              var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var4 * 18 + 284, 1);
                           }

                           var4 += 2;
                        }

                        return;
                     } else {
                        var4 = 0;

                        for(var3 = 0; var3 < this.getLength(this.ah); ++var3) {
                           if (this.ah[var3].isLoaded()) {
                              var4 = -(var3 - 1);
                           }
                        }

                        var3 = var4 - 1;
                        if (this.dE == 5) {
                           for(var4 = 0; var4 < this.getLength(this.ah); var3 = var5) {
                              var5 = var3;
                              if (this.ah[var4].isLoaded()) {
                                 if (var4 == 0) {
                                    if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                       var1.setColor(255, 0, 255);
                                    } else {
                                       var1.setColor(255, 255, 0);
                                    }
                                 } else {
                                    var1.setColor(255, 255, 255);
                                 }

                                 var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 305, 1);
                                 var5 = var3 + 2;
                              }

                              ++var4;
                           }

                           return;
                        } else if (this.dE == 6) {
                           var4 = 0;

                           for(var5 = var3; var4 < this.getLength(this.ah); var5 = var3) {
                              var3 = var5;
                              if (this.ah[var4].isLoaded()) {
                                 if (var4 == 0) {
                                    if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                       var1.setColor(255, 0, 255);
                                    } else {
                                       var1.setColor(255, 255, 0);
                                    }
                                 } else {
                                    var1.setColor(255, 255, 255);
                                 }

                                 var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var5 * 18 + 305, 1);
                                 var3 = var5 + 2;
                              }

                              ++var4;
                           }

                           return;
                        } else {
                           if (this.dE == 7 && this.bc[2] == 0) {
                              var4 = 0;

                              for(var5 = var3; var4 < this.getLength(this.ah); var5 = var3) {
                                 var3 = var5;
                                 if (this.ah[var4].isLoaded()) {
                                    if (var4 == 0) {
                                       if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                          var1.setColor(255, 0, 255);
                                       } else {
                                          var1.setColor(255, 255, 0);
                                       }
                                    } else {
                                       var1.setColor(255, 255, 255);
                                    }

                                    var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var5 * 18 + 305, 1);
                                    var3 = var5 + 2;
                                 }

                                 ++var4;
                              }
                           }
                           break;
                        }
                     }
                  case 100:
                     var3 = 0;
                     byte var7 = 0;
                     if (this.screen == 0) {
                        var1.setColor(255, 255, 255);
                        if (this.ah[0].isLoaded()) {
                           var1.drawScaledImage(this.ah[0], this.getWidth() / 2, 305, 1);
                        }
                     }

                     if (this.screen == 7) {
                        var4 = 0;

                        for(var3 = var7; var4 < this.getLength(this.ah); ++var4) {
                           if (this.ah[var4].isLoaded()) {
                              var3 = -(var4 - 1);
                           }
                        }

                        for(var4 = 0; var4 < this.getLength(this.ah); ++var4) {
                           var1.setColor(255, 255, 255);
                           if (this.ah[var4].isLoaded()) {
                              var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 284, 1);
                           }

                           var3 += 2;
                        }
                     }

                     if (this.screen == 3) {
                        for(var4 = 0; var4 < this.getLength(this.ah); ++var4) {
                           if (this.ah[var4].isLoaded()) {
                              var3 = -(var4 - 1);
                           }
                        }

                        for(var4 = 0; var4 < this.getLength(this.ah); ++var4) {
                           var1.setColor(255, 255, 0);
                           if (this.ah[var4].isLoaded()) {
                              var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, 305, 1);
                           }

                           var3 += 2;
                        }
                     }
                     break;
                  case 300:
                     if (this.gx == 999) {
                        var4 = -1;

                        for(var3 = 0; var3 < 2; ++var3) {
                           if (var3 == 0) {
                              if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                 var1.setColor(255, 0, 255);
                              } else {
                                 var1.setColor(255, 255, 0);
                              }
                           } else {
                              var1.setColor(255, 255, 255);
                           }

                           if (this.ah[var3].isLoaded()) {
                              var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var4 * 18 + 305, 1);
                           }

                           var4 += 2;
                        }
                     } else {
                        var3 = 0;

                        for(var4 = 0; var4 < this.getLength(this.ah); ++var4) {
                           if (this.ah[var4].isLoaded()) {
                              var3 = -(var4 - 1);
                           }
                        }

                        for(var4 = 0; var4 < this.getLength(this.ah); ++var4) {
                           if (var4 == 0) {
                              if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                 var1.setColor(255, 0, 255);
                              } else {
                                 var1.setColor(255, 255, 0);
                              }
                           } else {
                              var1.setColor(255, 255, 255);
                           }

                           if (this.ah[var4].isLoaded()) {
                              var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 284, 1);
                           }

                           var3 += 2;
                        }
                     }
               }
            } else {
               int var6;
               byte var9;
               if (this.gw != 1 && this.gw != 99) {
                  if (this.gw == 2) {
                     var1.setColor(255, 255, 255);
                     var4 = 0;

                     for(var3 = 0; var3 < 4 && !aString.equals(this.cE[3][var3], "＠"); ++var3) {
                        var4 = -var3;
                     }

                     for(var3 = 0; var3 < 4 && !aString.equals(this.cE[3][var3], "＠"); ++var3) {
                        var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var4 * 18 + 306, 1);
                        var4 += 2;
                     }

                     switch (this.getScene2()) {
                        case 98:
                        case 99:
                        default:
                           break;
                        case 100:
                           var2 = this.af[2];
                           var4 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var4), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 0);
                           var2 = this.af[2];
                           var4 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var4), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 0);
                           var2 = this.ae[0];
                           var4 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var4), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                           var2 = this.ae[0];
                           var4 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var4), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                           if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           }

                           if (this.screen != 0 && this.screen != 5 && this.screen != 9) {
                              if (this.screen == 7) {
                                 var3 = this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                              } else if (this.screen != 3 && this.screen != 6 && this.screen != 8 && this.screen != 4 && this.screen == 999) {
                                 if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
                                    var3 = 500;
                                 } else if (this.aL >= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]]) {
                                    var3 = Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]];
                                 }
                              }
                           }

                           var4 = 0;

                           do {
                              var1.drawScaledImageI(this.ae[5], 825 - var4 * 29 - 30 + this.excessWidth / 2, 208, var3 % 10);
                              var5 = var3 / 10;
                              var6 = var4 + 1;
                              var4 = var6;
                              var3 = var5;
                           } while(var5 > 0);

                           if (var6 >= 5) {
                              var3 = var6 - 4;
                           } else {
                              var3 = 0;
                           }

                           var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + (642 - var3 * 29), 208, 55, 42, 21);
                           var1.drawScaledImage(this.ae[5], (float)(593 - var3 * 29 + this.excessWidth / 2), 222.0F, 47.0F, 28.0F, 15);
                           break;
                        case 300:
                           var1.setColor(255, 255, 255);

                           for(var3 = 0; var3 < 4; ++var3) {
                              var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var3 * 36 + 270, 1);
                           }

                           var2 = this.ae[21];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var3), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 2);
                           var2 = this.ae[21];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var3), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 2);
                           var2 = this.ae[21];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var3), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                           var2 = this.ae[21];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var3), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                           if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           }
                     }
                  } else if (this.gw != 3 && this.gw != 4) {
                     if (this.gw != 5 && this.gw != 6 && this.gw != 8 && this.gw != 9 && this.gw != 10) {
                        if (this.gw == 7) {
                           var3 = 0;
                           var1.setColor(255, 255, 255);

                           for(var4 = 0; var4 < 4 && !aString.equals(this.cE[8][var4], "＠"); ++var4) {
                              var3 = -var4;
                           }

                           for(var4 = 0; var4 < 4 && !aString.equals(this.cE[8][var4], "＠"); ++var4) {
                              var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 306, 1);
                              var3 += 2;
                           }

                           var2 = this.af[2];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var3), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 0);
                           var2 = this.af[2];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var3), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 0);
                           var2 = this.ae[0];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var3), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                           var2 = this.ae[0];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var3), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                           if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           }
                        } else if (this.gw == 9999) {
                           var2 = this.af[2];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (615 - var3), 461 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 0);
                           var2 = this.ae[0];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (651 - var3), 469 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 97, dv[this.fz[0]] + 55, 20);
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 460, 168, 72, this.gv[2] % 4 / 2 + 1);
                           var1.setColor(255, 255, 255);
                           if (this.bl == 29 && this.bn != 0) {
                              var9 = 1;
                           } else {
                              var9 = 0;
                           }

                           boolean var10;
                           if (this.ho[this.bl + var9][0] == 7) {
                              var10 = true;
                           } else {
                              var10 = false;
                           }

                           boolean var8;
                           if (this.bn == 0) {
                              var8 = true;
                           } else {
                              var8 = false;
                           }

                           if (var10 & var8) {
                              var5 = -3;

                              for(var4 = 0; var4 < 3; ++var4) {
                                 var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var5 * 18 + 363, 1);
                                 var5 += 2;
                              }
                           } else {
                              var4 = 0;

                              for(var5 = -2; var4 < 2; ++var4) {
                                 var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var5 * 18 + 363, 1);
                                 var5 += 2;
                              }
                           }

                           if (this.bl == 29 && this.bn != 0) {
                           }

                           var1.drawScaledImageI(this.aF[1], this.excessWidth / 2 + 320, 126, this.ho[this.bl + var9][0]);
                           if (this.ho[this.bl + var9][0] != 0 && this.ho[this.bl + var9][0] != 6) {
                              if (this.ho[this.bl + var9][0] == 1) {
                                 var5 = this.ho[this.bl + var9][1];
                                 var4 = 0;

                                 while(true) {
                                    var5 /= 10;
                                    if (var5 <= 0) {
                                       var3 = this.ho[var9 + this.bl][1];
                                       --var4;

                                       do {
                                          var1.drawScaledImageI(this.ae[5], 550 - var4 * 29 + this.excessWidth / 2, 211, var3 % 10);
                                          var6 = var3 / 10;
                                          var5 = var4 + 1;
                                          var4 = var5;
                                          var3 = var6;
                                       } while(var6 > 0);

                                       var1.drawScaledImageI(this.ae[5], 550 - var5 * 29 - 3 + this.excessWidth / 2, 211, 16);
                                       break;
                                    }

                                    --var4;
                                 }
                              }
                           } else {
                              var5 = this.ho[this.bl + var9][1];
                              var4 = 0;

                              while(true) {
                                 var5 /= 10;
                                 if (var5 <= 0) {
                                    var3 = this.ho[var9 + this.bl][1];
                                    --var4;

                                    do {
                                       var1.drawScaledImageI(this.ae[5], 430 - var4 * 29 + this.excessWidth / 2, 156, var3 % 10);
                                       var6 = var3 / 10;
                                       var5 = var4 + 1;
                                       var4 = var5;
                                       var3 = var6;
                                    } while(var6 > 0);

                                    var1.drawScaledImageI(this.ae[5], 430 - var5 * 29 - 3 + this.excessWidth / 2, 156, 16);
                                    break;
                                 }

                                 --var4;
                              }
                           }
                        } else if (this.gw == 10000) {
                           var4 = 0;
                           var1.setColor(255, 255, 0);

                           for(var3 = 0; var3 < 4 && !aString.equals(this.cE[14][var3], "＠"); ++var3) {
                              --var4;
                           }

                           ++var4;

                           for(var3 = 0; var3 < 4 && !aString.equals(this.cE[14][var3], "＠"); ++var3) {
                              var1.drawScaledImage(this.ah[var3], this.getWidth() / 2, var4 * 18 + 305, 1);
                              var4 += 2;
                           }
                        }
                     } else {
                        var1.setColor(255, 255, 255);
                        var3 = 0;

                        for(var4 = 0; var4 < 4; ++var4) {
                           if (this.gw == 5) {
                              if (aString.equals(this.cE[6][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 6) {
                              if (aString.equals(this.cE[7][var4], "＠")) {
                                 var3 = -(var4 - 1);
                                 break;
                              }
                           } else if (this.gw == 8) {
                              if (aString.equals(this.cE[9][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 9) {
                              if (aString.equals(this.cE[10][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 10 && aString.equals(this.cE[11][var4], "＠")) {
                              break;
                           }

                           var3 = -(var4 - 1);
                        }

                        for(var4 = 0; var4 < 4; ++var4) {
                           if ((this.gw == 8 || this.gw == 9) && var4 == 0) {
                              if (this.gv[2] % 4 != 0 && this.gv[2] % 4 != 1) {
                                 var1.setColor(255, 0, 255);
                              } else {
                                 var1.setColor(255, 255, 0);
                              }
                           } else {
                              var1.setColor(255, 255, 255);
                           }

                           if (this.gw == 5) {
                              if (aString.equals(this.cE[6][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 6) {
                              if (aString.equals(this.cE[7][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 8) {
                              if (aString.equals(this.cE[9][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 9) {
                              if (aString.equals(this.cE[10][var4], "＠")) {
                                 break;
                              }
                           } else if (this.gw == 10 && aString.equals(this.cE[11][var4], "＠")) {
                              break;
                           }

                           var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 284, 1);
                           var3 += 2;
                        }

                        if (this.gw == 6) {
                           var1.drawScaledImage(this.ah[this.getLength(this.cE[7]) + 1], this.getWidth() / 2, var3 * 18 + 284, 1);
                        }
                     }
                  } else {
                     var1.setColor(255, 255, 255);
                     var4 = 0;

                     for(var3 = 0; var3 < 4; ++var3) {
                        if (this.gw == 3) {
                           if (aString.equals(this.cE[4][var3], "＠")) {
                              break;
                           }
                        } else if (this.gw == 4 && aString.equals(this.cE[5][var3], "＠")) {
                           break;
                        }

                        var4 = -var3;
                     }

                     if (this.gw == 3) {
                        var3 = var4 - 1;
                     } else {
                        var3 = var4;
                        if (this.gw == 4) {
                           var3 = var4 - 1;
                        }
                     }

                     for(var4 = 0; var4 < 4; ++var4) {
                        if (this.gw == 3) {
                           if (aString.equals(this.cE[4][var4], "＠")) {
                              break;
                           }
                        } else if (this.gw == 4 && aString.equals(this.cE[5][var4], "＠")) {
                           break;
                        }

                        var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var3 * 18 + 306, 1);
                        var3 += 2;
                     }

                     if (this.gw == 3) {
                        var1.drawScaledImage(this.ah[this.getLength(this.cE[4]) + 1], this.getWidth() / 2, var3 * 18 + 306, 1);
                     } else if (this.gw == 4) {
                        var1.drawScaledImage(this.ah[this.getLength(this.cE[5]) + 1], this.getWidth() / 2, var3 * 18 + 306, 1);
                     }

                     var3 = 30;
                     var4 = 0;

                     do {
                        var1.drawScaledImageI(this.ae[5], 825 - var4 * 29 - 30 + this.excessWidth / 2, 208, var3 % 10);
                        var5 = var3 / 10;
                        var6 = var4 + 1;
                        var4 = var6;
                        var3 = var5;
                     } while(var5 > 0);

                     if (var6 >= 5) {
                        var3 = var6 - 4;
                     } else {
                        var3 = 0;
                     }

                     var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + (642 - var3 * 29), 208, 55, 42, 21);
                     var1.drawScaledImage(this.ae[5], (float)(593 - var3 * 29 + this.excessWidth / 2), 222.0F, 47.0F, 28.0F, 15);
                     switch (this.getScene2()) {
                        case 98:
                        case 99:
                        default:
                           break;
                        case 100:
                           var2 = this.af[2];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var3), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 0);
                           var2 = this.af[2];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var3), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 0);
                           var2 = this.ae[0];
                           var3 = dv[this.fz[0]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var3), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                           var2 = this.ae[0];
                           var3 = dv[this.fz[1]] / 2;
                           var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var3), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                           if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                              var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                           }
                     }
                  }
               } else {
                  var9 = 0;
                  var1.setColor(255, 255, 255);
                  if (this.gw == 1) {
                     var9 = 0;
                  } else if (this.gw == 99) {
                     var9 = 13;
                  }

                  var5 = 0;

                  for(var4 = 0; var4 < 4 && !aString.equals(this.cE[var9][var4], "＠"); ++var4) {
                     var5 = -var4;
                  }

                  for(var4 = 0; var4 < 4 && !aString.equals(this.cE[var9][var4], "＠"); ++var4) {
                     var1.drawScaledImage(this.ah[var4], this.getWidth() / 2, var5 * 18 + 306, 1);
                     var5 += 2;
                  }

                  switch (this.getScene2()) {
                     case 98:
                     case 99:
                     default:
                        break;
                     case 100:
                        var2 = this.af[2];
                        var3 = dv[this.fz[0]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var3), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 0);
                        var2 = this.af[2];
                        var3 = dv[this.fz[1]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var3), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 0);
                        var2 = this.ae[0];
                        var3 = dv[this.fz[0]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var3), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                        var2 = this.ae[0];
                        var3 = dv[this.fz[1]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var3), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                        if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                        } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                        }

                        label602: {
                           if (this.screen != 0 && this.screen != 5) {
                              if (this.screen == 9) {
                                 var3 = 30;
                                 break label602;
                              }

                              if (this.screen == 7) {
                                 if (this.gw == 1) {
                                    var3 = this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                                    break label602;
                                 }

                                 if (this.gw == 99 && this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
                                    if (this.fS[2] < this.gB[1]) {
                                       if (this.bd == 0) {
                                          var3 = hn;
                                          break label602;
                                       }
                                    } else {
                                       if (this.fS[2] < this.gB[0]) {
                                          if (this.bq[this.bJ[this.bK[this.fS[2] - this.gB[1]]][15]] < this.bJ[this.bK[this.fS[2] - this.gB[1]]][0]) {
                                             var3 = 0;
                                          } else if (this.bu[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                                             var3 = this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                                          } else {
                                             var3 = this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1);
                                          }
                                          break label602;
                                       }

                                       if (this.fS[2] - this.gB[1] - this.gB[0] == 0) {
                                          var3 = ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1);
                                          break label602;
                                       }

                                       if (this.fS[2] - this.gB[1] - this.gB[0] >= 1) {
                                          var3 = ac[this.fS[2] - this.gB[1] - this.gB[0]][(this.bx[this.fS[2] - this.gB[1] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[1] - this.gB[0] + 1] + 1) / 10 + 1);
                                          break label602;
                                       }
                                    }
                                 }
                              } else if (this.screen == 999) {
                                 if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
                                    var3 = 500;
                                 } else {
                                    var3 = Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]];
                                 }
                                 break label602;
                              }
                           }

                           var3 = var4;
                        }

                        if (this.gw == 1) {
                           var4 = 0;

                           do {
                              var1.drawScaledImageI(this.ae[5], 825 - var4 * 29 - 30 + this.excessWidth / 2, 208, var3 % 10);
                              var5 = var3 / 10;
                              var6 = var4 + 1;
                              var4 = var6;
                              var3 = var5;
                           } while(var5 > 0);

                           if (var6 >= 5) {
                              var3 = var6 - 4;
                           } else {
                              var3 = 0;
                           }

                           var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + (642 - var3 * 29), 208, 55, 42, 21);
                           var1.drawScaledImage(this.ae[5], (float)(593 - var3 * 29 + this.excessWidth / 2), 222.0F, 47.0F, 28.0F, 15);
                        } else if (this.gw == 99) {
                           var4 = 0;

                           do {
                              var1.drawScaledImageI(this.ae[5], 825 - var4 * 29 - 30 + this.excessWidth / 2, 208, var3 % 10);
                              var6 = var3 / 10;
                              var5 = var4 + 1;
                              var4 = var5;
                              var3 = var6;
                           } while(var6 > 0);

                           if (var5 >= 5) {
                              var3 = var5 - 4;
                           } else {
                              var3 = 0;
                           }

                           var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + (635 - var3 * 29), 214, 62, 36, 23);
                           var1.drawScaledImage(this.ae[5], (float)(593 - var3 * 29 + this.excessWidth / 2), 222.0F, 47.0F, 28.0F, 15);
                        }
                        break;
                     case 300:
                        var2 = this.ae[21];
                        var3 = dv[this.fz[0]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (251 - var3), 382 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 168, dv[this.fz[0]] + 72, 2);
                        var2 = this.ae[21];
                        var3 = dv[this.fz[1]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (541 - var3), 382 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 168, dv[this.fz[1]] + 72, 2);
                        var2 = this.ae[21];
                        var3 = dv[this.fz[0]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (260 - var3), 390 - dv[this.fz[0]] / 2, dv[this.fz[0]] + 150, dv[this.fz[0]] + 55, 4);
                        var2 = this.ae[21];
                        var3 = dv[this.fz[1]] / 2;
                        var1.drawScaledImageI(var2, this.excessWidth / 2 + (550 - var3), 390 - dv[this.fz[1]] / 2, dv[this.fz[1]] + 150, dv[this.fz[1]] + 55, 5);
                        if (!this.gU && this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3]) && !this.eb) {
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 251, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                        } else if (!this.gU && this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3]) && !this.eb) {
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 541, 382, 168, 72, this.gv[2] % 4 / 2 + 1);
                        }

                        if (this.ha[0]) {
                           var3 = ab[this.hl];
                        } else {
                           var3 = 30;
                        }

                        var4 = 0;

                        do {
                           var1.drawScaledImageI(this.ae[4], 825 - var4 * 29 - 30 + this.excessWidth / 2, 208, var3 % 10);
                           var5 = var3 / 10;
                           var6 = var4 + 1;
                           var4 = var6;
                           var3 = var5;
                        } while(var5 > 0);

                        if (var6 >= 5) {
                           var3 = var6 - 4;
                        } else {
                           var3 = 0;
                        }

                        var1.drawScaledImageI(this.ae[21], this.excessWidth / 2 + (642 - var3 * 29), 208, 55, 42, 21);
                        var1.drawScaledImage(this.ae[15], (float)(593 - var3 * 29 + this.excessWidth / 2), 222.0F, 47.0F, 28.0F, 43);
                  }
               }
            }
         }
      }

   }

   void enemyGuideLoad() {
      int var1;
      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      //jp.co.ponos.library.a.a.b().f();
      this.resetTextures();

      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      this.gp[3] = true;

      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(int var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gG); ++var1) {
         this.gG[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fs); ++var1) {
         this.fs[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
         this.ei[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gC); ++var1) {
         this.gC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;
      this.fR[0] = 0;

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      if (this.gQ == 0) {
         this.fQ[0] = this.getLength(cu) - 1;
      }

      for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
         this.gm[var1] = 0;
      }

      this.gm[1] = 297;

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      this.gy = this.getWidth();
      this.gC[0] = 0;
      this.gC[2] = 0;
      this.eh[0] = -(this.gy * this.gC[0]);
      this.gC[1] = this.getLength(dt);
      this.ft = -1;
      this.a(1, this.fs[2]);
      if (this.ae[6].isLoaded()) {
         this.ae[6].reset();
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 15)), MyUtility.getString(String.format("img%03d.imgcut", 15)));
      }

      if (this.ae[7].isLoaded()) {
         this.ae[7].reset();
      }

      if (!this.ae[7].isLoaded()) {
         this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 16)), MyUtility.getString(String.format("img%03d.imgcut", 16)));
      }

      if (this.ae[8].isLoaded()) {
         this.ae[8].reset();
      }

      if (!this.ae[8].isLoaded()) {
         this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 0)), MyUtility.getString(String.format("img%03d.imgcut", 0)));
      }

      if (this.ae[9].isLoaded()) {
         this.ae[9].reset();
      }

      if (!this.ae[9].isLoaded()) {
         this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
      }

      this.fQ[6] = 126;

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      this.eE[0] = true;
      this.hI = false;
   }

   void m(TextureRenderer var1) {
      var1.drawScaledImageI(this.ae[7], 0, 0, this.getWidth(), 407, 0);
      if (this.fS[3] == 0) {
         if (this.fS[2] < this.gB[1]) {
            var1.drawScaledImageI(this.ae[7], 0, 362, this.getWidth(), 238, 1);
            var1.drawScaledImageI(this.ae[8], 0, 78, 48);
         } else if (this.fS[2] < this.gB[0]) {
            var1.drawScaledImageI(this.ae[7], 0, 362, this.getWidth(), 238, 1);
            var1.drawScaledImageI(this.ae[8], 0, 78, 48);
         } else {
            var1.drawScaledImageI(this.ae[7], 0, 362, this.getWidth(), 238, 7);
            var1.drawScaledImageI(this.ae[8], 0, 78, 55);
         }
      } else {
         var1.drawScaledImageI(this.ae[7], 0, 362, this.getWidth(), 238, 1);
         var1.drawScaledImageI(this.ae[8], 0, 78, 48);
      }

      var1.setColor(255, 255, 255);
      if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
         var1.drawScaledImage(this.ag[this.gA[4]], 146, 82, 1);
      }

      int var2;
      int var3;
      int var4;
      Texture var6;
      if (this.gz >= 0 && this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
         if (this.fS[2] < this.gB[1]) {
            if (this.bd == 0) {
               var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 4);
               if (this.aY < hn) {
                  var1.setImageColor(0, 0, 0);
                  var1.setImageAlpha(127);
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.setImageColor(255, 255, 255);
                  var1.setImageAlpha(255);
               }

               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
               } else {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
               }
            }
         } else if (this.fS[2] < this.gB[0]) {
            if (this.bu[this.bK[this.fS[2] - this.gB[1]]] == 0) {
               if (this.fS[3] == 0) {
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 4);
                  if (this.aY < this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                     var1.setImageColor(0, 0, 0);
                     var1.setImageAlpha(127);
                     var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                     var1.setImageColor(255, 255, 255);
                     var1.setImageAlpha(255);
                  }
               } else if (this.aL >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 4);
               } else {
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 4);
                  var1.setImageColor(0, 0, 0);
                  var1.setImageAlpha(127);
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.setImageColor(255, 255, 255);
                  var1.setImageAlpha(255);
               }

               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
               } else {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
               }
            } else if (this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 < this.bi) {
               var6 = this.ae[7];
               var2 = dv[this.fx[0]] / 2;
               var3 = dv[this.fx[0]] / 2;
               var4 = dv[this.fx[0]];
               var1.drawScaledImageI(var6, 4 - var2, 367 - var3, dv[this.fx[0]] + (383 - var4), dv[this.fx[0]] + 85, 2);
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
               if (this.aY < this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1)) {
                  var1.setImageColor(0, 0, 0);
                  var1.setImageAlpha(127);
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.setImageColor(255, 255, 255);
                  var1.setImageAlpha(255);
               }

               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
               } else {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
               }
            }
         } else if (this.fS[2] - this.gB[0] == 0) {
            if (this.bx[0] + 1 < this.bi) {
               var6 = this.ae[7];
               var3 = dv[this.fx[0]] / 2;
               var4 = dv[this.fx[0]] / 2;
               var2 = dv[this.fx[0]];
               var1.drawScaledImageI(var6, 4 - var3, 367 - var4, dv[this.fx[0]] + (383 - var2), dv[this.fx[0]] + 85, 2);
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
               if (this.aY < ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1)) {
                  var1.setImageColor(0, 0, 0);
                  var1.setImageAlpha(127);
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.setImageColor(255, 255, 255);
                  var1.setImageAlpha(255);
               }

               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
               } else {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
               }
            }
         } else if (this.fS[2] - this.gB[0] >= 1) {
            if (this.fS[2] - this.gB[0] == 1) {
               if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < 10) {
                  var6 = this.ae[7];
                  var3 = dv[this.fx[0]] / 2;
                  var4 = dv[this.fx[0]] / 2;
                  var2 = dv[this.fx[0]];
                  var1.drawScaledImageI(var6, 4 - var3, 367 - var4, dv[this.fx[0]] + (383 - var2), dv[this.fx[0]] + 85, 2);
                  var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
                  if (this.aY < ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                     var1.setImageColor(0, 0, 0);
                     var1.setImageAlpha(127);
                     var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                     var1.setImageColor(255, 255, 255);
                     var1.setImageAlpha(255);
                  }

                  if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                     var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
                  } else {
                     var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
                  }
               }
            } else if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < this.bi) {
               var6 = this.ae[7];
               var3 = dv[this.fx[0]] / 2;
               var2 = dv[this.fx[0]] / 2;
               var4 = dv[this.fx[0]];
               var1.drawScaledImageI(var6, 4 - var3, 367 - var2, dv[this.fx[0]] + (383 - var4), dv[this.fx[0]] + 85, 2);
               var1.drawScaledImageI(this.ae[7], 43 - dv[this.fx[0]] / 2, 378 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 292, dv[this.fx[0]] + 62, 3);
               if (this.aY < ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                  var1.setImageColor(0, 0, 0);
                  var1.setImageAlpha(127);
                  var1.drawScaledImageI(this.af[3], 4 - dv[this.fx[0]] / 2, 367 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 383, dv[this.fx[0]] + 85, 3);
                  var1.setImageColor(255, 255, 255);
                  var1.setImageAlpha(255);
               }

               if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 5);
               } else {
                  var1.drawScaledImageI(this.af[3], 4, 367, 383, 85, 4);
               }
            }
         }

         this.eH[0] = 0;
         if (this.fS[2] < this.gB[1]) {
            if (this.bd == 0) {
               this.eH[0] = 1;
            }
         } else if (this.fS[2] < this.gB[0]) {
            if (this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 < this.bi) {
               this.eH[0] = 1;
            }
         } else if (this.fS[2] - this.gB[0] == 0) {
            if (this.bx[0] + 1 < this.bi) {
               this.eH[0] = 1;
            }
         } else if (this.fS[2] - this.gB[0] >= 1) {
            if (this.fS[2] - this.gB[0] == 1) {
               if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < 10) {
                  this.eH[0] = 1;
               }
            } else if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < this.bi) {
               this.eH[0] = 1;
            }
         }
      }

      if (this.fS[2] > -1 && this.fS[2] < this.gC[1] + 1) {
         if (this.fS[2] < this.gB[1]) {
            if (this.ct <= 0) {
               var1.setColor(255, 255, 255);

               for(var2 = this.gA[3]; var2 < this.gA[3] + 3; ++var2) {
                  var1.drawScaledImage(this.ag[var2], this.getWidth() / 2 + 20, (var2 - this.gA[3]) * 36 + 470 - 5, 1);
               }
            } else {
               var1.setColor(255, 255, 0);
               var1.drawScaledImage(this.ag[this.gA[5]], this.getWidth() / 2 + 20, 465, 1);
            }
         } else if (this.fS[2] < this.gB[0]) {
            if (this.ct <= 0) {
               var1.setColor(255, 255, 255);

               for(var2 = this.gA[3]; var2 < this.gA[3] + 3; ++var2) {
                  var1.drawScaledImage(this.ag[var2], this.getWidth() / 2 + 20, (var2 - this.gA[3]) * 36 + 470 - 5, 1);
               }
            } else {
               var1.setColor(255, 255, 0);
               var1.drawScaledImage(this.ag[this.gA[5]], this.getWidth() / 2 + 20, 465, 1);
            }
         } else if (this.ct <= 0) {
            var1.setColor(255, 255, 255);

            for(var2 = this.gA[3]; var2 < this.gA[3] + 3; ++var2) {
               var1.drawScaledImage(this.ag[var2], this.getWidth() / 2 + 20, (var2 - this.gA[3]) * 36 + 470 - 5, 1);
            }
         } else {
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.gA[5]], this.getWidth() / 2 + 20, 465, 1);
         }
      } else {
         for(var2 = this.gA[3]; var2 < this.gA[3] + 3; ++var2) {
            var1.drawScaledImage(this.ag[var2], this.getWidth() / 2 + 20, (var2 - this.gA[3]) * 36 + 470 - 5, 1);
         }
      }

      int var5;
      int var9;
      float var10;
      float var12;
      float var15;
      float var16;
      float var17;
      float var18;
      for(var3 = 1; var3 < this.gC[0] + 1 + this.gC[1] + this.gC[2]; ++var3) {
         if (this.fS[0] == var3) {
            this.eH[0] = this.gH;
            if (this.fS[5] == 0) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = (float)(-(328 - this.go[var3][0]));
         } else if (this.fS[0] + 1 == var3) {
            this.eH[0] = 0;
            if (this.fS[5] == 1) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = (float)(328 - this.go[var3][0]);
         } else if (this.fS[0] + 2 == var3) {
            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = (float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 - 1][0]) / 2.0F;
         } else if (this.fS[0] + 3 == var3) {
            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = (float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 - 1][0]) / 2.0F + (float)(328 - this.go[var3 - 2][0]) / 2.0F;
         } else if (this.fS[0] - 1 == var3) {
            this.eH[0] = 0;
            if (this.fS[5] == -1) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = -((float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 + 1][0]) / 2.0F);
         } else {
            if (this.fS[0] - 2 != var3) {
               continue;
            }

            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = -((float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 + 1][0]) / 2.0F);
         }

         float var13;
         float var14;
         if (var3 - this.gC[0] > -1 && var3 - this.gC[0] < this.gC[1] + 1) {
            if (var3 - this.gC[0] < this.gB[1]) {
               var6 = this.ae[8];
               var17 = (float)this.getWidth() / 2.0F;
               var16 = (float)this.go[var3][0] / 2.0F;
               var15 = (float)(this.gy * var3);
               var18 = (float)this.eh[0];
               var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var17 - var16 + var15 + var18 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 47);
            } else if (var3 - this.gC[0] < this.gB[0]) {
               var2 = this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]];
               if (this.bK[var3 - this.gC[0] - this.gB[1]] >= 0 && this.bK[var3 - this.gC[0]] >= 0) {
                  if (this.bq[this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][15]] < this.bJ[this.bK[var3 - this.gC[0]] - this.gB[1]][0]) {
                     var6 = this.ae[8];
                     var15 = (float)this.getWidth() / 2.0F;
                     var18 = (float)this.go[var3][0] / 2.0F;
                     var17 = (float)(this.gy * var3);
                     var16 = (float)this.eh[0];
                     var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var15 - var18 + var17 + var16 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 0);
                  } else if (this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                     var6 = this.ae[8];
                     var18 = (float)this.getWidth() / 2.0F;
                     var16 = (float)this.go[var3][0] / 2.0F;
                     var17 = (float)(this.gy * var3);
                     var15 = (float)this.eh[0];
                     var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var18 - var16 + var17 + var15 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 47);
                  } else if (var2 + 1 < this.bi) {
                     var6 = this.ae[8];
                     var17 = (float)this.getWidth() / 2.0F;
                     var16 = (float)this.go[var3][0] / 2.0F;
                     var15 = (float)(this.gy * var3);
                     var18 = (float)this.eh[0];
                     var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var17 - var16 + var15 + var18 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 0);
                  } else {
                     var6 = this.ae[8];
                     var17 = (float)this.getWidth() / 2.0F;
                     var15 = (float)this.go[var3][0] / 2.0F;
                     var18 = (float)(this.gy * var3);
                     var16 = (float)this.eh[0];
                     var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var17 - var15 + var18 + var16 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 47);
                  }
               } else {
                  var6 = this.ae[8];
                  var15 = (float)this.getWidth() / 2.0F;
                  var18 = (float)this.go[var3][0] / 2.0F;
                  var17 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var15 - var18 + var17 + var16 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 0);
               }
            } else {
               var6 = this.ae[8];
               var17 = (float)this.getWidth() / 2.0F;
               var16 = (float)this.go[var3][0] / 2.0F;
               var18 = (float)(this.gy * var3);
               var15 = (float)this.eh[0];
               var1.drawScaledImage(var6, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var17 - var16 + var18 + var15 + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var3][1], 54);
            }
         } else {
            var6 = this.ae[8];
            float var11 = (float)this.getWidth() / 2.0F;
            var12 = (float)this.go[var3][0] / 2.0F;
            var13 = (float)(this.gy * var3);
            var14 = (float)this.eh[0];
            var15 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
            var16 = (float)(dv[this.eH[2]] / 2);
            var17 = (float)(347 - this.go[var3][1] - dv[this.eH[2]] / 2);
            var18 = (float)this.go[var3][0];
            float var19 = (float)(cC[this.eH[0]] * 328) / 100.0F;
            var1.drawScaledImage(var6, var11 - var12 + var13 + var14 + var10 + var15 - var16, var17, (float)dv[this.eH[2]] + (var18 - var19), (float)(this.go[var3][1] + dv[this.eH[2]]), 53);
            float var20;
            float var21;
            float var22;
            if (var3 - this.gC[0] > -2 && var3 - this.gC[0] < this.gC[1] + 2) {
               var6 = this.ae[8];
               var11 = (float)this.getWidth() / 2.0F;
               var19 = (float)this.go[var3][0] / 2.0F;
               var14 = (float)(this.gy * var3);
               var12 = (float)this.eh[0];
               var17 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var13 = (float)(dv[this.eH[2]] / 2);
               var16 = 162.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F;
               var22 = (float)(dv[this.eH[2]] / 2);
               var18 = (float)this.go[var3][0];
               var20 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var21 = (float)dv[this.eH[2]];
               var15 = 60.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var6, var11 - var19 + var14 + var12 + var10 + var17 - var13, 347.0F - var16 - var22, var21 + (var18 - var20), (float)dv[this.eH[2]] + var15, 49);
            } else {
               var6 = this.ae[8];
               var16 = (float)this.getWidth() / 2.0F;
               var19 = (float)this.go[var3][0] / 2.0F;
               var17 = (float)(this.gy * var3);
               var12 = (float)this.eh[0];
               var14 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var18 = (float)(dv[this.eH[2]] / 2);
               var20 = 183.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F;
               var11 = (float)(dv[this.eH[2]] / 2);
               var13 = (float)this.go[var3][0];
               var21 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var15 = (float)dv[this.eH[2]];
               var22 = 60.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var6, var16 - var19 + var17 + var12 + var10 + var14 - var18, 347.0F - var20 - var11, var15 + (var13 - var21), (float)dv[this.eH[2]] + var22, 49);
               if (var3 - this.gC[0] <= -1) {
                  var2 = this.gE[-(var3 - this.gC[0]) - 1];
               } else if (var3 - this.gC[0] >= this.gC[1] + 1) {
                  var2 = this.gE[var3 - this.gC[0] - this.gC[1] - 1];
               } else {
                  var2 = 0;
               }

               var1.drawScaledImage(this.ae[8], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 132.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + 132.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F - (float)(dv[this.eH[2]] / 2), 347.0F - 126.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F - (float)(dv[this.eH[2]] / 2), 60.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 60.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + (float)dv[this.eH[2]], 60.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F + (float)dv[this.eH[2]], var2 - 1 + 73);
            }
         }

         if (var3 - this.gC[0] >= 0 && var3 - this.gC[0] <= this.gC[1]) {
            if (var3 - this.gC[0] < this.gB[1]) {
               var2 = this.ag[var3 - this.gC[0]].a();
               var1.drawScaledImage(this.ag[var3 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F);
               var6 = this.ae[8];
               var18 = (float)this.getWidth() / 2.0F;
               var16 = (float)this.go[var3][0] / 2.0F;
               var14 = (float)(this.gy * var3);
               var12 = (float)this.eh[0];
               var17 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
               var15 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
               var1.drawScaledImage(var6, 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var18 - var16 + var14 + var12 + var10 + var17 + var15, 347.0F - 102.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 56);
               var6 = this.ae[8];
               var18 = (float)this.getWidth() / 2.0F;
               var15 = (float)this.go[var3][0] / 2.0F;
               var16 = (float)(this.gy * var3);
               var17 = (float)this.eh[0];
               var1.drawScaledImage(var6, 180.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + var18 - var15 + var16 + var17 + var10, 347.0F - 138.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 138.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 34.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 57);
            } else if (var3 - this.gC[0] < this.gB[0]) {
               if (this.bq[this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][15]] < this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][0]) {
                  var2 = this.ag[var3 - this.gC[0]].a();
                  var1.drawScaledImage(this.ag[var3 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F);
                  var1.setImageColor(255, 255, 255);
                  var6 = this.ae[8];
                  var15 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var3][0] / 2.0F;
                  var18 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var14 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var12 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
                  var1.drawScaledImage(var6, 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var15 - var17 + var18 + var16 + var10 + var14 + var12, 347.0F - 102.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 56);
                  var6 = this.ae[8];
                  var15 = (float)this.getWidth() / 2.0F;
                  var18 = (float)this.go[var3][0] / 2.0F;
                  var17 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var1.drawScaledImage(var6, 180.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + var15 - var18 + var17 + var16 + var10, 347.0F - 138.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 138.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 34.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 57);
                  if (this.fS[3] == 0) {
                     var1.setImageColor(0, 0, 0);
                  }
               } else if (this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                  var1.setColor(255, 255, 255);
                  var2 = this.ag[var3 - this.gC[0]].a();
                  var1.drawScaledImage(this.ag[var3 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F);
                  var1.setImageColor(255, 255, 255);
                  var6 = this.ae[8];
                  var14 = (float)this.getWidth() / 2.0F;
                  var12 = (float)this.go[var3][0] / 2.0F;
                  var17 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var15 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var18 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
                  var1.drawScaledImage(var6, 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var14 - var12 + var17 + var16 + var10 + var15 + var18, 347.0F - 102.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 56);
                  var6 = this.ae[8];
                  var18 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var3][0] / 2.0F;
                  var15 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var1.drawScaledImage(var6, 180.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + var18 - var17 + var15 + var16 + var10, 347.0F - 138.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 138.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 34.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 57);
                  if (this.fS[3] == 0) {
                     var1.setImageColor(0, 0, 0);
                  }
               } else {
                  var6 = this.ae[8];
                  var15 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var3][0] / 2.0F;
                  var18 = (float)(this.gy * var3);
                  var12 = (float)this.eh[0];
                  var14 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var16 = 6.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
                  var1.drawScaledImage(var6, 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var15 - var17 + var18 + var12 + var10 + var14 + var16, 347.0F - 102.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 56);
                  var1.setColor(255, 255, 255);
                  if (this.bw[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                     Texture.b(this.cT[this.bK[var3 - this.gC[0] - this.gB[1]]][0][0], 30);
                  } else {
                     Texture.b(this.cT[this.bK[var3 - this.gC[0] - this.gB[1]]][1][0], 30);
                  }

                  var2 = this.ag[var3 - this.gC[0]].a();
                  var1.drawScaledImage(this.ag[var3 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F);
                  var1.setImageColor(255, 255, 255);
               }
            } else {
               var1.setColor(255, 255, 255);
               var2 = this.ag[var3 - this.gC[0]].a();
               var1.drawScaledImage(this.ag[var3 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 + 328.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F, 347.0F - 254.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, (float)var2 * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 30.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F);
            }

            var6 = this.ae[var3 + 11 - this.gC[0]];
            var15 = (float)this.getWidth() / 2.0F;
            var16 = (float)this.go[var3][0] / 2.0F;
            var17 = (float)(this.gy * var3);
            var18 = (float)this.eh[0];
            var1.drawScaledImage(var6, 328.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var15 - var16 + var17 + var18 + var10, 347.0F - 219.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 328.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 328.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 114.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 0);
            var1.setImageColor(255, 255, 255);
            var2 = 0;
            this.eH[1] = 0;
            if (var3 - this.gC[0] < this.gB[1]) {
               var4 = hn;
               var2 = var4;
               if (this.bd == 0) {
                  this.eH[1] = 1;
                  var2 = var4;
               }
            } else if (var3 - this.gC[0] < this.gB[0]) {
               if (this.bq[this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][15]] < this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][0]) {
                  this.eH[1] = 1;
                  var2 = 0;
               } else if (this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                  this.eH[1] = 1;
                  var2 = this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][1];
               } else {
                  this.eH[1] = 1;
                  var2 = this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][(this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]] + 1) / 10 + 1);
               }
            } else if (var3 - this.gC[0] - this.gB[0] >= 0) {
               if (var3 - this.gC[0] - this.gB[0] == 0) {
                  var2 = ac[0][(this.bx[0] + 1) % 10];
                  var4 = (this.bx[0] + 1) / 10;
                  this.eH[1] = 1;
                  var2 *= var4 + 1;
               } else {
                  var2 = ac[var3 - this.gC[0] - this.gB[0]][(this.bx[var3 - this.gC[0] - this.gB[0] + 1] + 1) % 10] * ((this.bx[var3 - this.gC[0] - this.gB[0] + 1] + 1) / 10 + 1);
                  this.eH[1] = 1;
               }
            }

            if (var3 - this.gC[0] < this.gB[1]) {
               this.eH[3] = 0;
            } else if (var3 - this.gC[0] < this.gB[0]) {
               if (this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]] + 1 >= this.bi) {
                  this.eH[1] = 0;
               }

               if (this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][12] == 0) {
                  this.eH[3] = 0;
               } else if (this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                  this.eH[3] = 1;
               } else {
                  this.eH[3] = 0;
               }
            } else {
               if (var3 - this.gC[0] - this.gB[0] == 0) {
                  var4 = this.bx[var3 - this.gC[0] - this.gB[0]] + 1;
               } else {
                  var4 = this.bx[var3 + 1 - this.gC[0] - this.gB[0]] + 1;
               }

               if (var3 - this.gC[0] - this.gB[0] == 1) {
                  if (var4 >= 10) {
                     this.eH[1] = 0;
                  }
               } else if (var4 >= this.bi) {
                  this.eH[1] = 0;
               }

               this.eH[3] = 0;
            }

            var4 = this.gC[0];
            if (this.eH[1] != 1) {
               var4 = var2;
            } else {
               var6 = this.ae[8];
               var18 = (float)this.getWidth() / 2.0F;
               var17 = (float)this.go[var3][0] / 2.0F;
               var12 = (float)(this.gy * var3);
               var16 = (float)this.eh[0];
               var15 = 107.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
               var1.drawScaledImage(var6, 57.0F * ((float)this.go[var3][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var18 - var17 + var12 + var16 + var10 + var15, 347.0F - 88.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 213.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F - 213.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 45.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 72);
               var5 = 0;

               do {
                  var6 = this.ae[5];
                  var14 = (float)this.getWidth() / 2.0F;
                  var16 = (float)this.go[var3][0] / 2.0F;
                  var17 = (float)(this.gy * var3);
                  var15 = (float)this.eh[0];
                  var12 = (float)var5;
                  var13 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var18 = 281.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var6, (-117.0F + (float)var5 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var14 - var16 + var17 + var15 + var10 - var12 * var13 + var18, 347.0F - 86.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 30.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 30.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, var2 % 10);
                  var4 = var2 / 10;
                  var9 = var5 + 1;
                  var5 = var9;
                  var2 = var4;
               } while(var4 > 0);

               if (var9 >= 5) {
                  if (this.eH[3] == 0) {
                     var6 = this.ae[0];
                     var15 = (float)this.getWidth() / 2.0F;
                     var14 = (float)this.go[var3][0] / 2.0F;
                     var13 = (float)(this.gy * var3);
                     var16 = (float)this.eh[0];
                     var17 = (float)var9;
                     var18 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var12 = 241.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var6, (-79.0F + (float)var9 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var15 - var14 + var13 + var16 + var10 - var17 * var18 + var12, 347.0F - 83.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 36.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 23);
                     var6 = this.ae[5];
                     var16 = (float)this.getWidth() / 2.0F;
                     var15 = (float)this.go[var3][0] / 2.0F;
                     var17 = (float)(this.gy * var3);
                     var18 = (float)this.eh[0];
                     var14 = (float)var9;
                     var12 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var13 = 194.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var6, (-30.0F + (float)var9 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var16 - var15 + var17 + var18 + var10 - var14 * var12 + var13, 347.0F - 75.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 28.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 15);
                  } else {
                     var6 = this.ae[0];
                     var13 = (float)this.getWidth() / 2.0F;
                     var15 = (float)this.go[var3][0] / 2.0F;
                     var14 = (float)(this.gy * var3);
                     var18 = (float)this.eh[0];
                     var12 = (float)var9;
                     var17 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var16 = 243.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var6, (-81.0F + (float)var9 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var13 - var15 + var14 + var18 + var10 - var12 * var17 + var16, 347.0F - 86.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 55.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 21);
                     var6 = this.ae[5];
                     var16 = (float)this.getWidth() / 2.0F;
                     var13 = (float)this.go[var3][0] / 2.0F;
                     var14 = (float)(this.gy * var3);
                     var17 = (float)this.eh[0];
                     var15 = (float)var9;
                     var18 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var12 = 194.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var6, (-30.0F + (float)var9 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var16 - var13 + var14 + var17 + var10 - var15 * var18 + var12, 347.0F - 75.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 28.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 15);
                  }
               } else if (this.eH[3] == 0) {
                  var6 = this.ae[0];
                  var13 = (float)this.getWidth() / 2.0F;
                  var12 = (float)this.go[var3][0] / 2.0F;
                  var18 = (float)(this.gy * var3);
                  var17 = (float)this.eh[0];
                  var14 = (float)0;
                  var15 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var16 = 125.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var6, (39.0F + (float)0 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var13 - var12 + var18 + var17 + var10 - var14 * var15 + var16, 347.0F - 83.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 36.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 23);
                  var6 = this.ae[5];
                  var18 = (float)this.getWidth() / 2.0F;
                  var15 = (float)this.go[var3][0] / 2.0F;
                  var12 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var14 = (float)0;
                  var17 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var13 = 78.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var6, (86.0F + (float)0 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var18 - var15 + var12 + var16 + var10 - var14 * var17 + var13, 347.0F - 75.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 28.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 15);
               } else {
                  var6 = this.ae[0];
                  var14 = (float)this.getWidth() / 2.0F;
                  var18 = (float)this.go[var3][0] / 2.0F;
                  var12 = (float)(this.gy * var3);
                  var13 = (float)this.eh[0];
                  var16 = (float)0;
                  var17 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var15 = 127.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var6, (37.0F + (float)0 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var14 - var18 + var12 + var13 + var10 - var16 * var17 + var15, 347.0F - 86.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 55.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 62.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 21);
                  var6 = this.ae[5];
                  var14 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var3][0] / 2.0F;
                  var13 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var12 = (float)0;
                  var18 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var15 = 78.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var6, (86.0F + (float)0 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var14 - var17 + var13 + var16 + var10 - var12 * var18 + var15, 347.0F - 75.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 47.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 28.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 15);
               }
            }

            if (var3 - this.gC[0] >= this.gB[1] && var3 - this.gC[0] < this.gB[0] && this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
               if (this.fS[3] == 0) {
                  var6 = this.ae[8];
                  var17 = (float)this.getWidth() / 2.0F;
                  var18 = (float)this.go[var3][0] / 2.0F;
                  var15 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var1.drawScaledImage(var6, 125.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + var17 - var18 + var15 + var16 + var10, 347.0F - 146.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 187.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 53.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 58);
               } else if (this.aL >= this.bJ[this.bK[var3 - this.gC[0] - this.gB[1]]][1]) {
                  var6 = this.ae[8];
                  var17 = (float)this.getWidth() / 2.0F;
                  var18 = (float)this.go[var3][0] / 2.0F;
                  var15 = (float)(this.gy * var3);
                  var16 = (float)this.eh[0];
                  var1.drawScaledImage(var6, 125.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + var17 - var18 + var15 + var16 + var10, 347.0F - 146.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 187.0F * ((float)this.go[var3][0] * 10000.0F / 328.0F) / 10000.0F, 53.0F * ((float)this.go[var3][1] * 10000.0F / 263.0F) / 10000.0F, 58);
               }
            }

            var2 = var4;
            if (var3 - this.gC[0] >= this.gB[1]) {
               var2 = var4;
               if (var3 - this.gC[0] < this.gB[0]) {
                  for(var2 = 0; var2 < this.getLength(this.bk); ++var2) {
                     if (this.bk[var2] == this.bK[var3 - this.gC[0] - this.gB[1]] + 2) {
                        var6 = this.ae[9];
                        var18 = (float)this.getWidth() / 2.0F;
                        var12 = (float)this.go[var3][0] / 2.0F;
                        var15 = (float)(this.gy * var3);
                        var17 = (float)this.eh[0];
                        var16 = 223.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                        var1.drawScaledImage(var6, -59.0F * ((float)this.go[var3][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var18 - var12 + var15 + var17 + var10 + var16, 347.0F - 223.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 0);
                     }
                  }
               }
            }

            if (var3 - this.gC[0] < this.gB[1]) {
               this.eH[1] = 0;
            } else if (var3 - this.gC[0] < this.gB[0]) {
               var2 = this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]] + 1;
               if (this.bu[this.bK[var3 - this.gC[0] - this.gB[1]]] == 0) {
                  this.eH[1] = 0;
               } else {
                  this.eH[1] = 2;
               }
            } else if (var3 - this.gC[0] - this.gB[0] >= 0) {
               if (var3 - this.gC[0] - this.gB[0] == 0) {
                  var2 = this.bx[var3 - this.gC[0] - this.gB[0]] + 1;
                  this.eH[1] = 1;
               } else {
                  var2 = this.bx[var3 + 1 - this.gC[0] - this.gB[0]] + 1;
                  this.eH[1] = 1;
               }
            } else {
               this.eH[1] = 0;
            }

            if (var3 - this.gC[0] == this.gB[0] + 1 && var2 >= 10 && this.fS[3] == 0) {
               var1.drawScaledImage(this.ae[8], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 - (float)1 * (43.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F) + 290.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + ((float)1 * (43.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F) - 126.0F) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 347.0F - 144.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 58.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 58.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 35.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 52);
            } else if (var2 < this.bi) {
               label588: {
                  byte var23 = 0;
                  var4 = var23;
                  var5 = var2;
                  if (this.eH[1] != 1) {
                     if (this.eH[1] != 2) {
                        break label588;
                     }

                     var5 = var2;
                     var4 = var23;
                  }

                  do {
                     var6 = this.ae[5];
                     var18 = (float)this.getWidth() / 2.0F;
                     var16 = (float)this.go[var3][0] / 2.0F;
                     var15 = (float)(this.gy * var3);
                     var12 = (float)this.eh[0];
                     var17 = (float)var4;
                     var14 = 29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var13 = 281.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var6, (-117.0F + (float)var4 * (29.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var18 - var16 + var15 + var12 + var10 - var17 * var14 + var13, 347.0F - 152.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 30.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 30.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, var5 % 10);
                     var2 = var5 / 10;
                     ++var4;
                     var5 = var2;
                  } while(var2 > 0);
               }
            } else if (this.eH[1] == 1 || this.eH[1] == 2) {
               var1.drawScaledImage(this.ae[8], (float)this.getWidth() / 2.0F - (float)this.go[var3][0] / 2.0F + (float)(this.gy * var3) + (float)this.eh[0] + var10 - (float)1 * (43.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F) + 290.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F + ((float)1 * (43.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F) - 126.0F) * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 347.0F - 144.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 58.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 58.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 35.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 52);
            }

            if (this.eH[1] == 2) {
               if (var3 - this.gC[0] < this.gB[0]) {
                  int var10000 = this.bv[this.bK[var3 - this.gC[0] - this.gB[1]]];
               }

               var2 = this.gC[0];
            }
         }

         var1.setColor(0, 0, 0);
         if (this.gI && this.fS[0] == var3) {
            var1.setAlpha(cC[this.eH[0]] * 255 / 100);
         } else {
            var1.setAlpha((255 - this.go[var3][0] * 100 / 328 * 255 / 100) * 2);
         }

         if (var3 - this.gC[0] > -1 && var3 - this.gC[0] < this.gC[1] + 1) {
            var1.fillRect((float)(this.getWidth() / 2 - this.go[var3][0] / 2 + this.gy * var3 + this.eh[0]) + var10 + (float)(cC[this.eH[0]] * 328 / 100 / 2), (float)(347 - this.go[var3][1]), (float)(this.go[var3][0] - cC[this.eH[0]] * 328 / 100), (float)this.go[var3][1]);
         }

         if (var3 - this.gC[0] >= 0 && this.gG[var3 - this.gC[0]] == 1) {
            var1.setColor(255, 255, 255);
            var1.setAlpha(this.fQ[5]);
            var1.fillRect((float)(this.getWidth() / 2 - this.go[var3][0] / 2 + this.gy * var3 + this.eh[0]) + var10, (float)(347 - this.go[var3][1]), (float)this.go[var3][0], (float)this.go[var3][1]);
         }
      }

      if ((this.fS[2] <= -1 || this.fS[2] >= this.gC[1] + 1) && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9]) {
         if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
            var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 83, 324, 260, 32);
         } else {
            var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 83, 324, 260, 31);
         }
      }

      for(var4 = 1; var4 < this.gC[0] + 1 + this.gC[1] + this.gC[2]; ++var4) {
         if (this.fS[0] == var4) {
            this.eH[0] = this.gH;
            if (this.fS[5] == 0) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = (float)(-(328 - this.go[var4][0]));
         } else if (this.fS[0] + 1 == var4) {
            this.eH[0] = 0;
            if (this.fS[5] == 1) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = (float)(328 - this.go[var4][0]);
         } else if (this.fS[0] + 2 == var4) {
            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F;
         } else if (this.fS[0] + 3 == var4) {
            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F + (float)(328 - this.go[var4 - 2][0]) / 2.0F;
         } else if (this.fS[0] - 1 == var4) {
            this.eH[0] = 0;
            if (this.fS[5] == -1) {
               this.eH[2] = this.fx[2];
            } else {
               this.eH[2] = 0;
            }

            var10 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F);
         } else {
            if (this.fS[0] - 2 != var4) {
               continue;
            }

            this.eH[0] = 0;
            this.eH[2] = 0;
            var10 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F);
         }

         if (var4 - this.gC[0] > -1 && var4 - this.gC[0] < this.gC[1] + 1) {
            if (var4 - this.gC[0] >= 0 && var4 - this.gC[0] < this.gB[0] && var4 - this.gC[0] >= this.gB[1] && this.bq[this.bJ[this.bK[var4 - this.gC[0] - this.gB[1]]][15]] >= this.bJ[this.bK[var4 - this.gC[0] - this.gB[1]]][0] && this.bu[this.bK[var4 - this.gC[0] - this.gB[1]]] == 0 && this.fQ[3] % 8 / 4 == 0) {
               var6 = this.am;
               var18 = (float)this.getWidth() / 2.0F;
               var15 = (float)this.go[var4][0] / 2.0F;
               var12 = (float)(this.gy * var4);
               var16 = (float)this.eh[0];
               var17 = 269.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var1.drawScaledImage(var6, -135.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var10 + var18 - var15 + var12 + var16 + var17, 347.0F - 303.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
            }
         } else {
            var2 = 0;
            if (var4 - this.gC[0] <= -1) {
               var2 = -(var4 - this.gC[0]) - 1;
            } else if (var4 - this.gC[0] >= this.gC[1] + 1) {
               var2 = var4 - this.gC[0] - (this.gC[1] + 1);
            }

            if (this.bC[this.gE[var2]] == 0 && this.fQ[3] % 8 / 4 == 0) {
               var6 = this.am;
               var16 = (float)this.getWidth() / 2.0F;
               var17 = (float)this.go[var4][0] / 2.0F;
               var12 = (float)(this.gy * var4);
               var18 = (float)this.eh[0];
               var15 = 269.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var1.drawScaledImage(var6, -135.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var10 + var16 - var17 + var12 + var18 + var15, 347.0F - 303.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
            }
         }
      }

      if (this.bq[0] >= 48 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && this.fS[2] >= this.gB[1] && this.fS[2] < this.gB[0] && this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 >= 10) {
         var1.drawScaledImageI(this.ae[8], this.getWidth() / 2 - 164 + 285 - dv[this.fx[1]] / 2, 304 - dv[this.fx[1]] / 2, dv[this.fx[1]] + 69, dv[this.fx[1]] + 69, 46);
      }

      var1.setImageAlpha(127);
      if (this.fS[2] > 1 - this.gC[0]) {
         var1.drawScaledImageI(this.ae[10], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 171, 0);
      }

      if (this.fS[2] < this.gC[1] + this.gC[2]) {
         var1.setImageOrientation(1);
         var1.drawScaledImageI(this.ae[10], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30))) + this.excessWidth, 171, 0);
      }

      var1.setImageOrientation(0);
      var1.setImageAlpha(255);
      if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
         var4 = -this.gC[1];
         var2 = this.gC[1];
         var3 = 0;

         do {
            if (this.fS[2] == var3) {
               var1.setImageColor(255, 255, 255);
               var1.setImageAlpha(255);
            } else {
               var1.setImageColor(0, 0, 0);
               var1.setImageAlpha(200);
            }

            var1.drawScaledImageI(this.ae[6], this.getWidth() / 2 - 6 + var4 * 10, 60, 0);
            var4 += 2;
            var5 = var2 - 1;
            ++var3;
            var2 = var5;
         } while(var5 >= 0);
      }

      var1.setImageColor(255, 255, 255);
      var1.setImageAlpha(255);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var6 = this.af[0];
      var2 = this.getWidth() / 2;
      var1.drawScaledImageI(var6, this.fP + var2, 0, 572, 637, 1);
      var2 = 0;
      if (this.fR[0] == 0) {
         var2 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var2 = cv[this.fQ[0]];
      } else {
         var4 = this.fR[0];
      }

      var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 355, 0);
      if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var2, 355, 191, 2);
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
         } else {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 8);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 2);
      }

      var6 = this.ae[0];
      int var7 = this.fw[5][0];
      int var8 = dv[this.fx[5]] / 2;
      var2 = this.fw[5][1];
      var4 = dv[this.fx[5]] / 2;
      var9 = this.fw[5][2];
      var5 = dv[this.fx[5]];
      var3 = this.fw[5][3];
      var1.drawScaledImageI(var6, var7 - var8, var2 - var4, var5 + var9, dv[this.fx[5]] + var3, 9);
      var1.drawScaledImageI(this.ae[0], this.fw[5][0] + 4 - dv[this.fx[5]] / 2, this.fw[5][1] + 17 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[13] && !this.eb && this.eE[10]) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var2 = this.aY;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 6, var2 % 10);
         var3 = var2 / 10;
         ++var4;
         var2 = var3;
      } while(var3 > 0);

      var6 = this.ae[0];
      var2 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (633 - var2), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      if (this.be >= 1) {
         var6 = this.ae[0];
         var2 = dv[this.fx[15]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (681 - var2), 23 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 27, dv[this.fx[15]] + 26, 18);
      }

      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      if (this.be >= 1) {
         var6 = this.ae[0];
         var2 = dv[this.fx[13]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (344 - var2), 590 - dv[this.fx[13]] / 2, dv[this.fx[13]] + 247, dv[this.fx[13]] + 48, 22);
         if (this.be == 1 && this.fQ[3] % 8 / 4 == 0) {
            var1.drawScaledImageI(this.am, this.excessWidth + 312, 550, 80, 80, 0);
         }
      }

      var6 = this.ae[0];
      var2 = dv[this.fx[14]] / 2;
      var1.drawScaledImageI(var6, this.excessWidth + (688 - var2), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var6 = this.ae[0];
         var2 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var6, this.excessWidth + (733 - var2), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var2 = this.aL;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 592, var2 % 10);
         var3 = var2 / 10;
         ++var4;
         var2 = var3;
      } while(var3 > 0);

   }

   void n(TextureRenderer var1) {
      int var2;
      for(var2 = 0; var2 < 3; ++var2) {
         var1.drawScaledImageI(this.aF[1], (var2 - 1) * (this.excessWidth + 480) + 0, 0, this.excessWidth + 484, 640, 21);
      }

      var1.setColor(255, 255, 255);
      var1.drawScaledImage(this.ag[0], 31, 118, 0);
      var1.drawScaledImage(this.ag[1], 74, 168, 0);

      int var3;
      Texture var4;
      int var5;
      for(var2 = 0; var2 < 30; ++var2) {
         var4 = this.aF[1];
         var5 = this.getWidth() / 2;
         var3 = this.gy;
         var1.drawScaledImageI(var4, this.eh[0] + var5 - 99 + var3 * var2, 244, 198, 199, 18);
      }

      for(var2 = 0; var2 < 30; ++var2) {
         if (var2 == 29) {
            if (this.bn == 0) {
               var1.drawScaledImageI(this.aF[1], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 14, 311, 165, 113, this.ho[var2][0] + 9);
            } else {
               var1.drawScaledImageI(this.aF[1], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 14, 311, 165, 113, this.ho[var2 + 1][0] + 9);
            }
         } else {
            var1.drawScaledImageI(this.aF[1], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 14, 311, 165, 113, this.ho[var2][0] + 9);
         }
      }

      for(var2 = 0; var2 < 30; ++var2) {
         if (var2 == 29) {
            if (this.bn == 0) {
               var3 = this.ho[var2][0];
            } else {
               var3 = this.ho[var2 + 1][0];
            }
         } else if (this.ho[var2][0] == 0) {
            var5 = this.ho[var2][1];
            var3 = 0;

            while(true) {
               var5 /= 10;
               if (var5 <= 0) {
                  --var3;
                  var5 = this.ho[var2][1];

                  int var6;
                  int var7;
                  do {
                     var1.drawScaledImageI(this.ae[5], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 99 - 15 - var3 * 14, 366, var5 % 10);
                     var6 = var5 / 10;
                     var7 = var3 + 2;
                     var5 = var6;
                     var3 = var7;
                  } while(var6 > 0);

                  var1.drawScaledImageI(this.ae[5], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 99 - 15 - var7 * 14 - 2, 366, 16);
                  break;
               }

               --var3;
            }
         }

         if (this.bm[var2] >= 2) {
            var1.drawScaledImageI(this.aF[1], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 21, 293, 19);
         }

         var1.setColor(255, 255, 255);
      }

      var3 = 0;

      for(var2 = 0; var2 < 30; ++var2) {
         var3 = var2;
         if (this.bm[var2] == 0) {
            break;
         }

         var3 = var2 + 1;
      }

      for(var2 = 0; var2 < 30; ++var2) {
         var1.setColor(0, 0, 0);
         if (var3 - 1 == var2) {
            var1.drawScaledImage(this.ag[4], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 99, 267, 1);
         } else if (var3 == var2) {
            var1.drawScaledImage(this.ag[5], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 99, 267, 1);
         }
      }

      if (!this.eE[0] && this.bn == 0) {
         var1.drawScaledImageI(this.aF[1], this.eh[2] + 633 + this.excessWidth, 331, 20);
         this.aG[0].a(this.aH[0], this.fQ[0]);
         var1.setTextures(this.aG[0], this.eh[2] + 774 + this.excessWidth, 470);
         var1.setColor(0, 0, 0);
         var1.drawScaledImage(this.ag[2], this.eh[2] + 653 + this.excessWidth, 351);
         var1.drawScaledImage(this.ag[3], this.eh[2] + 653 + this.excessWidth, 381);
         var1.setColor(255, 255, 255);
         var1.drawScaledImage(this.ag[2], this.eh[2] + 650 + this.excessWidth, 348);
         var1.drawScaledImage(this.ag[3], this.eh[2] + 650 + this.excessWidth, 378);
      }

      var1.setImageOrientation(0);
      if (!this.gu && this.fQ[1] >= this.aH[1].a()) {
         var1.setImageAlpha(127);
         if (this.hq[2] > 0) {
            var1.drawScaledImageI(this.ae[10], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 293, 0);
         }

         var1.setImageOrientation(1);
         if (this.hq[2] < 29) {
            var1.drawScaledImageI(this.ae[10], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30))) + this.excessWidth, 293, 0);
         }

         var1.setImageOrientation(0);
         var1.setImageAlpha(255);
      }

      var1.setImageOrientation(0);
      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      var4 = this.af[2];
      var2 = dv[this.fx[0]] / 2;
      var1.drawScaledImageI(var4, this.excessWidth / 2 + (225 - var2), 493 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 381, dv[this.fx[0]] + 72, 3);
      var4 = this.ae[0];
      var2 = dv[this.fx[0]] / 2;
      var1.drawScaledImageI(var4, this.excessWidth / 2 + (288 - var2), 502 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 254, dv[this.fx[0]] + 55, 1);
      if (!this.gu && this.fQ[1] >= this.aH[1].a()) {
         var4 = this.af[2];
         var2 = dv[this.fx[0]] / 2;
         var1.drawScaledImageI(var4, this.excessWidth / 2 + (225 - var2), 493 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 381, dv[this.fx[0]] + 72, this.fQ[4] % 4 / 2 + 4);
      }

      var1.drawScaledImageI(this.ae[2], 8, 3, 1);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var2 = this.aY;
      var3 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var3 * 29 + this.excessWidth, 6, var2 % 10);
         var5 = var2 / 10;
         ++var3;
         var2 = var5;
      } while(var5 > 0);

      var4 = this.ae[0];
      var2 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var4, this.excessWidth + (633 - var2), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      var4 = this.ae[0];
      var2 = dv[this.fx[14]] / 2;
      var1.drawScaledImageI(var4, this.excessWidth + (688 - var2), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var2 = this.aL;
      var3 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var3 * 29 + this.excessWidth, 592, var2 % 10);
         var5 = var2 / 10;
         ++var3;
         var2 = var5;
      } while(var5 > 0);

      for(var2 = 0; var2 < 30; ++var2) {
         if (this.bm[var2] == 1) {
            this.aG[1].a(this.aH[1], this.fQ[1]);
            var1.setTextures(this.aG[1], this.getWidth() / 2 - 99 + this.gy * var2 + this.eh[0] + 21, 293);
         }
      }

   }

   boolean enemyGuideProcess() {
      boolean var1 = false;
      int[] var2;
      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eb) {
         var2 = this.eh;
         var2[0] += this.ek[0];
         var2 = this.eh;
         var2[1] -= this.ek[0];
         var2 = this.ek;
         var2[0] = (int)((double)var2[0] * 0.9);
         if (this.eh[0] >= this.gy / 2 - 20) {
            this.eh[0] = this.gy / 2 - 20;
            this.eh[1] = this.gy * 100;
            this.ek[0] = 0;
         } else if (this.eh[0] < -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) - this.gy + this.gy / 2 - 20)) {
            this.eh[0] = -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) - this.gy + this.gy / 2 - 20);
            this.ek[0] = 0;
            this.eh[1] = this.gy * 100;
         }

         if (this.R() && !this.eb) {
            if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
               this.ek[0] = 0;
            } else {
               this.hI = true;
            }

            if (this.hI) {
               this.ek[0] = this.K() - this.O();
               if (this.ek[0] != 0 && !this.eE[9]) {
                  this.eE[9] = true;
               }
            }
         } else {
            this.hI = false;
            if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
               this.ek[0] = 0;
               if (this.eh[0] % this.gy != 0) {
                  if (-this.eh[0] >= 0) {
                     if (-this.eh[0] % this.gy >= this.gy / 2) {
                        this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                        if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                           this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                        }
                     } else {
                        this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                        if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                           this.eh[0] = this.eh[0] / this.gy * this.gy;
                        }
                     }
                  } else if (-this.eh[0] % this.gy >= this.gy / 2) {
                     this.eh[0] -= (this.eh[0] % this.gy + this.gy - 4) / 4;
                     if ((this.eh[0] % this.gy + this.gy - 4) / 4 == 0) {
                        this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                     }
                  } else {
                     this.eh[0] -= (this.eh[0] % this.gy + 4) / 4;
                     if ((this.eh[0] % this.gy + 4) / 4 == 0) {
                        this.eh[0] = this.eh[0] / this.gy * this.gy;
                     }
                  }
               }

               if (!this.S()) {
                  this.eE[9] = false;
               }
            }
         }

         if (this.ek[0] < 0) {
            if (this.fs[0] != -(this.eh[0] / this.gy)) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.ek[0] > 0) {
            if (this.fs[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[3]) {
            Sound.getInstance().play(10);
            this.gp[3] = true;
         }

         if (this.fs[0] != -(this.eh[0] / this.gy) && -(this.eh[0] / this.gy) >= 0) {
            this.fs[0] = -(this.eh[0] / this.gy);
         }

         if (this.fs[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
            this.fs[1] = (this.gy * 100 + this.eh[0]) / this.gy;
         }

         if (-(this.eh[0] - this.gy / 2) / this.gy != this.fs[2]) {
            this.fs[2] = -(this.eh[0] - this.gy / 2) / this.gy;
            this.ft = -1;
         }
      }

      int var10002;
      if (this.bt[dt[this.fs[0]] - 2] != 0) {
         if (this.bR[1][0][1] == 0) {
            var2 = this.bR[1][0];
            var10002 = var2[2]++;
            var2 = this.bR[1][0];
            var2[3] += this.bR[1][0][10];
            if (this.bR[1][0][3] >= 0) {
               this.bR[1][0][3] = 0;
            }

            if (this.bR[1][0][2] / this.ax[0][0].b() >= 4) {
               this.bR[1][0][1] = 1;
            }
         } else if (this.bR[1][0][1] == 1) {
            if (this.ax[0][1].b() == 0) {
               this.bR[1][0][2] = (this.bR[1][0][2] + 1) % 1;
            } else {
               this.bR[1][0][2] = (this.bR[1][0][2] + 1) % this.ax[0][1].b();
            }
         } else if (this.bR[1][0][1] == 2) {
            this.bR[1][0][2] = (this.bR[1][0][2] + 1) % this.ax[0][2].a();
         } else if (this.bR[1][0][1] == 3) {
            this.bR[1][0][2] = (this.bR[1][0][2] + 1) % 24;
            var2 = this.bR[1][0];
            var2[4] += co[this.bR[1][0][2]];
            var2 = this.bR[1][0];
            var2[3] -= 60;
         } else if (this.bR[1][0][1] == 4) {
            this.bR[1][0][2] = (this.bR[1][0][2] + 1) % this.getLength(eT);
            var2 = this.bR[1][0];
            var2[4] -= this.bR[1][0][10];
            if (this.bR[1][0][4] <= this.bR[1][0][24]) {
               var2 = this.bR[1][0];
               var2[25] -= this.bR[1][0][26];
               if (this.bR[1][0][25] <= 0) {
                  this.bR[1][0][25] = 0;
               }
            }

            var2 = this.bR[1][0];
            var2[29] += this.bR[1][0][28];
            if (this.bR[1][0][25] <= 0) {
               this.bR[1][0][1] = 0;
               this.bR[1][0][2] = 0;
               this.bR[1][0][27] = 0;
               this.bR[1][0][28] = 0;
               this.bR[1][0][29] = 0;
               this.bR[1][0][4] = 0;
               this.bR[1][0][8] = 10;
            }
         } else if (this.bR[1][0][1] == 5) {
            this.bR[1][0][2] = (this.bR[1][0][2] + 1) % 12;
         }

         if (this.bR[1][0][2] == 0) {
            if (this.bR[1][0][1] == 1) {
               this.bR[1][0][1] = 2;
            } else if (this.bR[1][0][1] == 2) {
               this.bR[1][0][1] = 0;
            } else if (this.bR[1][0][1] == 3) {
               if (this.bR[1][0][8] > 0) {
                  this.bR[1][0][1] = 0;
                  this.fu = 0;
               } else {
                  this.bR[1][0][1] = 4;
                  this.bR[1][0][2] = 0;
                  this.bR[1][0][10] = (aMath.rand(12) + 10) * 10;
                  this.bR[1][0][24] = -2000;
                  this.bR[1][0][25] = 255;
                  this.bR[1][0][26] = this.bR[1][0][10] / 10 + aMath.rand(10);
                  this.bR[1][0][27] = aMath.rand(40) + 20;
                  this.bR[1][0][28] = aMath.rand(10) + 5;
                  this.bR[1][0][29] = 0;
               }
            }
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eE[9] && !this.eb) {
         if (this.bt[dt[this.fs[0]] - 2] != 0 && this.S() && this.b(this.getWidth() / 2 - 200 + this.bR[1][0][3] / 10, 100, 400, 280) && this.bR[1][0][1] != 3 && this.bR[1][0][1] != 4) {
            this.bR[1][0][1] = 3;
            this.bR[1][0][2] = 0;
         }

         if (this.fx[5] >= 1) {
            var2 = this.fx;
            var10002 = var2[5]++;
            if (this.fx[5] > this.getLength(dv) - 1) {
               this.fx[5] = 0;
               this.eE[1] = true;
            }
         } else if (this.fx[13] >= 1) {
            var2 = this.fx;
            var10002 = var2[13]++;
            if (this.fx[13] > this.getLength(dv) - 1) {
               this.fx[13] = 0;
               if (this.be >= 1) {
                  this.eE[13] = true;
               }
            }
         } else if (this.fx[14] >= 1) {
            var2 = this.fx;
            var10002 = var2[14]++;
            if (this.fx[14] > this.getLength(dv) - 1) {
               this.fx[14] = 0;
               if (this.bB[8] == 0) {
                  this.screenTransition();
                  this.gU = true;

                  for(int var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                     this.gV[var3] = 0;
                  }

                  Sound.getInstance().setVolume(50);
                  return var1;
               } else {
                  if (this.aL >= 900000) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 10000;
                  } else {
                     this.screenTransition();
                     this.menuType = 0;
                     this.j = true;
                  }

                  return var1;
               }
            }
         } else {
            if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               if (!this.gp[5]) {
                  Sound.getInstance().play(10);
                  this.gp[5] = true;
               }
            } else {
               this.gp[5] = false;
            }

            if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               Sound.getInstance().play(11);
               var2 = this.fx;
               var10002 = var2[5]++;
            } else if (this.T()) {
               this.fx[5] = 0;
               this.eE[1] = true;
            } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
               Sound.getInstance().play(11);
               var2 = this.fx;
               var10002 = var2[14]++;
            }

            if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
               if (!this.gp[14]) {
                  this.gp[14] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[14] = false;
            }
         }
      }

      this.a(1, this.fs[2]);
      if (this.eE[0]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[0] = this.gm[0] * 2 + 1;
         if (this.gm[0] >= 297) {
            this.gm[0] = 297;
            this.gm[1] /= 2;
            this.fQ[6] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = this.getWidth();
            if (this.gm[1] <= 0) {
               this.eE[0] = false;
               this.fQ[2] = 0;
               this.gQ = 0;
            }
         } else {
            this.fP = fM[this.fQ[2]];
         }
      } else if (this.eE[1]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[1] = this.gm[1] * 2 + 1;
         this.fQ[6] = this.fQ[6] * 2 + 1;
         if (this.gm[1] >= 297) {
            this.gm[1] = 297;
            this.fQ[6] = 126;
            this.gm[0] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = 0;
            if (this.gm[0] <= 0) {
               this.screenTransition();
               this.screen = 5;
               this.fF = -1;
               this.fQ[2] = 0;
               this.eE[1] = false;
               return var1;
            }
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }
      }

      if (this.eE[13]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fP = 0;
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }

         if (this.fQ[2] > this.getLength(fM)) {
            this.fP = 0;
            this.fQ[2] = 0;
            this.screenTransition();
            this.screen = 999;
            this.fF = -1;
            this.gQ = 5;
            return var1;
         }
      }

      var2 = this.fQ;
      var10002 = var2[0]--;
      if (this.fQ[0] <= 0) {
         this.fQ[0] = 0;
      }

      var2 = this.fQ;
      var10002 = var2[3]++;
      if (this.fQ[3] > this.getLength(du) - 1) {
         this.fQ[3] = 0;
      }

      var2 = this.fQ;
      var10002 = var2[4]++;
      var2 = this.fQ;
      var10002 = var2[5]++;
      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && !this.gI && !this.eE[9]) {
         if ((this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
            this.eE[10] = true;
         } else if (this.fx[5] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }
      } else if (this.fx[5] == 0 && !this.eE[1]) {
         this.eE[10] = false;
      }

      var1 = true;
      return var1;
   }

   void legendLoad() {
      byte var1 = 0;

      int var2;
      for(var2 = 0; var2 < this.getLength(this.gp); ++var2) {
         this.gp[var2] = false;
      }

      this.resetTextures();

      for(var2 = 0; var2 < this.getLength(this.ae); ++var2) {
         if (this.ae[var2].isLoaded()) {
            this.ae[var2].reset();
         }
      }

      for(var2 = 0; var2 < this.getLength(this.ag); ++var2) {
         if (this.ag[var2].isLoaded()) {
            this.ag[var2].reset();
         }
      }

      for(var2 = 0; var2 < this.getLength(this.fx); ++var2) {
         this.fx[var2] = 0;
      }

      for(var2 = 0; var2 < this.getLength(this.eK); ++var2) {
         this.eK[var2] = 0;
      }

      for(var2 = 0; var2 < this.getLength(this.hk); ++var2) {
         this.hk[var2] = 0;
      }

      for(var2 = 0; var2 < this.getLength(this.fC); ++var2) {
         this.fC[var2] = 0;
      }

      for(var2 = 0; var2 < this.getLength(this.fy); ++var2) {
         this.fy[var2] = 0;
      }

      for(var2 = 0; var2 < this.getLength(this.fQ); ++var2) {
         this.fQ[var2] = 0;
      }

      this.fw[0][0] = this.excessWidth / 2 + 657;
      this.fw[0][1] = 352;
      this.fw[0][2] = 168;
      this.fw[0][3] = 88;
      if (!this.ae[0].isLoaded()) {
         this.ae[0].load(MyUtility.getString(String.format("img_%03d_intro.png", 45)), MyUtility.getString(String.format("img_%03d_intro.imgcut", 45)));
      }

      if (!this.ae[1].isLoaded()) {
         this.ae[1].load(MyUtility.getString(String.format("img%03d.png", 6)), MyUtility.getString(String.format("img%03d.imgcut", 6)));
      }

      if (this.eQ >= 1) {
         if (!this.aI[this.eQ - 1].isLoaded()) {
            this.aI[this.eQ - 1].load(MyUtility.getString(String.format("i%03d_p.png", this.eQ - 1)), MyUtility.getString(String.format("%03d_p.imgcut", this.eQ - 1)));
         }

         this.aJ.a(String.format("%03d_p.mamodel", this.eQ - 1));

         for(var2 = 0; var2 < this.getLength(this.aK); ++var2) {
            this.aK[var2].load(String.format("%03d_p%02d.maanim", this.eQ - 1, var2));
         }

         this.aJ.a(this.aI);
         this.aJ.a();

         for(var2 = var1; var2 < this.getLength(this.dr[this.eQ - 1]); ++var2) {
            this.ag[var2].a(this.dr[this.eQ - 1][var2], "FONT_SYSTEM_BOLD", 30, 1);
         }
      }

   }

   void o(TextureRenderer var1) {
      float var2 = (float)((this.getWidth() / 960 * 720 - 640) / 2);
      var1.drawScaledImageI(this.ae[0], 0, (int)(-var2), this.getWidth(), (int)(720.0F * ((float)this.getWidth() / 960.0F)), 0);
      var1.drawScaledImageI(this.ae[1], 0, 0 - this.eZ, 1);
      var1.drawScaledImageI(this.ae[1], this.excessWidth / 2 + 128, ds[this.fQ[0]] + 10, 0);
      var1.setColor(0, 0, 0);
      var1.setAlpha(this.fQ[1]);
      if (this.fG[0] == 0) {
         var1.drawRectangle(0, 329, this.getWidth(), 203);
      } else if (this.fG[0] == 1) {
         var1.drawRectangle(0, 241, this.getWidth(), 291);
      }

      Texture var3;
      int var4;
      int var5;
      if (this.fG[0] == 0) {
         var3 = this.af[2];
         var4 = this.eh[0];
         var5 = dv[this.fx[0]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth / 2 + (var4 + 289 - var5), 349 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 381, dv[this.fx[0]] + 72, 3);
         var3 = this.ae[0];
         var4 = this.eh[0];
         var5 = dv[this.fx[0]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth / 2 + (var4 + 345 - var5), 358 - dv[this.fx[0]] / 2, dv[this.fx[0]] + 254, dv[this.fx[0]] + 55, 2);
         var3 = this.af[2];
         var5 = this.eh[0];
         var4 = dv[this.fx[1]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth / 2 + (var5 + 289 - var4), 441 - dv[this.fx[1]] / 2, dv[this.fx[1]] + 381, dv[this.fx[1]] + 72, 3);
         var3 = this.ae[0];
         var5 = this.eh[0];
         var4 = dv[this.fx[1]] / 2;
         var1.drawScaledImageI(var3, this.excessWidth / 2 + (var5 + 345 - var4), 450 - dv[this.fx[1]] / 2, dv[this.fx[1]] + 254, dv[this.fx[1]] + 55, 3);
         if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eE[4] && !this.eb && !this.gu) {
            if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
               var3 = this.af[2];
               var4 = this.eh[0];
               var1.drawScaledImageI(var3, this.excessWidth / 2 + var4 + 289, 349, 381, 72, this.fQ[5] % 4 / 2 + 4);
            } else if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
               var3 = this.af[2];
               var4 = this.eh[0];
               var1.drawScaledImageI(var3, this.excessWidth / 2 + var4 + 289, 441, 381, 72, this.fQ[5] % 4 / 2 + 4);
            }
         }

         if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eE[4] && !this.gu && this.bq[0] >= 7) {
            var3 = this.ae[1];
            var4 = dv[this.fx[6]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth + (677 - var4), 476 - dv[this.fx[6]] / 2, dv[this.fx[6]] + 287, 178, 23);
         }
      } else if (this.fG[0] == 1) {
         for(var5 = 2; var5 < this.gC[0] + this.gC[1]; ++var5) {
            if (this.fG[1] == var5) {
               this.eH[0] = 0;
               this.eH[1] = this.fx[3];
               this.eH[2] = this.fx[4];
               var2 = (float)(-(328 - this.go[var5][0]));
            } else if (this.fG[1] + 1 == var5) {
               this.eH[0] = 0;
               this.eH[1] = 0;
               this.eH[2] = 0;
               var2 = (float)(328 - this.go[var5][0]);
            } else if (this.fG[1] + 2 == var5) {
               this.eH[0] = 0;
               this.eH[1] = 0;
               this.eH[2] = 0;
               var2 = (float)(328 - this.go[var5][0]) + (float)(328 - this.go[var5 - 1][0]) / 2.0F;
            } else if (this.fG[1] + 3 == var5) {
               this.eH[0] = 0;
               this.eH[1] = 0;
               this.eH[2] = 0;
               var2 = (float)(328 - this.go[var5][0]) + (float)(328 - this.go[var5 - 1][0]) / 2.0F + (float)(328 - this.go[var5 - 2][0]) / 2.0F;
            } else if (this.fG[1] - 1 == var5) {
               this.eH[0] = 0;
               this.eH[1] = 0;
               this.eH[2] = 0;
               var2 = -((float)(328 - this.go[var5][0]) + (float)(328 - this.go[var5 + 1][0]) / 2.0F);
            } else {
               if (this.fG[1] - 2 != var5) {
                  continue;
               }

               this.eH[0] = 0;
               this.eH[1] = 0;
               this.eH[2] = 0;
               var2 = -((float)(328 - this.go[var5][0]) + (float)(328 - this.go[var5 + 1][0]) / 2.0F);
            }

            float var6;
            float var7;
            float var8;
            float var9;
            float var10;
            float var11;
            float var12;
            float var13;
            float var14;
            float var15;
            int var16;
            float var17;
            float var18;
            float var19;
            float var20;
            if (var5 <= this.gB[0] + 2) {
               var3 = this.ae[1];
               var6 = (float)this.getWidth() / 2.0F;
               var7 = (float)this.go[var5][0] / 2.0F;
               var8 = (float)(this.gy * var5);
               var9 = (float)this.eh[2];
               var10 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var11 = (float)(dv[this.eH[1]] / 2);
               var12 = (float)this.eh[0];
               var13 = (float)(520 - this.go[var5][1] - dv[this.eH[1]] / 2);
               var14 = (float)this.go[var5][0];
               var15 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var1.drawScaledImage(var3, var12 + (var6 - var7 + var8 + var9 + var2 + var10 - var11), var13, (float)dv[this.eH[1]] + (var14 - var15), (float)(this.go[var5][1] + dv[this.eH[1]]), var5 - 2 + 17);
               var4 = 0;
               var16 = 48;

               label503:
               while(true) {
                  var3 = this.ae[6];
                  var13 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var5][0] / 2.0F;
                  var18 = (float)(this.gy * var5);
                  var8 = (float)this.eh[2];
                  var11 = (float)(286 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                  var15 = (float)(286 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                  var12 = (float)(dv[this.eH[1]] / 2);
                  var9 = (float)this.eh[0];
                  var19 = 52.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                  var10 = (float)(dv[this.eH[1]] / 2);
                  var7 = 18.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                  var6 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                  var14 = (float)dv[this.eH[1]];
                  var20 = 27.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                  var1.drawScaledImage(var3, var9 + (var13 - var17 + var18 + var8 + var2 + var11 + var15 - var12), 520.0F - var19 - var10, var14 + (var7 - var6), (float)dv[this.eH[1]] + var20, var16 % 10 + 14);
                  var16 /= 10;
                  if (var16 <= 0) {
                     var3 = this.ae[6];
                     var18 = (float)this.getWidth() / 2.0F;
                     var13 = (float)this.go[var5][0] / 2.0F;
                     var19 = (float)(this.gy * var5);
                     var12 = (float)this.eh[2];
                     var7 = (float)252 * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                     var17 = (float)252 * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                     var6 = (float)(dv[this.eH[1]] / 2);
                     var11 = (float)this.eh[0];
                     var9 = 52.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                     var14 = (float)(dv[this.eH[1]] / 2);
                     var8 = 18.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                     var10 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                     var15 = (float)dv[this.eH[1]];
                     var20 = 27.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                     var1.drawScaledImage(var3, var11 + (var18 - var13 + var19 + var12 + var2 + var7 + var17 - var6), 520.0F - var9 - var14, var15 + (var8 - var10), (float)dv[this.eH[1]] + var20, 101);
                     var4 = 0;

                     int var21;
                     for(var16 = 0; var16 < this.getLength(this.bs[var5 - 2]); var4 = var21) {
                        var21 = var4;
                        if (this.bs[var5 - 2][cm[var16]] == 3) {
                           var21 = var4 + 1;
                        }

                        ++var16;
                     }

                     byte var24 = 3;
                     var16 = var4;
                     var4 = var24;

                     while(true) {
                        var3 = this.ae[6];
                        var6 = (float)this.getWidth() / 2.0F;
                        var10 = (float)this.go[var5][0] / 2.0F;
                        var12 = (float)(this.gy * var5);
                        var19 = (float)this.eh[2];
                        var8 = (float)(286 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                        var14 = (float)(286 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                        var13 = (float)(dv[this.eH[1]] / 2);
                        var18 = (float)this.eh[0];
                        var11 = 52.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                        var20 = (float)(dv[this.eH[1]] / 2);
                        var15 = 18.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                        var9 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                        var7 = (float)dv[this.eH[1]];
                        var17 = 27.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                        var1.drawScaledImage(var3, var18 + (var6 - var10 + var12 + var19 + var2 + var8 + var14 - var13), 520.0F - var11 - var20, var7 + (var15 - var9), (float)dv[this.eH[1]] + var17, var16 % 10 + 14);
                        var16 /= 10;
                        if (var16 <= 0) {
                           var21 = 0;

                           for(var4 = 0; var4 < this.getLength(this.bs[var5 - 2]); var21 = var16) {
                              var16 = var21;
                              if (this.bs[var5 - 2][cm[var4]] == 3) {
                                 var16 = var21 + 1;
                              }

                              ++var4;
                           }

                           var3 = this.ae[1];
                           var17 = (float)this.getWidth() / 2.0F;
                           var10 = (float)this.go[var5][0] / 2.0F;
                           var15 = (float)(this.gy * var5);
                           var19 = (float)this.eh[2];
                           var14 = 102.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                           var13 = 102.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                           var9 = (float)(dv[this.eH[1]] / 2);
                           var8 = (float)this.eh[0];
                           var7 = 57.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                           var6 = (float)(dv[this.eH[1]] / 2);
                           var12 = 109.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                           var20 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                           var11 = (float)dv[this.eH[1]];
                           var18 = 33.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                           var1.drawScaledImage(var3, var8 + (var17 - var10 + var15 + var19 + var2 + var14 + var13 - var9), 520.0F - var7 - var6, var11 + (var12 - var20), (float)dv[this.eH[1]] + var18, 8);
                           var3 = this.ae[9];
                           var18 = (float)this.getWidth() / 2.0F;
                           var14 = (float)this.go[var5][0] / 2.0F;
                           var15 = (float)(this.gy * var5);
                           var6 = (float)this.eh[2];
                           var17 = 34.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                           var12 = 34.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                           var20 = (float)(dv[this.eH[1]] / 2);
                           var9 = (float)this.eh[0];
                           var8 = 67.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                           var19 = (float)(dv[this.eH[1]] / 2);
                           var13 = 47.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                           var10 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                           var11 = (float)dv[this.eH[1]];
                           var7 = 47.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                           var1.drawScaledImage(var3, var9 + (var18 - var14 + var15 + var6 + var2 + var17 + var12 - var20), 520.0F - var8 - var19, var11 + (var13 - var10), (float)dv[this.eH[1]] + var7, 9);
                           break label503;
                        }

                        ++var4;
                     }
                  }

                  ++var4;
               }
            } else if (var5 >= this.gB[0]) {
               var3 = this.ae[0];
               var6 = (float)this.getWidth() / 2.0F;
               var15 = (float)this.go[var5][0] / 2.0F;
               var9 = (float)(this.gy * var5);
               var13 = (float)this.eh[2];
               var14 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var10 = (float)(dv[this.eH[1]] / 2);
               var8 = (float)this.eh[0];
               var12 = (float)(520 - this.go[var5][1] - dv[this.eH[1]] / 2);
               var11 = (float)this.go[var5][0];
               var7 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var1.drawScaledImage(var3, var8 + (var6 - var15 + var9 + var13 + var2 + var14 - var10), var12, (float)dv[this.eH[1]] + (var11 - var7), (float)(this.go[var5][1] + dv[this.eH[1]]), 6);
               var3 = this.ae[1];
               var14 = (float)this.getWidth() / 2.0F;
               var20 = (float)this.go[var5][0] / 2.0F;
               var10 = (float)(this.gy * var5);
               var15 = (float)this.eh[2];
               var9 = 14.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var19 = 14.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var6 = (float)(dv[this.eH[1]] / 2);
               var13 = (float)this.eh[0];
               var7 = 166.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var12 = (float)(dv[this.eH[1]] / 2);
               var18 = 296.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var17 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var8 = (float)dv[this.eH[1]];
               var11 = 69.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var3, var13 + (var14 - var20 + var10 + var15 + var2 + var9 + var19 - var6), 520.0F - var7 - var12, var8 + (var18 - var17), (float)dv[this.eH[1]] + var11, 5);
               var3 = this.ae[0];
               var13 = (float)this.getWidth() / 2.0F;
               var17 = (float)this.go[var5][0] / 2.0F;
               float var22 = (float)(this.gy * var5);
               var6 = (float)this.eh[2];
               var19 = 328.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F;
               var9 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F;
               var15 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F;
               var12 = (float)this.eh[0];
               var7 = (float)(dv[this.eH[1]] / 2);
               var20 = 256.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var11 = (float)(dv[this.eH[1]] / 2);
               var10 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var14 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var18 = (float)dv[this.eH[1]];
               var8 = 55.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var3, var13 - var17 + var22 + var6 + var2 + var19 - var9 + var15 + var12 - var7, 520.0F - var20 - var11, var18 + (var10 - var14), (float)dv[this.eH[1]] + var8, 5);
               var3 = this.ae[1];
               var14 = (float)this.getWidth() / 2.0F;
               var20 = (float)this.go[var5][0] / 2.0F;
               var7 = (float)(this.gy * var5);
               var19 = (float)this.eh[2];
               var6 = 19.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var11 = 19.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var17 = (float)this.eh[0];
               var10 = (float)(dv[this.eH[1]] / 2);
               var15 = 182.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var18 = (float)(dv[this.eH[1]] / 2);
               var9 = 160.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var13 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var12 = (float)dv[this.eH[1]];
               var8 = 33.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var3, var14 - var20 + var7 + var19 + var2 + var6 + var11 + var17 - var10, 520.0F - var15 - var18, var12 + (var9 - var13), (float)dv[this.eH[1]] + var8, 9);
               var3 = this.ae[1];
               var20 = (float)this.getWidth() / 2.0F;
               var6 = (float)this.go[var5][0] / 2.0F;
               var9 = (float)(this.gy * var5);
               var8 = (float)this.eh[2];
               var12 = 271.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var18 = 271.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var14 = (float)this.eh[0];
               var19 = (float)(dv[this.eH[1]] / 2);
               var15 = 150.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var11 = (float)(dv[this.eH[1]] / 2);
               var13 = 33.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var10 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var7 = (float)dv[this.eH[1]];
               var17 = 33.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var3, var20 - var6 + var9 + var8 + var2 + var12 + var18 + var14 - var19, 520.0F - var15 - var11, var7 + (var13 - var10), (float)dv[this.eH[1]] + var17, 11);
               var3 = this.ae[6];
               var7 = (float)this.getWidth() / 2.0F;
               var11 = (float)this.go[var5][0] / 2.0F;
               var17 = (float)(this.gy * var5);
               var12 = (float)this.eh[2];
               var8 = 231.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var18 = 231.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var13 = (float)this.eh[0];
               var9 = (float)(dv[this.eH[2]] / 2);
               var19 = 92.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var15 = (float)(dv[this.eH[2]] / 2);
               var10 = 68.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
               var14 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
               var6 = (float)dv[this.eH[2]];
               var20 = 68.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var3, var7 - var11 + var17 + var12 + var2 + var8 + var18 + var13 - var9, 520.0F - var19 - var15, var6 + (var10 - var14), (float)dv[this.eH[2]] + var20, 98);
               var16 = this.aU;
               var4 = 0;

               while(true) {
                  var3 = this.ae[6];
                  var15 = (float)this.getWidth() / 2.0F;
                  var7 = (float)this.go[var5][0] / 2.0F;
                  var10 = (float)(this.gy * var5);
                  var11 = (float)this.eh[2];
                  var20 = (float)(250 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                  var13 = (float)(250 - var4 * 17) * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                  var17 = (float)(dv[this.eH[1]] / 2);
                  var18 = (float)this.eh[0];
                  var9 = 150.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                  var8 = (float)(dv[this.eH[1]] / 2);
                  var6 = 18.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F;
                  var19 = 254.0F * ((float)this.go[var5][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F;
                  var14 = (float)dv[this.eH[1]];
                  var12 = 27.0F * ((float)this.go[var5][1] * 10000.0F / 263.0F) / 10000.0F;
                  var1.drawScaledImage(var3, var18 + (var15 - var7 + var10 + var11 + var2 + var20 + var13 - var17), 520.0F - var9 - var8, var14 + (var6 - var19), (float)dv[this.eH[1]] + var12, var16 % 10 + 14);
                  var16 /= 10;
                  if (var16 <= 0) {
                     break;
                  }

                  ++var4;
               }
            }

            var1.setColor(0, 0, 0);
            var1.setAlpha((255 - this.go[var5][0] * 100 / 328 * 255 / 100) * 2);
            var1.fillRect((float)(this.getWidth() / 2 - this.go[var5][0] / 2 + this.gy * var5 + this.eh[2]) + var2 + (float)(cC[this.eH[0]] * 328 / 100 / 2) + (float)this.eh[0], (float)(520 - this.go[var5][1]), (float)(this.go[var5][0] - cC[this.eH[0]] * 328 / 100), (float)this.go[var5][1]);
         }

         if (!this.eE[1] && !this.eE[2]) {
            var3 = this.ae[2];
            var4 = dv[this.fx[5]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth + (861 - var4), 194 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 95, dv[this.fx[5]] + 95, 9);
            var3 = this.ae[2];
            var4 = dv[this.fx[5]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth + (866 - var4), 211 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 11);
            if (!this.eE[9] && !this.gu && (this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               var1.drawScaledImageI(this.ae[2], this.excessWidth + 860, 193, 96, 96, this.fQ[5] % 4 / 2 + 12);
            }

            if (this.fQ[5] % 4 != 0 && this.fQ[5] % 4 != 1) {
               var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + 316, 256, 324, 260, 8);
            } else {
               var1.drawScaledImageI(this.ae[0], this.excessWidth / 2 + 316, 256, 324, 260, 7);
            }
         }

         if (!this.eE[1] && !this.eE[2]) {
            var1.setImageAlpha(127);
            if (this.fG[3] >= 1) {
               var1.drawScaledImageI(this.ae[3], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[6] * 30))), 324, 0);
            }

            if (this.fG[3] <= this.gC[1] - 2) {
               var1.setImageOrientation(1);
               var1.drawScaledImageI(this.ae[3], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[6] * 30))) + this.excessWidth, 324, 0);
            }

            var1.setImageOrientation(0);
            var1.setImageAlpha(255);
         }
      }

      if (this.eE[3]) {
         var1.setColor(0, 159, 214);
         var1.drawRectangle(this.getWidth() / 2 - this.eh[4], 0 - this.eZ, this.eh[4] + this.eh[4], this.getHeight());
         var4 = 0;
         if (this.fR[0] == 0) {
            var4 = cu[this.fQ[7]];
         } else if (this.fR[0] == 1) {
            var4 = cv[this.fQ[7]];
         } else {
            var5 = this.fR[0];
         }

         if (!this.eE[4]) {
            var5 = var4;
         } else {
            short var23;
            label421: {
               if (this.p == 0) {
                  if (this.fQ[7] == 2 || this.fQ[7] == 3 || this.fQ[7] == 6 || this.fQ[7] == 7 || this.fQ[7] == 10 || this.fQ[7] == 11 || this.fQ[7] == 14 || this.fQ[7] == 15 || this.fQ[7] == 18 || this.fQ[7] == 19) {
                     var23 = 308;
                     break label421;
                  }
               } else if (this.p == 1 && (this.fQ[7] == 2 || this.fQ[7] == 3 || this.fQ[7] == 6 || this.fQ[7] == 7 || this.fQ[7] == 10 || this.fQ[7] == 11 || this.fQ[7] == 14 || this.fQ[7] == 15)) {
                  var23 = 308;
                  break label421;
               }

               var23 = 312;
            }

            if (this.fQ[7] >= 2) {
               if (this.p == 0) {
                  if (this.fQ[7] - 2 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 - 28, -1, 504, 504, 0);
                  } else if (this.fQ[7] - 2 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 35, 62, 378, 378, 0);
                  } else if (this.fQ[7] - 2 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 98, 125, 252, 252, 0);
                  } else if (this.fQ[7] - 2 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 161, 188, 126, 126, 0);
                  }
               } else if (this.p == 1) {
                  if (this.fQ[7] - 2 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 - 244, -1, 980, 504, 0);
                  } else if (this.fQ[7] - 2 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 - 122, 62, 735, 378, 0);
                  } else if (this.fQ[7] - 2 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 1, 125, 490, 252, 0);
                  } else if (this.fQ[7] - 2 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 123, 188, 245, 126, 0);
                  }
               }
            }

            if (this.fQ[7] >= 6) {
               if (this.p == 0) {
                  if (this.fQ[7] - 6 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 100, -1, 504, 504, 1);
                  } else if (this.fQ[7] - 6 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 163, 62, 378, 378, 1);
                  } else if (this.fQ[7] - 6 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 226, 125, 252, 252, 1);
                  } else if (this.fQ[7] - 6 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 289, 188, 126, 126, 1);
                  }
               } else if (this.p == 1) {
                  if (this.fQ[7] - 6 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 - 191, -1, 1500, 504, 1);
                  } else if (this.fQ[7] - 6 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 - 4, 62, 1125, 378, 1);
                  } else if (this.fQ[7] - 6 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 184, 125, 750, 252, 1);
                  } else if (this.fQ[7] - 6 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 371, 188, 375, 126, 1);
                  }
               }
            }

            if (this.fQ[7] >= 10) {
               if (this.p == 0) {
                  if (this.fQ[7] - 10 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 228, -1, 504, 504, 2);
                  } else if (this.fQ[7] - 10 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 291, 62, 378, 378, 2);
                  } else if (this.fQ[7] - 10 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 354, 125, 252, 252, 2);
                  } else if (this.fQ[7] - 10 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 417, 188, 126, 126, 2);
                  }
               } else if (this.p == 1) {
                  if (this.fQ[7] - 10 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 683, -1, 176, 504, 2);
                  } else if (this.fQ[7] - 10 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 705, 62, 132, 378, 2);
                  } else if (this.fQ[7] - 10 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 727, 125, 88, 252, 2);
                  } else if (this.fQ[7] - 10 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 749, 188, 44, 126, 2);
                  }
               }
            }

            if (this.fQ[7] >= 14) {
               if (this.p == 0) {
                  if (this.fQ[7] - 14 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 356, -1, 504, 504, 3);
                  } else if (this.fQ[7] - 14 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 419, 62, 378, 378, 3);
                  } else if (this.fQ[7] - 14 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 482, 125, 252, 252, 3);
                  } else if (this.fQ[7] - 14 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 545, 188, 126, 126, 3);
                  }
               } else if (this.p == 1) {
                  if (this.fQ[7] - 14 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 727, -1, 176, 504, 3);
                  } else if (this.fQ[7] - 14 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 749, 62, 132, 378, 3);
                  } else if (this.fQ[7] - 14 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 771, 125, 88, 252, 3);
                  } else if (this.fQ[7] - 14 >= 3) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 793, 188, 44, 126, 3);
                  }
               }
            }

            var5 = var23;
            if (this.fQ[7] >= 18) {
               var5 = var23;
               if (this.p == 0) {
                  if (this.fQ[7] - 18 == 0) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 484, -1, 504, 504, 4);
                     var5 = var23;
                  } else if (this.fQ[7] - 18 == 1) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 547, 62, 378, 378, 4);
                     var5 = var23;
                  } else if (this.fQ[7] - 18 == 2) {
                     var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 610, 125, 252, 252, 4);
                     var5 = var23;
                  } else {
                     var5 = var23;
                     if (this.fQ[7] - 18 >= 3) {
                        var1.drawScaledImageI(this.ae[5], this.excessWidth / 2 + 673, 188, 126, 126, 4);
                        var5 = var23;
                     }
                  }
               }
            }
         }

         var1.drawScaledImageI(this.ae[4], this.excessWidth + 659, this.eZ + var5 + 55, 355, 355, 0);
         if (!this.eE[1] && (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5)) {
            var1.drawScaledImageI(this.ae[4], 659, this.eZ + var5 + 55, 355, 191, 2);
         }
      }

      if (this.ee) {
         var1.setColor(0, 0, 0);
         var1.setAlpha(178);
         var1.drawRectangle(0, -this.eZ, this.getWidth(), this.getHeight());
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248, 84, 0);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 131, 113, 16);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 404 - dv[this.fC[5]] / 2, 48 - dv[this.fC[5]] / 2, dv[this.fC[5]] + 96, dv[this.fC[5]] + 96, 21);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 40 - dv[this.fC[6]] / 2, 464 - dv[this.fC[6]] / 2, dv[this.fC[6]] + 384, dv[this.fC[6]] + 72, 6);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288 + 65 - dv[this.fC[6]] / 2, 472 - dv[this.fC[6]] / 2, dv[this.fC[6]] + 254, dv[this.fC[6]] + 55, 9);
         //if (!jp.co.ponos.library.c.a.b().f()) {
         //   if (jp.co.ponos.library.c.a.b().e()) {
         //      var1.a(this.af[1], this.w / 2 + 535 - dv[this.fC[2]] / 2, 299 - dv[this.fC[2]] / 2, dv[this.fC[2]] + 106, dv[this.fC[2]] + 42, 20);
         //   } else {
         //      var1.a(this.af[1], this.w / 2 + 535 - dv[this.fC[2]] / 2, 299 - dv[this.fC[2]] / 2, dv[this.fC[2]] + 106, dv[this.fC[2]] + 42, 19);
         //   }
         //}

         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 500 - dv[this.fC[12]] / 2, 199 - dv[this.fC[12]] / 2, dv[this.fC[12]] + 172, dv[this.fC[12]] + 68, 3);
         if (!Sound.getInstance().isMutedBGM()) {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 252 - dv[this.fC[3]] / 2, 373 - dv[this.fC[3]] / 2, dv[this.fC[3]] + 68, dv[this.fC[3]] + 68, 4);
         } else {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 252 - dv[this.fC[3]] / 2, 373 - dv[this.fC[3]] / 2, dv[this.fC[3]] + 68, dv[this.fC[3]] + 68, 5);
         }

         if (!Sound.getInstance().isMutedSE()) {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 356 - dv[this.fC[4]] / 2, 373 - dv[this.fC[4]] / 2, dv[this.fC[4]] + 68, dv[this.fC[4]] + 68, 7);
         } else {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 356 - dv[this.fC[4]] / 2, 373 - dv[this.fC[4]] / 2, dv[this.fC[4]] + 68, dv[this.fC[4]] + 68, 8);
         }

         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 40 - dv[this.fC[7]] / 2, 197 - dv[this.fC[7]] / 2, dv[this.fC[7]] + 170, dv[this.fC[7]] + 72, 1);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 298 - dv[this.fC[7]] / 2, 205 - dv[this.fC[7]] / 2, dv[this.fC[7]] + 150, dv[this.fC[7]] + 55, 13);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288 - dv[this.fC[8]] / 2, 284 - dv[this.fC[8]] / 2, dv[this.fC[8]] + 170, dv[this.fC[8]] + 72, 1);
         var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 298 - dv[this.fC[8]] / 2, 292 - dv[this.fC[8]] / 2, dv[this.fC[8]] + 150, dv[this.fC[8]] + 55, 11);
         if (this.bj != 0) {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288 - dv[this.fC[9]] / 2, 371 - dv[this.fC[9]] / 2, dv[this.fC[9]] + 168, dv[this.fC[9]] + 72, 1);
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 298 - dv[this.fC[9]] / 2, 379 - dv[this.fC[9]] / 2, dv[this.fC[9]] + 150, dv[this.fC[9]] + 55, 12);
         }

         if (!this.ef) {
            if (this.R() && this.b(this.fB[7][0], this.fB[7][1], this.fB[7][2], this.fB[7][3])) {
               var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 197, 170, 72, this.fQ[5] % 4 / 2 + 14);
            } else if (this.R() && this.b(this.fB[8][0], this.fB[8][1], this.fB[8][2], this.fB[8][3])) {
               var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 284, 170, 72, this.fQ[5] % 4 / 2 + 14);
            } else if (this.R() && this.b(this.fB[9][0], this.fB[9][1], this.fB[9][2], this.fB[9][3]) && this.bj != 0) {
               var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 371, 170, 72, this.fQ[5] % 4 / 2 + 14);
            } else if (this.R() && this.b(this.fB[6][0], this.fB[6][1], this.fB[6][2], this.fB[6][3])) {
               var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 288, 464, 384, 72, this.fQ[5] % 4 / 2 + 17);
            }
         }

         if (this.ef) {
            var1.drawScaledImageI(this.al, this.excessWidth / 2 + 135, 250, 690, 229, 0);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[10], this.getWidth() / 2, 295, 1);
            var3 = this.af[2];
            var4 = dv[this.fC[10]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth / 2 + (251 - var4), 382 - dv[this.fC[10]] / 2, dv[this.fC[10]] + 168, dv[this.fC[10]] + 72, 0);
            var3 = this.af[2];
            var4 = dv[this.fC[11]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth / 2 + (541 - var4), 382 - dv[this.fC[11]] / 2, dv[this.fC[11]] + 168, dv[this.fC[11]] + 72, 0);
            var3 = this.ae[21];
            var4 = dv[this.fC[10]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth / 2 + (260 - var4), 390 - dv[this.fC[10]] / 2, dv[this.fC[10]] + 150, dv[this.fC[10]] + 55, 4);
            var3 = this.ae[21];
            var4 = dv[this.fC[11]] / 2;
            var1.drawScaledImageI(var3, this.excessWidth / 2 + (550 - var4), 390 - dv[this.fC[11]] / 2, dv[this.fC[11]] + 150, dv[this.fC[11]] + 55, 5);
            if (this.R() && this.b(this.fB[10][0], this.fB[10][1], this.fB[10][2], this.fB[10][3]) && !this.eb && !this.gu) {
               var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 250, 381, 168, 72, this.fQ[5] % 4 / 2 + 1);
            } else if (this.R() && this.b(this.fB[11][0], this.fB[11][1], this.fB[11][2], this.fB[11][3]) && !this.eb && !this.gu) {
               var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 540, 381, 168, 72, this.fQ[5] % 4 / 2 + 1);
            }
         }

         if (this.R() && this.b(this.fB[5][0], this.fB[5][1], this.fB[5][2], this.fB[5][3])) {
            var1.drawScaledImageI(this.af[1], this.excessWidth / 2 + 248 + 404, 48, 96, 96, this.fQ[5] % 4 / 2 + 22);
         }
      }

   }

   void p(TextureRenderer var1) {
      int var2 = 0;
      var1.setColor(0, 0, 0);
      var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
      var1.drawScaledImageI(this.ae[6], 0, 0, this.getWidth(), 640, 0);

      int var3;
      for(var3 = 0; var3 < this.gC[1]; ++var3) {
         var1.drawScaledImageI(this.ae[8], this.eh[0] + 179 + this.gy * var3 + this.excessWidth / 2, 68, 0);
      }

      var1.drawScaledImageI(this.ae[7], this.eh[0] + 179 + this.fq[2] * this.gy + this.excessWidth / 2, 68, 0);
      if (this.ag[3].isLoaded()) {
         var3 = Texture.b(this.cI[this.fq[2]][0], 30) + 30 + Texture.b(String.format("%d", this.bO[this.eQ][this.fq[2]]), 30) + Texture.b(this.cH[8], 30) + Texture.b(this.cH[7], 30);
      } else {
         var3 = 0;
      }

      var1.setColor(255, 255, 255);
      int var4;
      int var5;
      if (this.ag[3].isLoaded()) {
         var1.drawScaledImage(this.ag[0], this.getWidth() / 2 - var3 / 2 + this.eh[0] + this.fq[2] * this.gy, 75, 0);
         var4 = this.getWidth() / 2;
         var3 /= 2;
         var5 = Texture.b(this.cI[this.fq[2]][0], 30);
         var1.setColor(255, 255, 0);
         var1.drawScaledImage(this.ag[3], var4 - var3 + var5 + 30 + this.eh[0] + this.fq[2] * this.gy, 75, 0);
      } else {
         var1.drawScaledImage(this.ag[0], this.getWidth() / 2 + this.eh[0] + this.fq[2] * this.gy, 75, 1);
      }

      var1.setColor(255, 255, 255);
      var1.drawScaledImage(this.ag[1], this.getWidth() / 2 + this.eh[0] + this.fq[2] * this.gy, 232, 1);
      var1.drawScaledImage(this.ag[2], this.getWidth() / 2 + this.eh[0] + this.fq[2] * this.gy, 268, 1);

      for(var3 = 0; var3 < this.getLength(cy); ++var3) {
         for(var4 = 0; var4 < cy[var3]; ++var4) {
            if (this.bs[this.eQ][cz[var3][var4]] == 0) {
               var1.drawScaledImageI(this.ae[6], var4 % 4 * 133 + 224 + this.eh[0] + this.gy * var3 + this.excessWidth / 2, var4 / 4 * 90 + 325, 1);
            } else if (this.bs[this.eQ][cz[var3][var4]] == 1) {
               var1.drawScaledImageI(this.ae[6], var4 % 4 * 133 + 224 + this.eh[0] + this.gy * var3 + this.excessWidth / 2, var4 / 4 * 90 + 325, 2);
            } else if (this.bs[this.eQ][cz[var3][var4]] == 2) {
               var1.drawScaledImageI(this.ae[6], var4 % 4 * 133 + 224 + this.eh[0] + this.gy * var3 + this.excessWidth / 2, var4 / 4 * 90 + 325, 3);
            } else if (this.bs[this.eQ][cz[var3][var4]] == 3) {
               var1.drawScaledImageI(this.ae[6], var4 % 4 * 133 + 224 + this.eh[0] + this.gy * var3 + this.excessWidth / 2, var4 / 4 * 90 + 325, 4);
            }
         }
      }

      for(var3 = 0; var3 < 8; ++var3) {
         if (var3 == this.fq[3]) {
            if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
               var1.drawScaledImageI(this.ae[6], var3 % 4 * 133 + 217 + this.eh[0] + this.fq[2] * this.gy + this.excessWidth / 2, var3 / 4 * 90 + 319, 6);
            } else {
               var1.drawScaledImageI(this.ae[6], var3 % 4 * 133 + 217 + this.eh[0] + this.fq[2] * this.gy + this.excessWidth / 2, var3 / 4 * 90 + 319, 5);
            }
         }
      }

      if (this.p == 0) {
         if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 0) {
            var4 = Texture.b(this.cH[3], 30) + 15 + Texture.b(this.cG[48], 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var4 /= 2;
            var5 = Texture.b(this.cH[3], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var4 + var5 + 15 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            if (this.fq[2] != 10) {
               var4 = Texture.b(this.cF[cz[this.fq[2]][this.fq[3]]], 30);
               var3 = Texture.b(this.cH[9], 30);
               var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - (var4 + var3) / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
            }
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 1) {
            var4 = Texture.b(this.cH[3], 30) + 15 + Texture.b(this.cH[0], 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var4 /= 2;
            var5 = Texture.b(this.cH[3], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var4 + var5 + 15 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = Texture.b(this.cF[cz[this.fq[2]][this.fq[3]]], 30);
            var4 = Texture.b(this.cH[4], 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - (var3 + var4) / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 2) {
            var4 = Texture.b(this.cH[3], 30) + 15 + Texture.b(this.cH[1], 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var5 = var4 / 2;
            var4 = Texture.b(this.cH[3], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var5 + var4 + 15 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = Texture.b(this.cF[cz[this.fq[2]][this.fq[3]]], 30);
            var4 = Texture.b(this.cH[4], 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - (var3 + var4) / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 3) {
            var4 = Texture.b(this.cH[3], 30) + 15 + Texture.b(this.cH[2], 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var5 = var4 / 2;
            var4 = Texture.b(this.cH[3], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var5 + var4 + 15 + this.eh[0] + this.fq[2] * this.gy, 505);
            var4 = Texture.b(this.cF[cz[this.fq[2]][this.fq[3]]], 30);
            var3 = Texture.b(this.cH[4], 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - (var4 + var3) / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         }
      } else if (this.p == 1) {
         int var6;
         if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 0) {
            var4 = Texture.b(this.cH[3], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cG[48], 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var5 = var4 / 2;
            var4 = Texture.b(this.cH[3], 30);
            var6 = Texture.b(String.format(" "), 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var5 + var4 + var6 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            if (this.fq[2] != 10) {
               var3 = Texture.b(String.format("%s %s", this.cH[4], this.cF[cz[this.fq[2]][this.fq[3]] + 49]), 30);
               var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - var3 / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
            }
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 1) {
            var4 = Texture.b(this.cH[10], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cH[0], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var4 /= 2;
            var6 = Texture.b(this.cH[10], 30);
            var5 = Texture.b(String.format(" "), 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var4 + var6 + var5 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var1.setColor(255, 255, 255);
            var3 = Texture.b(String.format("%s %s", this.cH[4], this.cF[cz[this.fq[2]][this.fq[3]] + 49]), 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - var3 / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 2) {
            var4 = Texture.b(this.cH[10], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cH[1], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var5 = var4 / 2;
            var4 = Texture.b(this.cH[10], 30);
            var6 = Texture.b(String.format(" "), 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var5 + var4 + var6 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var1.setColor(255, 255, 255);
            var3 = Texture.b(String.format("%s %s", this.cH[4], this.cF[cz[this.fq[2]][this.fq[3]] + 49]), 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - var3 / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 3) {
            var4 = Texture.b(this.cH[10], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cH[2], 30) + Texture.b(String.format(" "), 30) + Texture.b(this.cG[cz[this.fq[2]][this.fq[3]]], 30);
            var1.setColor(255, 255, 255);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 0], this.getWidth() / 2 - var4 / 2 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var3 = this.getWidth() / 2;
            var5 = var4 / 2;
            var6 = Texture.b(this.cH[10], 30);
            var4 = Texture.b(String.format(" "), 30);
            var1.setColor(255, 255, 0);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 1], var3 - var5 + var6 + var4 + this.eh[0] + this.fq[2] * this.gy, 505, 0);
            var1.setColor(255, 255, 255);
            var3 = Texture.b(String.format("%s %s", this.cH[4], this.cF[cz[this.fq[2]][this.fq[3]] + 49]), 30);
            var1.drawScaledImage(this.ag[this.fq[3] * 3 + 4 + 2], this.getWidth() / 2 - var3 / 2 + this.eh[0] + this.fq[2] * this.gy, 541, 0);
         }
      }

      if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 0) {
         if (this.p != 0) {
         }
      } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 1) {
         if (this.p != 0) {
         }
      } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 2) {
         if (this.p != 0) {
         }
      } else if (this.bs[this.eQ][cz[this.fq[2]][this.fq[3]]] == 3 && this.p != 0) {
      }

      var1.setImageAlpha(127);
      if (this.fq[2] > 0) {
         var1.drawScaledImageI(this.ae[0], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 171, 8);
      }

      var1.setImageOrientation(1);
      if (this.fq[2] < this.gC[1] - 1) {
         var1.drawScaledImageI(this.ae[0], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30))) + this.excessWidth, 171, 8);
      }

      var1.setImageOrientation(0);
      var1.setImageOrientation(0);
      var1.setImageAlpha(255);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 + this.fP, 0, 572, 637, 1);
      if (this.fR[0] == 0) {
         var3 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var3 = cv[this.fQ[0]];
      } else {
         var3 = this.fR[0];
         var3 = 0;
      }

      var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var3, 355, 355, 0);
      if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var3, 355, 191, 2);
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, 0);
      var1.setImageOrientation(0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
         } else {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 8);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 4);
      }

      var1.drawScaledImageI(this.ae[0], this.fw[5][0] - dv[this.fx[5]] / 2, this.fw[5][1] - dv[this.fx[5]] / 2, this.fw[5][2] + dv[this.fx[5]], this.fw[5][3] + dv[this.fx[5]], 9);
      var1.drawScaledImageI(this.ae[0], this.fw[5][0] + 4 - dv[this.fx[5]] / 2, this.fw[5][1] + 17 - dv[this.fx[5]] / 2, dv[this.fx[5]] + 84, dv[this.fx[5]] + 60, 3);
      if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[13] && !this.eb && this.eE[10]) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var3 = this.aY;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 6, var3 % 10);
         var5 = var3 / 10;
         ++var4;
         var3 = var5;
      } while(var5 > 0);

      var1.drawScaledImageI(this.ae[0], 633 - dv[this.fx[15]] / 2 + this.excessWidth, 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      var1.drawScaledImageI(this.ae[0], 688 - dv[this.fx[14]] / 2 + this.excessWidth, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
      if (this.bf >= 1) {
         var1.drawScaledImageI(this.ae[0], 733 - dv[this.fx[14]] / 2 + this.excessWidth, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var3 = this.aL;
      var4 = var2;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 592, var3 % 10);
         var2 = var3 / 10;
         ++var4;
         var3 = var2;
      } while(var2 > 0);

   }

   boolean legendProcess() {
      boolean var1 = false;
      int[] var2 = this.fQ;
      int var10002 = var2[0]++;
      var2 = this.fQ;
      var10002 = var2[4]++;
      if (this.fQ[1] == 0) {
         if (this.fQ[0] >= this.aK[0].b() * 4) {
            this.fQ[0] = 0;
            this.fQ[1] = 1;
         }
      } else if (this.fQ[1] == 1 && this.fQ[0] >= this.aK[1].b()) {
         this.fQ[0] = 0;
         this.fQ[1] = 0;
      }

      if (!this.eb) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         if (this.fQ[2] == 1) {
            Sound.getInstance().play(42);
         }

         if (this.fQ[2] > this.getLength(eO) - 1) {
            this.fQ[2] = this.getLength(eO) - 1;
            var2 = this.fQ;
            var10002 = var2[3]++;
         }

         if (this.fQ[3] >= 10) {
            this.fQ[3] = 10;
            if (this.fx[0] >= 1) {
               var2 = this.fx;
               var10002 = var2[0]++;
               if (this.fx[0] > this.getLength(dv) - 1) {
                  this.fx[0] = 0;
                  this.screenTransition();
                  this.eb = true;
                  this.ed = 0;
                  return var1;
               }
            } else {
               if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  if (!this.gp[0]) {
                     Sound.getInstance().play(10);
                     this.gp[0] = true;
                  }
               } else {
                  this.gp[0] = false;
               }

               if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[0]++;
               }
            }
         }
      }

      var1 = true;
      return var1;
   }

   void q(TextureRenderer var1) {
      int var3;
      int var4;
      int var5;
      int var6;
      Texture var12;
      switch (this.getScene2()) {
         case 100:
            if (this.bB[6] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gV[1] >= 10) {
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[0];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[7] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gV[1] >= 10) {
                  var1.drawScaledImageI(this.an, this.getWidth() - 96, (int)(392.0F + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[0];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }

               if (!this.gN) {
                  for(var5 = 0; var5 < 6; ++var5) {
                     var12 = this.ae[7];
                     var3 = dv[this.eK[var5]] / 2;
                     var1.drawScaledImageI(var12, this.excessWidth + (var5 * 88 + 447 - var3), 500 - dv[this.eK[var5]] / 2, dv[this.eK[var5]] + 58, dv[this.eK[var5]] + 58, var5 + 50);
                     var1.setImageAlpha(63);
                     var1.drawScaledImageI(this.ae[7], this.excessWidth + var5 * 88 + 436, 559, 80, 22, 63);
                     var1.setImageAlpha(255);
                     if (!this.eM[var5]) {
                        var6 = this.bA[var5];
                        var3 = 1;
                        var4 = 10;
                     } else {
                        var6 = this.bA[var5];
                        var3 = 1;
                        var4 = 10;
                        --var6;
                     }

                     while(var4 <= var6) {
                        var4 *= 10;
                        --var3;
                     }

                     var1.drawScaledImageI(this.ae[13], var5 * 88 + 476 + (var3 - 2) * 6 - 7 + this.excessWidth, 561, 102);

                     for(var4 /= 10; var4 >= 1; var4 /= 10) {
                        var1.drawScaledImageI(this.ae[13], var5 * 88 + 476 + var3 * 6 - 7 + this.excessWidth, 561, var6 / var4 % 10 + 57);
                        var3 += 2;
                     }
                  }
               }
            } else if (this.bB[8] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }

               if (this.gV[1] >= 10) {
                  var1.drawScaledImageI(this.an, this.excessWidth + 667, (int)(470.0F + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[0];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var12 = this.ae[0];
               var3 = dv[this.fx[14]] / 2;
               var1.drawScaledImageI(var12, this.excessWidth + (688 - var3), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
               if (this.bf >= 1) {
                  var12 = this.ae[0];
                  var3 = dv[this.fx[14]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth + (733 - var3), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
               }
            }
            break;
         case 300:
            int[] var2;
            byte var13;
            if (this.hH == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gW == 1) {
                  this.eH[3] = 0;
                  if (this.bM[25] % 4 == 1 || this.bM[25] % 4 == 2) {
                     this.eH[3] = 68;
                  }

                  this.eH[1] = this.getWidth() - 4;
                  var2 = this.eH;
                  var2[1] -= 30;
                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + 11);
                  var2 = this.eH;
                  var2[1] -= 29;
                  var3 = this.bM[9] / 100;

                  do {
                     var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                     var3 /= 10;
                     var2 = this.eH;
                     var2[1] -= 29;
                  } while(var3 > 0);

                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 29, 42, this.eH[3] + 10);
                  var2 = this.eH;
                  var2[1] -= 28;
                  var3 = this.bM[10] / 100;

                  do {
                     var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                     var3 /= 10;
                     var2 = this.eH;
                     var2[1] -= 29;
                  } while(var3 > 0);
               }

               if (this.gW == 0) {
                  for(var3 = 0; var3 < 5; ++var3) {
                     var12 = this.ae[var3 + 5];
                     var4 = fb[var3];
                     var5 = dv[this.fy[var3]] / 2;
                     var1.drawScaledImageI(var12, this.excessWidth / 2 + (var4 - var5), this.eI[0] + 544 + this.eZ - dv[this.fy[var3]] / 2, dv[this.fy[var3]] + 110, dv[this.fy[var3]] + 85, 0);
                     if (this.bk[var3] != -1) {
                        if (this.bM[10] >= this.bX[this.bk[var3]][this.eV[var3]][6] + this.bX[this.bk[var3]][this.eV[var3]][6] * this.eQ * 50 / 100) {
                           var13 = 0;
                        } else {
                           var13 = 1;
                        }

                        if (var13 == 1 || this.eW[var3] != 0) {
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                        }

                        var1.setAlpha(255);
                        if (this.eW[var3] != 0) {
                           this.a(var1, var3, 0, 0);
                        } else if (this.bk[var3] != -1) {
                           this.a(var1, this.bX[this.bk[var3]][this.eV[var3]][6] / 100 + this.bX[this.bk[var3]][this.eV[var3]][6] / 100 * this.eQ * 50 / 100, fb[var3] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var13, 0, 0);
                        }
                     }
                  }
               }

               if (this.gV[1] >= 10) {
                  if (this.gW == 0) {
                     var12 = this.an;
                     var3 = fb[0];
                     var1.drawScaledImageI(var12, this.excessWidth / 2 + (var3 + 55 - 48), (int)((float)(this.eZ + 402) + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  } else {
                     var1.setImageOrientation(2);
                     var1.drawScaledImageI(this.an, this.excessWidth + 831, (int)((float)(58 - this.eZ) - 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  }

                  var1.setImageOrientation(0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[0] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.bN[0] == 7) {
                  var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
                  var1.drawScaledImageI(this.ae[4], this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 81);
                  var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
                  var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
               } else if (this.bM[11] + 1 >= 8) {
                  if (this.bM[10] >= (this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) {
                     if (this.gV[3] % 6 / 3 == 0) {
                        var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
                     } else {
                        var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 24);
                     }

                     this.a(var1, ((this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 2, 0, 0);
                     var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
                     var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
                  } else {
                     var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 5);
                     this.a(var1, ((this.bM[11] + 1 - 7) * 2000 + 10000 + ((this.bM[11] + 1 - 7) * 2000 + 10000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 3, 0, 0);
                     var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 24);
                     var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 25 + 1);
                  }
               } else if (this.bM[10] >= (this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) {
                  if (this.gV[3] % 6 / 3 == 0) {
                     var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 6);
                  } else {
                     var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 24);
                  }

                  this.a(var1, ((this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 2, 0, 0);
                  var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 13);
                  var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 14 + 1);
               } else {
                  var1.drawScaledImageI(this.ae[15], this.fw[1][0], this.fw[1][1] + this.eI[0], 5);
                  this.a(var1, ((this.bM[11] + 1) * 1000 + 3000 + ((this.bM[11] + 1) * 1000 + 3000) * this.bN[0]) / 100, this.fw[1][0] + 4, this.eI[0] + this.fw[1][1] + 96, 3, 0, 0);
                  var1.drawScaledImageI(this.ae[4], 4, this.eI[0] + 515 - 5 + this.eZ, 24);
                  var1.drawScaledImageI(this.ae[4], 73, this.eI[0] + 515 - 5 + this.eZ, this.bN[0] + 25 + 1);
               }

               this.eH[3] = 0;
               if (this.bM[25] % 4 == 1 || this.bM[25] % 4 == 2) {
                  this.eH[3] = 68;
               }

               this.eH[1] = this.getWidth() - 4;
               var2 = this.eH;
               var2[1] -= 30;
               var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + 11);
               var2 = this.eH;
               var2[1] -= 29;
               var3 = this.bM[9] / 100;

               do {
                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                  var3 /= 10;
                  var2 = this.eH;
                  var2[1] -= 29;
               } while(var3 > 0);

               var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 29, 42, this.eH[3] + 10);
               var2 = this.eH;
               var2[1] -= 28;
               var3 = this.bM[10] / 100;

               do {
                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                  var3 /= 10;
                  var2 = this.eH;
                  var2[1] -= 29;
               } while(var3 > 0);

               if (this.gV[1] >= 10) {
                  var1.drawScaledImageI(this.an, 30, (int)((float)(this.eZ + 402) + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(2);
                  var1.drawScaledImageI(this.an, this.excessWidth + 831, (int)((float)(58 - this.eZ) - 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[1] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               this.eH[3] = 0;
               if (this.bM[25] % 4 == 1 || this.bM[25] % 4 == 2) {
                  this.eH[3] = 68;
               }

               this.eH[1] = this.getWidth() - 4;
               var2 = this.eH;
               var2[1] -= 30;
               var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + 11);
               var2 = this.eH;
               var2[1] -= 29;
               var3 = this.bM[9] / 100;

               do {
                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                  var3 /= 10;
                  var2 = this.eH;
                  var2[1] -= 29;
               } while(var3 > 0);

               var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 29, 42, this.eH[3] + 10);
               var2 = this.eH;
               var2[1] -= 28;
               var3 = this.bM[10] / 100;

               do {
                  var1.drawScaledImageI(this.ae[4], this.eH[1], 10 - this.eI[0] - this.eZ, 30, 42, this.eH[3] + var3 % 10);
                  var3 /= 10;
                  var2 = this.eH;
                  var2[1] -= 29;
               } while(var3 > 0);

               for(var3 = 0; var3 < 5; ++var3) {
                  var12 = this.ae[var3 + 5];
                  var4 = fb[var3];
                  var5 = dv[this.fy[var3]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (var4 - var5), this.eI[0] + 544 + this.eZ - dv[this.fy[var3]] / 2, dv[this.fy[var3]] + 110, dv[this.fy[var3]] + 85, 0);
                  if (this.bk[var3] != -1) {
                     if (this.bM[10] >= this.bX[this.bk[var3]][this.eV[var3]][6] + this.bX[this.bk[var3]][this.eV[var3]][6] * this.eQ * 50 / 100) {
                        var13 = 0;
                     } else {
                        var13 = 1;
                     }

                     if (var13 == 1 || this.eW[var3] != 0) {
                        var1.setColor(0, 0, 0);
                        var1.setAlpha(100);
                        var1.drawRectangle(fb[var3] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                     }

                     var1.setAlpha(255);
                     if (this.eW[var3] != 0) {
                        this.a(var1, var3, 0, 0);
                     } else if (this.bk[var3] != -1) {
                        this.a(var1, this.bX[this.bk[var3]][this.eV[var3]][6] / 100 + this.bX[this.bk[var3]][this.eV[var3]][6] / 100 * this.eQ * 50 / 100, fb[var3] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var13, 0, 0);
                     }
                  }
               }

               if (this.gV[1] >= 10) {
                  var12 = this.an;
                  var3 = fb[0];
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (var3 + 55 - 48), (int)((float)(this.eZ + 402) + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(2);
                  var1.drawScaledImageI(this.an, this.excessWidth + 831, (int)((float)(58 - this.eZ) - 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var3 = 0;

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[2] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gV[3] % 6 / 3 == 0) {
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 96 + this.eI[0], 11);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 84 + this.eI[0], 12);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 72 + this.eI[0], 13);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 60 + this.eI[0], 14);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 48 + this.eI[0], 15);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 36 + this.eI[0], 16);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 24 + this.eI[0], 17);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 12 + this.eI[0], 18);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + 22 + 0 + this.eI[0], 19);
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + this.eI[0], 20);
                  var1.drawScaledImageI(this.ae[15], this.getWidth() - 125 - 4, this.eI[0] + 581 + this.eZ, 9);
               } else {
                  var1.drawScaledImageI(this.ae[15], this.fw[0][0], this.fw[0][1] + this.eI[0], 7);
                  var1.drawScaledImageI(this.ae[15], this.getWidth() - 125 - 4, this.eI[0] + 581 + this.eZ, 10);
               }

               var1.drawScaledImageI(this.ae[15], this.getWidth() / 2 - 34, this.eZ + 529, 1);
               if (this.gV[1] >= 10 || this.gW >= 1) {
                  var1.drawScaledImageI(this.an, this.fw[0][0] + 30, (int)((float)(this.eZ + 402) + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.drawScaledImageI(this.an, this.getWidth() / 2 - 48, (int)((float)(this.eZ + 402) + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
               }

               if (this.gV[1] >= 10) {
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[3] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.eE[0]) {
                  int var7;
                  int var8;
                  int var9;
                  int var10;
                  int var11;
                  if (this.eD[0] == 0) {
                     if (this.eD[5] <= 4) {
                        var5 = (100 - this.eD[4]) * 110 / 100;
                        var4 = (100 - this.eD[4]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 10];
                           var6 = fb[var3 + 5];
                           var7 = (110 - var5) / 2;
                           var8 = this.excessWidth / 2;
                           var9 = this.eI[0];
                           var10 = this.eD[2];
                           var11 = (85 - var4) / 2;
                           var1.drawScaledImageI(var12, var8 + var6 + var7, this.eZ + var9 + 544 + var10 + var11, var5, var4, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3 + 5] + (110 - var5) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var4) / 2 + this.eZ, var5, var4);
                           var1.setAlpha(255);
                        }

                        var5 = (100 - this.eD[3]) * 110 / 100;
                        var4 = (100 - this.eD[3]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 5];
                           var7 = fb[var3];
                           var10 = (110 - var5) / 2;
                           var8 = this.excessWidth / 2;
                           var6 = this.eI[0];
                           var11 = this.eD[1];
                           var9 = (85 - var4) / 2;
                           var1.drawScaledImageI(var12, var8 + var7 + var10, this.eZ + var6 + 544 + var11 + var9, var5, var4, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3] + (110 - var5) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var4) / 2 + this.eZ, var5, var4);
                           var1.setAlpha(255);
                        }
                     } else {
                        var4 = (100 - this.eD[3]) * 110 / 100;
                        var5 = (100 - this.eD[3]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 5];
                           var8 = fb[var3];
                           var10 = (110 - var4) / 2;
                           var11 = this.excessWidth / 2;
                           var7 = this.eI[0];
                           var9 = this.eD[1];
                           var6 = (85 - var5) / 2;
                           var1.drawScaledImageI(var12, var11 + var8 + var10, this.eZ + var7 + 544 + var9 + var6, var4, var5, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3] + (110 - var4) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var5) / 2 + this.eZ, var4, var5);
                           var1.setAlpha(255);
                        }

                        var5 = (100 - this.eD[4]) * 110 / 100;
                        var4 = (100 - this.eD[4]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 10];
                           var7 = fb[var3 + 5];
                           var9 = (110 - var5) / 2;
                           var11 = this.excessWidth / 2;
                           var8 = this.eI[0];
                           var10 = this.eD[2];
                           var6 = (85 - var4) / 2;
                           var1.drawScaledImageI(var12, var11 + var7 + var9, this.eZ + var8 + 544 + var10 + var6, var5, var4, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3 + 5] + (110 - var5) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var4) / 2 + this.eZ, var5, var4);
                           var1.setAlpha(255);
                        }
                     }
                  } else if (this.eD[0] == 1) {
                     if (this.eD[5] <= 4) {
                        var4 = (100 - this.eD[4]) * 110 / 100;
                        var5 = (100 - this.eD[4]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 5];
                           var8 = fb[var3];
                           var10 = (110 - var4) / 2;
                           var7 = this.excessWidth / 2;
                           var11 = this.eI[0];
                           var9 = this.eD[2];
                           var6 = (85 - var5) / 2;
                           var1.drawScaledImageI(var12, var7 + var8 + var10, this.eZ + var11 + 544 + var9 + var6, var4, var5, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3] + (110 - var4) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var5) / 2 + this.eZ, var4, var5);
                           var1.setAlpha(255);
                        }

                        var4 = (100 - this.eD[3]) * 110 / 100;
                        var5 = (100 - this.eD[3]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 10];
                           var11 = fb[var3 + 5];
                           var8 = (110 - var4) / 2;
                           var10 = this.excessWidth / 2;
                           var6 = this.eI[0];
                           var7 = this.eD[1];
                           var9 = (85 - var5) / 2;
                           var1.drawScaledImageI(var12, var10 + var11 + var8, this.eZ + var6 + 544 + var7 + var9, var4, var5, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3 + 5] + (110 - var4) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var5) / 2 + this.eZ, var4, var5);
                           var1.setAlpha(255);
                        }
                     } else {
                        var4 = (100 - this.eD[3]) * 110 / 100;
                        var5 = (100 - this.eD[3]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 10];
                           var9 = fb[var3 + 5];
                           var7 = (110 - var4) / 2;
                           var8 = this.excessWidth / 2;
                           var6 = this.eI[0];
                           var11 = this.eD[1];
                           var10 = (85 - var5) / 2;
                           var1.drawScaledImageI(var12, var8 + var9 + var7, this.eZ + var6 + 544 + var11 + var10, var4, var5, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3 + 5] + (110 - var4) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[1] + (85 - var5) / 2 + this.eZ, var4, var5);
                           var1.setAlpha(255);
                        }

                        var5 = (100 - this.eD[4]) * 110 / 100;
                        var4 = (100 - this.eD[4]) * 85 / 100;

                        for(var3 = 0; var3 < 5; ++var3) {
                           var12 = this.ae[var3 + 5];
                           var11 = fb[var3];
                           var9 = (110 - var5) / 2;
                           var10 = this.excessWidth / 2;
                           var6 = this.eI[0];
                           var7 = this.eD[2];
                           var8 = (85 - var4) / 2;
                           var1.drawScaledImageI(var12, var10 + var11 + var9, this.eZ + var6 + 544 + var7 + var8, var5, var4, 0);
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3] + (110 - var5) / 2 + this.excessWidth / 2, this.eI[0] + 544 + this.eD[2] + (85 - var4) / 2 + this.eZ, var5, var4);
                           var1.setAlpha(255);
                        }
                     }
                  }
               } else if (this.eD[0] == 0) {
                  if (this.gO) {
                     for(var3 = 0; var3 < 5; ++var3) {
                        var12 = this.ae[var3 + 10];
                        var5 = fb[var3 + 5];
                        var4 = this.excessWidth / 2;
                        var6 = this.eI[0];
                        var1.drawScaledImageI(var12, var4 + var5, this.eZ + var6 + 544 + 12, 110, 85, 0);
                        var1.setColor(0, 0, 0);
                        var1.setAlpha(100);
                        var1.drawRectangle(fb[var3 + 5] + this.excessWidth / 2, this.eI[0] + 544 + 12 + this.eZ, 110, 85);
                        var1.setAlpha(255);
                     }
                  }

                  for(var3 = 0; var3 < 5; ++var3) {
                     var12 = this.ae[var3 + 5];
                     var5 = fb[var3];
                     var4 = dv[this.fy[var3]] / 2;
                     var1.drawScaledImageI(var12, this.excessWidth / 2 + (var5 - var4), this.eI[0] + 544 + this.eZ - dv[this.fy[var3]] / 2, dv[this.fy[var3]] + 110, dv[this.fy[var3]] + 85, 0);
                     if (this.bM[10] >= this.bX[this.bk[var3]][this.eV[var3]][6] + this.bX[this.bk[var3]][this.eV[var3]][6] * this.eQ * 50 / 100) {
                        var13 = 0;
                     } else {
                        var13 = 1;
                     }

                     if (var13 == 1 || this.eW[var3] != 0) {
                        var1.setColor(0, 0, 0);
                        var1.setAlpha(100);
                        var1.drawRectangle(fb[var3] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                     }

                     var1.setAlpha(255);
                     if (this.eW[var3] != 0) {
                        this.a(var1, var3, 0, 0);
                     } else if (this.bk[var3] != -1) {
                        this.a(var1, this.bX[this.bk[var3]][this.eV[var3]][6] / 100 + this.bX[this.bk[var3]][this.eV[var3]][6] / 100 * this.eQ * 50 / 100, fb[var3] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var13, 0, 0);
                     }
                  }
               } else if (this.eD[0] == 1) {
                  for(var3 = 0; var3 < 5; ++var3) {
                     var12 = this.ae[var3 + 5];
                     var6 = fb[var3];
                     var4 = this.excessWidth / 2;
                     var5 = this.eI[0];
                     var1.drawScaledImageI(var12, var4 + var6, this.eZ + var5 + 544 + 12, 110, 85, 0);
                     var1.setColor(0, 0, 0);
                     var1.setAlpha(100);
                     var1.drawRectangle(fb[var3] + this.excessWidth / 2, this.eI[0] + 544 + 12 + this.eZ, 110, 85);
                     var1.setAlpha(255);
                  }

                  for(var3 = 0; var3 < 5; ++var3) {
                     var12 = this.ae[var3 + 10];
                     var4 = fb[var3 + 5];
                     var5 = dv[this.fy[var3]] / 2;
                     var1.drawScaledImageI(var12, this.excessWidth / 2 + (var4 - var5), this.eI[0] + 544 + this.eZ - dv[this.fy[var3]] / 2, dv[this.fy[var3]] + 110, dv[this.fy[var3]] + 85, 0);
                     if (this.bk[var3 + 5] != -1) {
                        if (this.bM[10] >= this.bX[this.bk[var3 + 5]][this.eV[var3 + 5]][6] + this.bX[this.bk[var3 + 5]][this.eV[var3 + 5]][6] * this.eQ * 50 / 100) {
                           var13 = 0;
                        } else {
                           var13 = 1;
                        }

                        if (var13 == 1 || this.eW[var3 + 5] != 0) {
                           var1.setColor(0, 0, 0);
                           var1.setAlpha(100);
                           var1.drawRectangle(fb[var3 + 5] + this.excessWidth / 2, this.eI[0] + 544 + this.eZ, 110, 85);
                        }

                        var1.setAlpha(255);
                        if (this.eW[var3 + 5] != 0) {
                           this.a(var1, var3 + 5, 0, 0);
                        } else if (this.bk[var3 + 5] != -1) {
                           this.a(var1, this.bX[this.bk[var3 + 5]][this.eV[var3 + 5]][6] / 100 + this.bX[this.bk[var3 + 5]][this.eV[var3 + 5]][6] / 100 * this.eQ * 50 / 100, fb[var3 + 5] + 90 + this.excessWidth / 2, this.eI[0] + 544 + 50 + this.eZ, var13, 0, 0);
                        }
                     }
                  }
               }

               var1.setImageAlpha(255);
               var1.setImageColor(255, 255, 255);
               if (this.gV[1] >= 10 || this.gW >= 1) {
                  var1.drawScaledImageI(this.an, this.getWidth() / 2 - 48, this.gV[2] + 276, 96, 96, 0);
                  var1.setImageOrientation(0);
               }

               if (this.gV[1] >= 10) {
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 238 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 246 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 237, 168, 72, this.gV[3] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30 - 150, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var3 = 0;

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30 - 150, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[4] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               var1.drawScaledImageI(this.ae[15], this.getWidth() / 2 - 65 - dv[this.hk[0]] / 2, -24 - this.eZ - this.he[0] - dv[this.hk[0]] / 2, dv[this.hk[0]] + 131, dv[this.hk[0]] + 131, 0, 0, 0, 5, this.hb[0], 40);
               var1.drawScaledImageI(this.ae[15], this.getWidth() / 2 - 38 - dv[this.hk[0]] / 2, 1 - this.he[0] - this.eZ - dv[this.hk[0]] / 2, dv[this.hk[0]] + 76, dv[this.hk[0]] + 76, 41);
               if (this.gV[1] >= 10) {
                  var1.setImageOrientation(2);
                  var1.drawScaledImageI(this.an, this.getWidth() / 2 - 48, (int)((float)(-24 - this.eZ + 131 - 10) - 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }
            } else if (this.bB[5] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gV[1] < 10) {
                  var4 = 0;
               } else {
                  var4 = 0;

                  for(var3 = 0; var4 < this.getLength(this.eM); ++var4) {
                     if (this.eM[var4]) {
                        ++var3;
                     }
                  }

                  var1.setImageOrientation(2);
                  var1.drawScaledImageI(this.an, this.excessWidth + 868, (int)((float)(136 - this.eZ) - 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var1.setImageOrientation(0);
                  var12 = this.af[2];
                  var4 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var4), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var4 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var4), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  var4 = var3;
                  if (this.R()) {
                     var4 = var3;
                     if (this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3])) {
                        var4 = var3;
                        if (!this.eb) {
                           var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                           var4 = var3;
                        }
                     }
                  }
               }

               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  byte var14 = 0;
                  var3 = var4;

                  for(var4 = var14; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }

               var3 = 5;

               for(var4 = 5; var4 >= 0; --var4) {
                  if (this.eM[var4]) {
                     if (this.eL[var4] == 0) {
                        var12 = this.ae[15];
                        var5 = dv[this.eK[var4]] / 2;
                        var1.drawScaledImageI(var12, this.excessWidth + (var3 * 88 + 447 - var5), 58 - this.eZ - dv[this.eK[var4]] / 2, dv[this.eK[var4]] + 58, dv[this.eK[var4]] + 58, var4 + 33);
                     } else {
                        var12 = this.ae[15];
                        var5 = dv[this.eK[var4]] / 2;
                        var1.drawScaledImageI(var12, this.excessWidth + (var3 * 88 + 447 - var5), 58 - this.eZ - dv[this.eK[var4]] / 2, dv[this.eK[var4]] + 58, dv[this.eK[var4]] + 58, var4 + 27);
                     }

                     --var3;
                  }
               }
            } else if (this.bB[8] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }

               if (this.gV[1] >= 10) {
                  var1.drawScaledImageI(this.an, 667, (int)(470.0F + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }

               var1.drawScaledImageI(this.ae[21], 688 - dv[this.fx[14]] / 2, 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
               var1.drawScaledImageI(this.ae[21], 733 - dv[this.fx[14]] / 2, 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
            } else if (this.bB[9] == 1) {
               var1.setColor(0, 0, 0, 204);
               var1.drawRectangle(0, 0 - this.eZ, this.getWidth(), this.getHeight());
               if (this.gV[1] >= 10) {
                  var1.drawScaledImageI(this.an, this.excessWidth / 2 + 786, (int)(235.0F + 10.0F * aMath.sin((float)(this.gV[2] * 30))), 96, 96, 0);
               }

               var12 = this.ae[25];
               var3 = dv[this.hk[4]] / 2;
               var1.drawScaledImageI(var12, this.excessWidth / 2 + (786 - var3), this.he[1] + 345 - dv[this.hk[4]] / 2 - 10, dv[this.hk[4]] + 96, dv[this.hk[4]] + 96, 3);
               var1.drawScaledImageI(this.al, this.getWidth() / 2 - eO[this.gV[0]] * 690 / 100 / 2, 320 - eO[this.gV[0]] * 179 / 100 / 2 - 30, eO[this.gV[0]] * 690 / 100, eO[this.gV[0]] * 179 / 100, 0);
               if (this.gV[0] >= this.getLength(eO) - 1) {
                  var4 = 0;

                  for(var3 = 0; var4 < 4; ++var4) {
                     if (this.ai[var4].isLoaded()) {
                        var3 = -(var4 - 1);
                     }
                  }

                  for(var4 = 0; var4 < 4; ++var4) {
                     if (var4 == 0) {
                        var1.setColor(255, 255, 0);
                     } else {
                        var1.setColor(255, 255, 255);
                     }

                     if (this.ai[var4].isLoaded()) {
                        var1.drawScaledImage(this.ai[var4], this.getWidth() / 2, var3 * 18 + 287 - 30, 1);
                     }

                     var3 += 2;
                  }
               }

               if (this.gV[1] >= 10) {
                  var12 = this.af[2];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (615 - var3), 388 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 168, dv[this.gZ[0]] + 72, 0);
                  var12 = this.ae[21];
                  var3 = dv[this.gZ[0]] / 2;
                  var1.drawScaledImageI(var12, this.excessWidth / 2 + (651 - var3), 396 - dv[this.gZ[0]] / 2, dv[this.gZ[0]] + 97, dv[this.gZ[0]] + 55, 20);
                  if (this.R() && this.b(this.gX[0][0], this.gX[0][1], this.gX[0][2], this.gX[0][3]) && !this.eb) {
                     var1.drawScaledImageI(this.af[2], this.excessWidth / 2 + 614, 387, 168, 72, this.gV[2] % 4 / 2 + 1);
                  }
               }
            }
      }

   }

   boolean q() {
      boolean var1 = false;
      float[] var2;
      int var3;
      boolean var11;
      int[] var13;
      int var10002;
      if (this.hc[1] == 0) {
         var2 = this.hb;
         var2[1] += 0.5F;
         var2 = this.hb;
         var2[0] += this.hb[1];
         var13 = this.he;
         var10002 = var13[0]--;
         if (this.hb[1] >= 30.0F) {
            this.hc[1] = 1;
            this.he[0] = -100;

            for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
               if (this.ag[var3].isLoaded()) {
                  this.ag[var3].reset();
               }
            }

            this.hc[3] = 300;
            this.ag[0].a(this.dh[0][0], "FONT_SYSTEM_BOLD", 30, 1);
            this.ag[1].a(this.dh[0][1], "FONT_SYSTEM_BOLD", 30, 1);
            this.ag[2].a(this.dl, "FONT_SYSTEM_BOLD", 30, 1);
         }
      } else if (this.hc[1] == 1) {
         var13 = this.hg;
         var13[0] += 40;
         var13 = this.he;
         var13[0] += this.hg[0];
         var13 = this.hc;
         var13[0] += 20;
         if (this.hc[0] > 178) {
            this.hc[0] = 178;
            this.hc[1] = 2;
            this.he[1] = -600;
            this.hb[0] = 0.0F;
         }
      } else if (this.hc[1] == 2) {
         var13 = this.he;
         var13[1] = (int)((double)var13[1] * 0.7);
         if (this.he[1] >= 0) {
            this.he[1] = 0;
            this.hc[1] = 3;
         }
      } else if (this.hc[1] == 3) {
         var2 = this.hb;
         var2[0] += 6.0F;
         this.he[2] = (int)(10.0F * aMath.sin(this.hb[0]));
         if (this.bB[9] == 0) {
            var13 = this.hc;
            var10002 = var13[27]++;
            if (this.hc[27] >= 60) {
               this.screenTransition();
               this.hc[27] = 0;
               this.bB[9] = 1;
               this.gU = true;
               var3 = 0;

               while(true) {
                  var11 = var1;
                  if (var3 >= this.getLength(this.gV)) {
                     return var11;
                  }

                  this.gV[var3] = 0;
                  ++var3;
               }
            }
         }

         if (this.bB[9] >= 2) {
            var13 = this.hc;
            var10002 = var13[28]++;
            if (this.hk[1] >= 1) {
               var13 = this.hk;
               var10002 = var13[1]++;
               if (this.hk[1] > this.getLength(dv) - 1) {
                  this.hk[1] = 0;
                  this.hl = 0;
                  this.ha[1] = true;
                  if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
                     this.hc[3] = 300;
                     this.ag[0].a(this.dj[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dj[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[3].a(this.dm[this.hl], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[4].a(this.dn[this.hl][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[5].a(this.dn[this.hl][1], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else if (this.hk[2] >= 1) {
               var13 = this.hk;
               var10002 = var13[2]++;
               if (this.hk[2] > this.getLength(dv) - 1) {
                  this.hk[2] = 0;
                  this.hl = 1;
                  this.ha[1] = true;
                  if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
                     this.hc[3] = 300;
                     this.ag[0].a(this.dj[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dj[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[3].a(this.dm[this.hl], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[4].a(this.dn[this.hl][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[5].a(this.dn[this.hl][1], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else if (this.hk[3] >= 1) {
               var13 = this.hk;
               var10002 = var13[3]++;
               if (this.hk[3] > this.getLength(dv) - 1) {
                  this.hk[3] = 0;
                  this.hl = 2;
                  this.ha[1] = true;
                  if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
                     this.hc[3] = 300;
                     this.ag[0].a(this.dj[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dj[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[3].a(this.dm[this.hl], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[4].a(this.dn[this.hl][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[5].a(this.dn[this.hl][1], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else if (this.hk[4] >= 1) {
               var13 = this.hk;
               var10002 = var13[4]++;
               if (this.hk[4] > this.getLength(dv) - 1) {
                  this.hk[4] = 0;
                  this.hl = 3;
                  this.ha[1] = true;
                  if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
                     this.hc[3] = 300;
                     this.ag[0].a(this.dj[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dj[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[3].a(this.dm[this.hl], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[4].a(this.dn[this.hl][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[5].a(this.dn[this.hl][1], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else if (this.hk[5] >= 1) {
               var13 = this.hk;
               var10002 = var13[5]++;
               if (this.hk[5] > this.getLength(dv) - 1) {
                  this.hk[5] = 0;
                  this.screenTransition();

                  for(var3 = 0; var3 < this.getLength(this.ha); ++var3) {
                     this.ha[var3] = false;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hc); ++var3) {
                     this.hc[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hd); ++var3) {
                     this.hd[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hf); ++var3) {
                     this.hf[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.he); ++var3) {
                     this.he[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hg); ++var3) {
                     this.hg[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hh); ++var3) {
                     this.hh[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hi); ++var3) {
                     this.hi[var3] = 0;
                  }

                  for(var3 = 0; var3 < this.getLength(this.hb); ++var3) {
                     this.hb[var3] = 0.0F;
                  }

                  for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
                     if (this.ag[var3].isLoaded()) {
                        this.ag[var3].reset();
                     }
                  }

                  this.ag[0].a(this.cD[5], "FONT_SYSTEM_BOLD", 30, 1);

                  for(var3 = 0; var3 < 4; ++var3) {
                     this.ag[var3 + 1].a(this.cW[0][var3], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[10].a(this.db[1], "FONT_SYSTEM_BOLD", 30, 1);
                  this.eH[0] = 0;

                  for(var3 = 0; var3 < 10; ++var3) {
                     if (this.eQ == var3 && this.bM[0] == 47) {
                        this.eH[0] = var3;
                        break;
                     }
                  }

                  if (this.eH[0] >= 1) {
                     var13 = this.eH;
                     var10002 = var13[0]++;
                  }

                  if (this.cj[4] == 0) {
                     Sound.getInstance().stop(-1);
                     Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3]);
                     var11 = var1;
                  } else {
                     Sound.getInstance().stop(-1);
                     Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3 + 2]);
                     var11 = var1;
                  }

                  return var11;
               }
            } else if (this.hk[6] >= 1) {
               var13 = this.hk;
               var10002 = var13[6]++;
               if (this.hk[6] > this.getLength(dv) - 1) {
                  this.hk[6] = 0;
                  if (this.bB[9] >= 3) {
                     if (this.aL < ab[this.hl]) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 1;
                        var11 = var1;
                        return var11;
                     }

                     this.aL -= ab[this.hl];
                     this.ag[0].a(this.dk[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dk[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ha[1] = false;
                     this.hc[1] = 4;
                     if (this.hl < this.getLength(this.hE)) {
                        var13 = this.hE;
                        var3 = this.hl;
                        var10002 = var13[var3]++;
                        if (this.hE[this.hl] >= 999999999) {
                           this.hE[this.hl] = 999999999;
                        }
                     }

                     this.ac();
                  } else {
                     this.ag[0].a(this.dk[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.dk[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                     this.bB[9] = 3;
                     this.ha[1] = false;
                     this.hc[1] = 4;
                     this.ac();
                  }
               }
            } else if (this.hk[7] >= 1) {
               var13 = this.hk;
               var10002 = var13[7]++;
               if (this.hk[7] > this.getLength(dv) - 1) {
                  this.hk[7] = 0;
                  this.ha[1] = false;
                  if (this.bB[9] >= 3 && this.aL < ab[this.hl]) {
                     var3 = aMath.rand(this.getLength(this.di));
                     this.ag[0].a(this.di[var3][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.di[var3][1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            } else if (this.fx[14] >= 1) {
               var13 = this.fx;
               var10002 = var13[14]++;
               if (this.fx[14] > this.getLength(dv) - 1) {
                  this.fx[14] = 0;
                  if (this.bB[8] == 0) {
                     this.screenTransition();
                     this.bB[8] = 1;
                     this.gU = true;

                     for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                        this.gV[var3] = 0;
                     }

                     Sound.getInstance().setVolume(50);
                     var11 = var1;
                     return var11;
                  } else {
                     if (this.aL >= 900000) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 10000;
                        var11 = var1;
                     } else {
                        this.screenTransition();
                        this.menuType = 0;
                        this.j = true;
                        var11 = var1;
                     }

                     return var11;
                  }
               }
            } else {
               if (!this.ha[1]) {
                  if (this.bB[9] >= 3) {
                     if (this.R() && this.b(this.hj[1][0], this.hj[1][1], this.hj[1][2], this.hj[1][3])) {
                        if (!this.gr[1]) {
                           Sound.getInstance().play(10);
                           this.gr[1] = true;
                        }
                     } else {
                        this.gr[1] = false;
                     }

                     if (this.R() && this.b(this.hj[2][0], this.hj[2][1], this.hj[2][2], this.hj[2][3])) {
                        if (!this.gr[2]) {
                           Sound.getInstance().play(10);
                           this.gr[2] = true;
                        }
                     } else {
                        this.gr[2] = false;
                     }

                     if (this.R() && this.b(this.hj[3][0], this.hj[3][1], this.hj[3][2], this.hj[3][3])) {
                        if (!this.gr[3]) {
                           Sound.getInstance().play(10);
                           this.gr[3] = true;
                        }
                     } else {
                        this.gr[3] = false;
                     }
                  }

                  if (this.bB[9] >= 2) {
                     if (this.R() && this.b(this.hj[4][0], this.hj[4][1], this.hj[4][2], this.hj[4][3])) {
                        if (!this.gr[4]) {
                           Sound.getInstance().play(10);
                           this.gr[4] = true;
                        }
                     } else {
                        this.gr[4] = false;
                     }
                  }

                  if (this.bB[9] >= 3) {
                     if (this.S() && this.b(this.hj[1][0], this.hj[1][1], this.hj[1][2], this.hj[1][3])) {
                        Sound.getInstance().play(11);
                        var13 = this.hk;
                        var10002 = var13[1]++;
                     }

                     if (this.S() && this.b(this.hj[2][0], this.hj[2][1], this.hj[2][2], this.hj[2][3])) {
                        Sound.getInstance().play(11);
                        var13 = this.hk;
                        var10002 = var13[2]++;
                     }

                     if (this.S() && this.b(this.hj[3][0], this.hj[3][1], this.hj[3][2], this.hj[3][3])) {
                        Sound.getInstance().play(11);
                        var13 = this.hk;
                        var10002 = var13[3]++;
                     }
                  }

                  if (this.bB[9] >= 2 && this.S() && this.b(this.hj[4][0], this.hj[4][1], this.hj[4][2], this.hj[4][3])) {
                     Sound.getInstance().play(11);
                     var13 = this.hk;
                     var10002 = var13[4]++;
                  }
               } else {
                  if (this.R() && this.b(this.hj[6][0], this.hj[6][1], this.hj[6][2], this.hj[6][3])) {
                     if (!this.gr[6]) {
                        Sound.getInstance().play(10);
                        this.gr[6] = true;
                     }
                  } else {
                     this.gr[6] = false;
                  }

                  if (this.bB[9] >= 3) {
                     if (this.R() && this.b(this.hj[7][0], this.hj[7][1], this.hj[7][2], this.hj[7][3])) {
                        if (!this.gr[7]) {
                           Sound.getInstance().play(10);
                           this.gr[7] = true;
                        }
                     } else {
                        this.gr[7] = false;
                     }
                  }

                  if (this.S() && this.b(this.hj[6][0], this.hj[6][1], this.hj[6][2], this.hj[6][3])) {
                     if (this.bB[9] >= 3) {
                        if (this.aL >= ab[this.hl]) {
                           Sound.getInstance().play(14);
                        } else {
                           Sound.getInstance().play(15);
                        }
                     } else {
                        Sound.getInstance().play(14);
                     }

                     var13 = this.hk;
                     var10002 = var13[6]++;
                  } else if (this.S() && this.b(this.hj[7][0], this.hj[7][1], this.hj[7][2], this.hj[7][3]) && this.bB[9] >= 3) {
                     Sound.getInstance().play(11);
                     var13 = this.hk;
                     var10002 = var13[7]++;
                  }
               }

               if (this.bB[9] >= 3) {
                  if (this.R() && this.b(this.hj[5][0], this.hj[5][1], this.hj[5][2], this.hj[5][3])) {
                     if (!this.gr[5]) {
                        Sound.getInstance().play(10);
                        this.gr[5] = true;
                     }
                  } else {
                     this.gr[5] = false;
                  }

                  if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                     if (!this.gp[14]) {
                        Sound.getInstance().play(10);
                        this.gp[14] = true;
                     }
                  } else {
                     this.gp[14] = false;
                  }

                  if (this.S() && this.b(this.hj[5][0], this.hj[5][1], this.hj[5][2], this.hj[5][3])) {
                     Sound.getInstance().play(11);
                     var13 = this.hk;
                     var10002 = var13[5]++;
                  } else {
                     if (this.T() && !this.ha[1]) {
                        this.hk[5] = 0;
                        this.screenTransition();

                        for(var3 = 0; var3 < this.getLength(this.ha); ++var3) {
                           this.ha[var3] = false;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hc); ++var3) {
                           this.hc[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hd); ++var3) {
                           this.hd[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hf); ++var3) {
                           this.hf[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.he); ++var3) {
                           this.he[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hg); ++var3) {
                           this.hg[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hh); ++var3) {
                           this.hh[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hi); ++var3) {
                           this.hi[var3] = 0;
                        }

                        for(var3 = 0; var3 < this.getLength(this.hb); ++var3) {
                           this.hb[var3] = 0.0F;
                        }

                        for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
                           if (this.ag[var3].isLoaded()) {
                              this.ag[var3].reset();
                           }
                        }

                        this.ag[0].a(this.cD[5], "FONT_SYSTEM_BOLD", 30, 1);

                        for(var3 = 0; var3 < 4; ++var3) {
                           this.ag[var3 + 1].a(this.cW[0][var3], "FONT_SYSTEM_BOLD", 30, 1);
                        }

                        this.ag[10].a(this.db[1], "FONT_SYSTEM_BOLD", 30, 1);
                        this.eH[0] = 0;

                        for(var3 = 0; var3 < 10; ++var3) {
                           if (this.eQ == var3 && this.bM[0] == 47) {
                              this.eH[0] = var3;
                              break;
                           }
                        }

                        if (this.eH[0] >= 1) {
                           var13 = this.eH;
                           var10002 = var13[0]++;
                        }

                        if (this.cj[4] == 0) {
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3]);
                           var11 = var1;
                        } else {
                           Sound.getInstance().stop(-1);
                           Sound.getInstance().play(cn[(this.bM[0] + this.eH[0]) * 3 + 2]);
                           var11 = var1;
                        }

                        return var11;
                     }

                     if (this.T() && this.ha[1]) {
                        if (this.bB[9] >= 3) {
                           this.hk[7] = 0;
                           this.ha[1] = false;
                           if (this.aL < ab[this.hl]) {
                              var3 = aMath.rand(this.getLength(this.di));
                              this.ag[0].a(this.di[var3][0], "FONT_SYSTEM_BOLD", 30, 1);
                              this.ag[1].a(this.di[var3][1], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }
                     } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                        Sound.getInstance().play(11);
                        var13 = this.fx;
                        var10002 = var13[14]++;
                     }
                  }
               }
            }

            if (!this.ha[1]) {
               var13 = this.hc;
               var10002 = var13[3]--;
               if (this.hc[3] <= 0) {
                  var3 = aMath.rand(this.getLength(this.di));
                  this.ag[0].a(this.di[var3][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[1].a(this.di[var3][1], "FONT_SYSTEM_BOLD", 30, 1);
                  this.hc[3] = 300;
               }
            } else if (this.bB[9] >= 3) {
               if (this.aL >= ab[this.hl]) {
                  var13 = this.hc;
                  var10002 = var13[3]--;
                  if (this.hc[3] <= 0) {
                     var3 = aMath.rand(this.getLength(this.di));
                     this.ag[0].a(this.di[var3][0], "FONT_SYSTEM_BOLD", 30, 1);
                     this.ag[1].a(this.di[var3][1], "FONT_SYSTEM_BOLD", 30, 1);
                     this.hc[3] = 300;
                  }
               }
            } else {
               var13 = this.hc;
               var10002 = var13[3]--;
               if (this.hc[3] <= 0) {
                  var3 = aMath.rand(this.getLength(this.di));
                  this.ag[0].a(this.di[var3][0], "FONT_SYSTEM_BOLD", 30, 1);
                  this.ag[1].a(this.di[var3][1], "FONT_SYSTEM_BOLD", 30, 1);
                  this.hc[3] = 300;
               }
            }
         }
      } else if (this.hc[1] == 4) {
         var13 = this.hc;
         var10002 = var13[5]++;
         if (this.hc[5] == 1) {
            this.he[1] = 0;
            this.hg[1] = -2;
         } else if (this.hc[5] <= 50) {
            if (this.hc[5] / 10 <= 2) {
               if (this.hc[5] % 3 == 0) {
                  var13 = this.he;
                  var10002 = var13[1]--;
               }
            } else if (this.hc[5] / 10 <= 3) {
               if (this.hc[5] % 2 == 0) {
                  var13 = this.he;
                  var10002 = var13[1]--;
               }
            } else if (this.hc[5] / 10 <= 4) {
               var13 = this.he;
               var10002 = var13[1]--;
            } else if (this.hc[5] / 10 <= 5) {
               var13 = this.he;
               var13[1] -= 2;
            }
         } else {
            var13 = this.he;
            var13[1] += this.hg[1];
            var13 = this.hg;
            var13[1] += this.hg[1];
         }

         if (this.he[1] <= -2000) {
            this.hc[1] = 5;
         }
      }

      float var4;
      float var5;
      float var6;
      float var7;
      float var8;
      int var9;
      if ((this.hc[1] == 4 || this.hc[1] == 5) && this.hc[26] == 0) {
         var13 = this.hc;
         var10002 = var13[21]++;
         if (this.hc[21] == 1) {
            this.hc[20] = this.z - this.bM[28] * 100;
            this.hc[22] = this.z;
            this.hc[23] = this.bM[5];
         }

         this.eH[0] = this.z / 100;
         this.eH[1] = this.z / 100;
         var4 = (float)this.eH[0] / 100.0F;
         this.z -= this.hc[20] / 200;
         if (this.z < this.bM[28] * 100) {
            this.z = this.bM[28] * 100;
         } else if (this.z > 10000) {
            this.z = 10000;
         }

         this.eH[0] = this.z / 100;
         this.eH[2] = this.z / 100;
         var5 = (float)this.eH[0] / 100.0F;
         this.eH[0] = this.eH[1] - this.eH[2];
         var6 = 0.0F;
         var5 = 0.0F;

         while(true) {
            if (this.eH[0] > 0) {
               var13 = this.eH;
               var10002 = var13[0]--;
               var7 = var5;
               if (var6 != 0.0F) {
                  var7 = var5 - 0.01F;
               }

               var8 = var6 - 0.01F;
            } else {
               var7 = var5;
               var8 = var6;
               if (this.eH[0] != 0) {
                  var13 = this.eH;
                  var10002 = var13[0]++;
                  var7 = var5;
                  if (var6 != 0.0F) {
                     var7 = var5 + 0.01F;
                  }

                  var8 = var6 + 0.01F;
               }
            }

            var3 = -((this.bM[5] + 5) / 10);
            var9 = (int)((float)(this.getWidth() / 2) / (var4 + var8) - (float)var3);
            this.bM[5] = (int)(-(((float)(var3 + var9) * (var4 + var7) / (var4 + var8) - (float)var9) * 10.0F));
            if (this.bM[5] < 0) {
               this.bM[5] = 0;
            }

            var5 = var7;
            var6 = var8;
            if (this.eH[0] == 0) {
               if (this.z < this.bM[28] * 100) {
                  this.z = this.bM[28] * 100;
               } else if (this.z > 10000) {
                  this.z = 10000;
               }

               this.eH[1] = this.z / 100;
               var5 = (float)this.eH[1] / 100.0F;
               if (this.bM[5] < 0) {
                  this.bM[5] = 0;
                  if (this.bM[14] == 0) {
                     this.bM[12] = 0;
                  }
               } else if (this.bM[5] > (int)(((float)this.bV[0] * var5 - (float)9600) / var5)) {
                  this.bM[5] = (int)(((float)this.bV[0] * var5 - (float)9600) / var5);
                  if (this.bM[14] == 0) {
                     this.bM[12] = 0;
                  }
               }
               break;
            }
         }
      }

      if (this.hc[1] == 5) {
         var13 = this.hc;
         var10002 = var13[6]++;
         byte var16;
         if (this.hl == 0) {
            var16 = 40;
         } else {
            var16 = 0;
         }

         if (this.hc[6] == 1) {
            if (this.hl == 0) {
               Sound.getInstance().play(35);
            }

            if (this.hl == 1) {
               Sound.getInstance().play(38);
            }

            if (this.hl == 2) {
               Sound.getInstance().play(39);
            }

            if (this.hl == 3) {
               Sound.getInstance().play(40);
            }
         }

         if (this.hc[6] >= this.aA[aB[this.hl]][0].a() - var16 || aB[this.hl] == 3 && this.hc[6] >= 380) {
            boolean var18;
            label1079: {
               this.hc[6] = this.aA[aB[this.hl]][0].a();
               if (this.hl == 0) {
                  var13 = this.hc;
                  var10002 = var13[7]++;
                  if (this.hc[7] == 1) {
                     Sound.getInstance().play(36);
                  }

                  if (this.hc[7] == 32) {
                     Sound.getInstance().play(37);
                  }

                  if (this.hc[7] >= 30) {
                     var13 = this.hc;
                     var10002 = var13[8]++;
                     if (this.hc[7] >= this.aA[1][1].a()) {
                        this.hc[7] = this.aA[1][1].a();
                     }
                  }

                  if (this.hc[8] == 1) {
                     Sound.getInstance().play(36);
                  }

                  if (this.hc[8] == 32) {
                     Sound.getInstance().play(37);
                  }

                  if (this.hc[8] >= 30) {
                     var13 = this.hc;
                     var10002 = var13[9]++;
                     if (this.hc[8] >= this.aA[1][1].a()) {
                        this.hc[8] = this.aA[1][1].a();
                     }
                  }

                  if (this.hc[9] == 1) {
                     Sound.getInstance().play(36);
                  }

                  if (this.hc[9] == 32) {
                     Sound.getInstance().play(37);
                  }

                  if (this.hc[9] >= this.aA[1][1].a()) {
                     this.hc[9] = this.aA[1][1].a();
                     var18 = true;
                     break label1079;
                  }
               } else {
                  int var12;
                  if (this.hl == 1) {
                     label1075: {
                        var13 = this.hc;
                        var10002 = var13[7]++;
                        if (this.hc[7] == 1) {
                           this.hm[2] = 1;
                           if (this.hm[2] == 1) {
                              var3 = 0;
                              var12 = 1;

                              while(true) {
                                 if (var12 >= this.getLength(this.bR[1])) {
                                    break label1075;
                                 }

                                 var9 = var3;
                                 if (this.bR[1][var12][0] != 0) {
                                    if (this.bR[1][var12][1] == 4) {
                                       var9 = var3;
                                    } else {
                                       for(var9 = 0; var9 < 10; ++var9) {
                                          if (this.eU[var9] == this.bR[1][var12][0]) {
                                             var3 = var9;
                                             break;
                                          }
                                       }

                                       this.aw[var3].a(0).a().a(this.aw[var3], this.aw[var3].a(0).b(), this.aw[var3].a(0).c(), this.x);
                                       this.bR[1][var12][30] = this.x.x * 10 + 0;
                                       this.bR[1][var12][32] = 10;
                                       this.bR[1][var12][31] = 0;
                                       this.bR[1][var12][33] = aMath.rand(60) + 10;
                                       var9 = var3;
                                    }
                                 }

                                 ++var12;
                                 var3 = var9;
                              }
                           }
                        }

                        var3 = 0;
                     }

                     if (this.hc[7] >= 1) {
                        for(var9 = 1; var9 < this.getLength(this.bR[1]); ++var9) {
                           if (this.bR[1][var9][0] != 0 && this.bR[1][var9][1] != 4) {
                              if (this.bR[1][var9][31] >= this.bR[1][var9][33]) {
                                 var13 = this.bR[1][var9];
                                 var13[3] -= this.bR[1][var9][32];
                                 var13 = this.bR[1][var9];
                                 var13[32] += this.bR[1][var9][32];
                                 if (this.bR[1][var9][32] >= 100000) {
                                    this.bR[1][var9][32] = 1000000;
                                 }
                              } else {
                                 var13 = this.bR[1][var9];
                                 var10002 = var13[3]--;
                              }

                              var13 = this.bR[1][var9];
                              var10002 = var13[31]++;
                              if (this.bR[1][var9][30] >= this.bR[1][var9][3]) {
                                 this.bR[1][var9][3] = this.bR[1][var9][30];
                              }
                           }
                        }
                     }

                     if (this.hc[7] >= this.aA[2][1].a()) {
                        this.hc[7] = this.aA[2][1].a();
                        if (this.hm[2] == 1) {
                           var12 = 1;

                           while(true) {
                              if (var12 >= this.getLength(this.bR[1])) {
                                 this.hm[2] = 0;
                                 break;
                              }

                              var9 = var3;
                              if (this.bR[1][var12][0] != 0) {
                                 if (this.bR[1][var12][1] == 4) {
                                    var9 = var3;
                                 } else {
                                    for(var9 = 0; var9 < 10; ++var9) {
                                       if (this.eU[var9] == this.bR[1][var12][0]) {
                                          var3 = var9;
                                          break;
                                       }
                                    }

                                    this.aw[var3].a(0).a().a(this.aw[var3], this.aw[var3].a(0).b(), this.aw[var3].a(0).c(), this.x);
                                    this.bR[1][var12][3] = this.x.x * 10 + 0;
                                    var9 = var3;
                                 }
                              }

                              ++var12;
                              var3 = var9;
                           }
                        }

                        var18 = true;
                        break label1079;
                     }
                  } else {
                     if (this.hl == 2) {
                        var13 = this.hc;
                        var10002 = var13[7]++;
                        if (this.hc[7] == 1) {
                           this.hh[0] = aMath.rand(20) - 10;
                           this.hi[0] = aMath.rand(20) - 5;
                        }

                        for(var3 = 0; var3 < 9; ++var3) {
                           if (this.hc[var3 + 7] >= 6) {
                              var13 = this.hc;
                              var9 = var3 + 8;
                              var10002 = var13[var9]++;
                              if (this.hc[var3 + 8] == 1) {
                                 do {
                                    this.hh[var3 + 1] = aMath.rand(20) - 10;
                                    this.hi[var3 + 1] = aMath.rand(20) - 5;
                                 } while(this.hh[var3 + 0] == this.hh[var3 + 1] && this.hi[var3 + 0] == this.hi[var3 + 1]);
                              }
                           }
                        }

                        boolean var15 = false;
                        var12 = 0;

                        while(true) {
                           var18 = var15;
                           if (var12 >= 10) {
                              break label1079;
                           }

                           if (var12 <= 8) {
                              var18 = var15;
                              if (this.hc[var12 + 7] >= this.aA[0][1].a()) {
                                 this.hc[var12 + 7] = this.aA[0][1].a();
                                 var18 = var15;
                              }
                           } else {
                              var18 = var15;
                              if (this.hc[var12 + 7] >= this.aA[0][1].a()) {
                                 this.hc[var12 + 7] = this.aA[0][1].a();
                                 var18 = true;
                              }
                           }

                           ++var12;
                           var15 = var18;
                        }
                     }

                     if (this.hl != 3) {
                        var18 = true;
                        break label1079;
                     }

                     if (this.hc[7] == 0) {
                        this.hd[0] = this.getWidth() / 2 - 82 - 4;
                        this.he[2] = this.getHeight() / 2 - 23 - 64 - 60;
                     }

                     var13 = this.hc;
                     var13[7] += 10;
                     if (this.hc[7] >= 255) {
                        this.hc[7] = 255;
                        var13 = this.hd;
                        var13[0] /= 2;
                        var13 = this.he;
                        var13[2] /= 2;
                        if (this.hd[0] <= 0 && this.he[2] <= 0) {
                           this.eN = 0;
                           var18 = true;
                           break label1079;
                        }
                     }
                  }
               }

               var18 = false;
            }

            if (var18) {
               var13 = this.hc;
               var13[0] -= 20;
               this.hc[26] = 1;
               if (this.hc[0] <= 0) {
                  this.hc[0] = 0;
               }

               this.hc[21] = 0;
               var13 = this.hc;
               var10002 = var13[24]++;
               if (this.hc[24] == 1) {
                  this.hc[25] = this.hc[20] / 5 * 2;
               }

               this.eH[0] = this.z / 100;
               this.eH[1] = this.z / 100;
               var4 = (float)this.eH[0] / 100.0F;
               this.z += this.hc[20] / 10;
               if (this.z < this.bM[28] * 100) {
                  this.z = this.bM[28] * 100;
               } else if (this.z > 10000) {
                  this.z = 10000;
               }

               this.eH[0] = this.z / 100;
               this.eH[2] = this.z / 100;
               var5 = (float)this.eH[0] / 100.0F;
               this.eH[0] = this.eH[1] - this.eH[2];
               var6 = 0.0F;
               var5 = 0.0F;

               while(true) {
                  if (this.eH[0] > 0) {
                     var13 = this.eH;
                     var10002 = var13[0]--;
                     var8 = var5;
                     if (var6 != 0.0F) {
                        var8 = var5 - 0.01F;
                     }

                     var7 = var6 - 0.01F;
                  } else {
                     var8 = var5;
                     var7 = var6;
                     if (this.eH[0] != 0) {
                        var13 = this.eH;
                        var10002 = var13[0]++;
                        var8 = var5;
                        if (var6 != 0.0F) {
                           var8 = var5 + 0.01F;
                        }

                        var7 = var6 + 0.01F;
                     }
                  }

                  var9 = -((this.bM[5] + 5) / 10);
                  var3 = (int)((float)(this.getWidth() / 2) / (var4 + var7) - (float)var9);
                  this.bM[5] = (int)(-(((float)(var9 + var3) * (var4 + var8) / (var4 + var7) - (float)var3) * 10.0F));
                  if (this.bM[5] < 0) {
                     this.bM[5] = 0;
                  }

                  var5 = var8;
                  var6 = var7;
                  if (this.eH[0] == 0) {
                     if (this.z < this.bM[28] * 100) {
                        this.z = this.bM[28] * 100;
                     } else if (this.z > this.hc[22]) {
                        this.z = this.hc[22];
                     }

                     this.eH[1] = this.z / 100;
                     var5 = (float)this.eH[1] / 100.0F;
                     if (this.bM[5] < 0) {
                        this.bM[5] = 0;
                        if (this.bM[14] == 0) {
                           this.bM[12] = 0;
                        }
                     } else if (this.bM[5] > (int)(((float)this.bV[0] * var5 - (float)9600) / var5)) {
                        this.bM[5] = (int)(((float)this.bV[0] * var5 - (float)9600) / var5);
                        if (this.bM[14] == 0) {
                           this.bM[12] = 0;
                        }
                     }

                     Sound.getInstance().setVolume(100 - this.hc[24] * 10);
                     if (this.hc[24] >= 10) {
                        this.hc[24] = 10;
                     }

                     if (this.hc[0] > 0 || this.z < this.hc[22]) {
                        break;
                     }

                     if (this.hl == 3) {
                        if (this.bN[0] != 7) {
                           if (this.bM[11] + 1 >= 8) {
                              this.fU = 0;
                              this.bN[0] = 7;
                              this.bN[1] = 0;
                              this.bN[2] = 0;
                              this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                              for(var3 = 0; var3 < 10; ++var3) {
                                 var13 = this.bM;
                                 var13[9] += cB[1] * this.bO[var3][1] / 100;
                              }

                              this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                              for(var3 = 0; var3 < 10; ++var3) {
                                 var13 = this.bM;
                                 var13[8] += cB[0] * this.bO[var3][0] / 100;
                              }

                              this.bM[25] = 14;
                           } else {
                              this.fU = 0;
                              this.bN[0] = 7;
                              this.bN[1] = 0;
                              this.bN[2] = 0;
                              this.bM[9] = this.bM[7] * (this.bN[0] * 5 + 10) / 10;

                              for(var3 = 0; var3 < 10; ++var3) {
                                 var13 = this.bM;
                                 var13[9] += cB[1] * this.bO[var3][1] / 100;
                              }

                              this.bM[8] = this.bM[6] * (this.bN[0] + 10) / 10;

                              for(var3 = 0; var3 < 10; ++var3) {
                                 var13 = this.bM;
                                 var13[8] += cB[0] * this.bO[var3][0] / 100;
                              }

                              this.bM[25] = 14;
                           }
                        }

                        this.bM[10] = this.bM[9];
                     }

                     for(var3 = 0; var3 < this.getLength(this.ha); ++var3) {
                        this.ha[var3] = false;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hc); ++var3) {
                        this.hc[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hd); ++var3) {
                        this.hd[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hf); ++var3) {
                        this.hf[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.he); ++var3) {
                        this.he[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hg); ++var3) {
                        this.hg[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hb); ++var3) {
                        this.hb[var3] = 0.0F;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hh); ++var3) {
                        this.hh[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.hi); ++var3) {
                        this.hi[var3] = 0;
                     }

                     for(var3 = 0; var3 < this.getLength(this.ag); ++var3) {
                        if (this.ag[var3].isLoaded()) {
                           this.ag[var3].reset();
                        }
                     }

                     for(var3 = 0; var3 < 4; ++var3) {
                        this.ag[var3 + 1].a(this.cW[0][var3], "FONT_SYSTEM_BOLD", 30, 1);
                     }

                     this.ag[10].a(this.db[1], "FONT_SYSTEM_BOLD", 30, 1);
                     if (aB[this.hl] == 0 || aB[this.hl] == 1 || aB[this.hl] == 3) {
                        this.hm[aB[this.hl]] = 1;
                     }

                     this.eH[0] = 0;

                     for(var3 = 0; var3 < 10; ++var3) {
                        if (this.eQ == var3 && this.bM[0] == 47) {
                           this.eH[0] = var3;
                           break;
                        }
                     }

                     if (this.eH[0] >= 1) {
                        var13 = this.eH;
                        var10002 = var13[0]++;
                     }

                     if (this.cj[4] == 0) {
                        Sound.getInstance().stop(-1);
                        Sound var10 = Sound.getInstance();
                        var13 = cn;
                        var3 = this.bM[0];
                        var10.play(var13[(this.eH[0] + var3) * 3]);
                     } else {
                        Sound.getInstance().stop(-1);
                        Sound var17 = Sound.getInstance();
                        int[] var14 = cn;
                        var3 = this.bM[0];
                        var17.play(var14[(this.eH[0] + var3) * 3 + 2]);
                     }
                     break;
                  }
               }
            }
         }
      }

      var13 = this.hc;
      var10002 = var13[2]++;
      var11 = true;
      return var11;
   }

   void itemShopLoad() {
      if (this.be == 1) {
         this.be = 2;
      }

      this.resetTextures();

      int var1;
      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.gp[3] = true;

      for(var1 = 0; var1 < this.getLength(this.gC); ++var1) {
         this.gC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(int var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fR); ++var1) {
         this.fR[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gS); ++var1) {
         this.gS[var1] = 0;
      }

      this.gy = 200;

      for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
         this.gm[var1] = 0;
      }

      this.gm[1] = 297;
      if (this.gQ == 0) {
         this.fQ[0] = this.getLength(cu) - 1;
      }

      for(var1 = 0; var1 < this.getLength(this.gB); ++var1) {
         this.gB[var1] = 0;
      }

      this.eE[0] = true;
      this.gC[0] = 1;
      this.gC[2] = 0;
      this.gC[1] = 10;
      if (this.gR == 0) {
         this.gB[0] = 0;
      } else {
         this.gB[0] = 6;
      }

      this.eh[0] = -(this.gy * this.gC[0] + this.gB[0] * this.gy);
      this.gP[0] = this.gC[0] + this.gB[0];
      this.gP[2] = this.gB[0];
      this.gP[1] = this.gy * 100 + this.eh[0] / this.gy;
      this.gB[0] = 6;
      this.fw[0][0] = 4;
      this.fw[0][1] = 365;
      this.fw[0][2] = 383;
      this.fw[0][3] = 89;
      this.fw[1][0] = this.getWidth() / 2 - 163 + 242 - 15;
      this.fw[1][1] = 62;
      this.fw[1][2] = 88;
      this.fw[1][3] = 88;
      this.fw[2][0] = this.getWidth() / 2 - 163 + 242 - 15;
      this.fw[2][1] = 191;
      this.fw[2][2] = 88;
      this.fw[2][3] = 88;
      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gA); ++var1) {
         this.gA[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.dc); ++var1) {
         this.ag[var1].a(this.dc[var1], "FONT_SYSTEM_BOLD", 30, 1);
         this.gA[0] = var1 + 1;
      }

      if (this.gP[2] < this.gB[0]) {
         this.ag[this.gA[0]].a(this.cY[6], "FONT_SYSTEM_BOLD", 30, 1);
      } else {
         this.ag[this.gA[0]].a(this.cY[8], "FONT_SYSTEM_BOLD", 30, 1);
      }

      this.gA[1] = this.gA[0] + 1;

      for(var1 = this.gA[1]; var1 < this.gA[1] + 3; ++var1) {
         this.ag[var1].a(this.dd[this.gP[2]][var1 - this.gA[1]], "FONT_SYSTEM_BOLD", 30, 1);
      }

      if (this.ae[6].isLoaded()) {
         this.ae[6].reset();
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
      }

      if (this.ae[7].isLoaded()) {
         this.ae[7].reset();
      }

      if (!this.ae[7].isLoaded()) {
         this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 37)), MyUtility.getString(String.format("img%03d.imgcut", 37)));
      }

      if (this.ae[8].isLoaded()) {
         this.ae[8].reset();
      }

      if (!this.ae[8].isLoaded()) {
         this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 38)), MyUtility.getString(String.format("img%03d.imgcut", 38)));
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].reset();
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
      }

      if (!this.ae[11].isLoaded()) {
         this.ae[11].reset();
      }

      if (!this.ae[11].isLoaded()) {
         this.ae[11].load(MyUtility.getString(String.format("item%03d.png", 0)), MyUtility.getString(String.format("item%03d.imgcut", 0)));
      }

      for(var1 = 0; var1 < this.getLength(this.gF); ++var1) {
         this.gF[var1] = false;
      }

      this.hI = false;
   }

   void r(TextureRenderer var1) {
      var1.drawScaledImageI(this.ae[7], 0, 48, this.getWidth(), 542, 0);
      var1.drawScaledImageI(this.ae[7], this.excessWidth / 2 + 45, 62, 5);
      var1.drawScaledImageI(this.ae[7], this.excessWidth / 2 + 45, 127, 7);
      var1.drawScaledImageI(this.ae[7], this.excessWidth / 2 + 45, 222, 8);
      var1.drawScaledImageI(this.ae[7], this.excessWidth / 2 + 45, 222, 8);
      var1.drawScaledImageI(this.ae[7], this.excessWidth / 2 + 176, 90, 11);
      var1.drawScaledImageI(this.ae[8], 0, 287, 48);
      if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
         var1.drawScaledImage(this.ag[this.gA[4]], 146, 291, 1);
      }

      Texture var2;
      int var3;
      if (!this.gJ) {
         if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
            var2 = this.af[3];
            var3 = dv[this.fx[11]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth + (652 - var3), 287 - dv[this.fx[11]] / 2, dv[this.fx[11]] + 304, dv[this.fx[11]] + 74, 0);
            var2 = this.ae[7];
            var3 = dv[this.fx[11]] / 2;
            var1.drawScaledImageI(var2, this.excessWidth + (690 - var3), 293 - dv[this.fx[11]] / 2, dv[this.fx[11]] + 231, dv[this.fx[11]] + 62, 3);
            if (!this.eE[5] && !this.eE[0] && !this.eE[1] && !this.gU && !this.gu && this.R() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
               var1.drawScaledImageI(this.af[3], this.excessWidth + 652, 287, 304, 74, this.fQ[3] % 4 / 2 + 1);
            }
         }
      } else {
         var2 = this.af[3];
         var3 = dv[this.fx[11]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth + (652 - var3), 287 - dv[this.fx[11]] / 2, dv[this.fx[11]] + 304, dv[this.fx[11]] + 74, 0);
         var2 = this.ae[7];
         var3 = dv[this.fx[11]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth + (690 - var3), 293 - dv[this.fx[11]] / 2, dv[this.fx[11]] + 231, dv[this.fx[11]] + 62, 4);
         if (!this.eE[0] && !this.eE[1] && !this.gU && !this.gu && this.R() && this.b(this.fw[11][0], this.fw[11][1], this.fw[11][2], this.fw[11][3])) {
            int[] var24 = this.fQ;
            int var10002 = var24[10]++;
            var1.drawScaledImageI(this.af[3], this.excessWidth + 652, 287, 304, 74, this.fQ[10] % 4 / 2 + 1);
         }
      }

      int var4;
      int var5;
      int var8;
      float var10;
      float var11;
      float var12;
      float var13;
      float var14;
      float var15;
      float var16;
      float var17;
      float var18;
      float var19;
      float var20;
      float var21;
      for(var4 = 1; var4 < this.gC[0] + 1 + this.gC[1] + this.gC[2]; ++var4) {
         if (this.ff[0] == var4) {
            this.eH[0] = this.gH;
            if (this.ff[5] == 0) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = (float)(-(328 - this.go[var4][0]));
         } else if (this.ff[0] + 1 == var4) {
            this.eH[0] = 0;
            if (this.ff[5] == 1) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = (float)(328 - this.go[var4][0]);
         } else if (this.ff[0] + 2 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F;
         } else if (this.ff[0] + 3 == var4) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = (float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 - 1][0]) / 2.0F + (float)(328 - this.go[var4 - 2][0]) / 2.0F;
         } else if (this.ff[0] - 1 == var4) {
            this.eH[0] = 0;
            if (this.ff[5] == -1) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F);
         } else {
            if (this.ff[0] - 2 != var4) {
               continue;
            }

            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = -((float)(328 - this.go[var4][0]) + (float)(328 - this.go[var4 + 1][0]) / 2.0F + (float)(328 - this.go[var4 + 2][0]) / 2.0F);
         }

         if (var4 - this.gC[0] > -1 && var4 - this.gC[0] < this.gC[1] + 1) {
            var2 = this.ae[8];
            var21 = (float)this.getWidth() / 2.0F;
            var18 = (float)this.go[var4][0] / 2.0F;
            var19 = (float)(this.gy * var4);
            var17 = (float)this.eh[0];
            var1.drawScaledImage(var2, (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F + var21 - var18 + var19 + var17 + var11, (float)(559 - this.go[var4][1]), (float)this.go[var4][0] - (float)(cC[this.eH[0]] * 328) / 100.0F, (float)this.go[var4][1], 47);
         } else {
            var3 = 0;
            var2 = this.ae[8];
            var10 = (float)this.getWidth() / 2.0F;
            var20 = (float)this.go[var4][0] / 2.0F;
            var18 = (float)(this.gy * var4);
            var21 = (float)this.eh[0];
            var13 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
            var16 = (float)(dv[this.eH[1]] / 2);
            var17 = (float)(559 - this.go[var4][1] - dv[this.eH[1]] / 2);
            var12 = (float)this.go[var4][0];
            var19 = (float)(cC[this.eH[0]] * 328) / 100.0F;
            var1.drawScaledImage(var2, var10 - var20 + var18 + var21 + var11 + var13 - var16, var17, (float)dv[this.eH[1]] + (var12 - var19), (float)(this.go[var4][1] + dv[this.eH[1]]), 53);
            if (var4 - this.gC[0] <= -1) {
               var3 = this.gE[-(var4 - this.gC[0]) - 1];
            } else if (var4 - this.gC[0] >= this.gC[1] + 1) {
               var3 = this.gE[var4 - this.gC[0] - this.gC[1] - 1];
            }

            float var22;
            if (var3 != 0 && var3 != 1) {
               var2 = this.ae[8];
               var21 = (float)this.getWidth() / 2.0F;
               var19 = (float)this.go[var4][0] / 2.0F;
               var16 = (float)(this.gy * var4);
               var18 = (float)this.eh[0];
               var10 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var15 = (float)(dv[this.eH[1]] / 2);
               var22 = 183.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var12 = (float)(dv[this.eH[1]] / 2);
               var13 = (float)this.go[var4][0];
               var20 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var17 = (float)dv[this.eH[1]];
               var14 = 60.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var2, var21 - var19 + var16 + var18 + var11 + var10 - var15, 559.0F - var22 - var12, var17 + (var13 - var20), (float)dv[this.eH[1]] + var14, 49);
               var2 = this.ae[8];
               var15 = (float)this.getWidth() / 2.0F;
               var12 = (float)this.go[var4][0] / 2.0F;
               var20 = (float)(this.gy * var4);
               var14 = (float)this.eh[0];
               float var23 = 132.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var18 = 132.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
               var16 = (float)(dv[this.eH[1]] / 2);
               var13 = 126.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var17 = (float)(dv[this.eH[1]] / 2);
               var10 = 60.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F;
               var21 = 60.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
               var19 = (float)dv[this.eH[1]];
               var22 = 60.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var2, var15 - var12 + var20 + var14 + var11 + var23 + var18 - var16, 559.0F - var13 - var17, var19 + (var10 - var21), (float)dv[this.eH[1]] + var22, var3 - 1 + 73);
            } else {
               var2 = this.ae[8];
               var10 = (float)this.getWidth() / 2.0F;
               var16 = (float)this.go[var4][0] / 2.0F;
               var22 = (float)(this.gy * var4);
               var15 = (float)this.eh[0];
               var20 = (float)(cC[this.eH[0]] * 328) / 100.0F / 2.0F;
               var21 = (float)(dv[this.eH[1]] / 2);
               var17 = 162.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var14 = (float)(dv[this.eH[1]] / 2);
               var19 = (float)this.go[var4][0];
               var13 = (float)(cC[this.eH[0]] * 328) / 100.0F;
               var12 = (float)dv[this.eH[1]];
               var18 = 60.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var2, var10 - var16 + var22 + var15 + var11 + var20 - var21, 559.0F - var17 - var14, var12 + (var19 - var13), (float)dv[this.eH[1]] + var18, 49);
            }
         }

         if (var4 - this.gC[0] >= 0 && var4 - this.gC[0] <= this.gC[1]) {
            if (this.bq[this.bJ[this.bK[var4 - this.gC[0]]][15]] < this.bJ[this.bK[var4 - this.gC[0]]][0]) {
               var1.setColor(255, 255, 255);
               var3 = this.ag[var4 - this.gC[0]].a();
               var1.drawScaledImage(this.ag[var4 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var4][0] / 2.0F + (float)(this.gy * var4) + (float)this.eh[0] + var11 + 328.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 559.0F - 254.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F);
               var2 = this.ae[8];
               var18 = (float)this.getWidth() / 2.0F;
               var20 = (float)this.go[var4][0] / 2.0F;
               var19 = (float)(this.gy * var4);
               var13 = (float)this.eh[0];
               var21 = 6.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var17 = 6.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
               var1.drawScaledImage(var2, 309.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var18 - var20 + var19 + var13 + var11 + var21 + var17, 559.0F - 102.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 56);
               var2 = this.ae[8];
               var19 = (float)this.getWidth() / 2.0F;
               var17 = (float)this.go[var4][0] / 2.0F;
               var21 = (float)(this.gy * var4);
               var18 = (float)this.eh[0];
               var1.drawScaledImage(var2, 180.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F + var19 - var17 + var21 + var18 + var11, 559.0F - 138.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 138.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F, 34.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 57);
               if (this.ff[3] == 0) {
                  var1.setImageColor(0, 0, 0);
               }
            } else if (this.bu[this.bK[var4 - this.gC[0]]] == 0) {
               var1.setColor(255, 255, 255);
               var3 = this.ag[var4 - this.gC[0]].a();
               var1.drawScaledImage(this.ag[var4 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var4][0] / 2.0F + (float)(this.gy * var4) + (float)this.eh[0] + var11 + 328.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 559.0F - 254.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F);
               var2 = this.ae[8];
               var21 = (float)this.getWidth() / 2.0F;
               var19 = (float)this.go[var4][0] / 2.0F;
               var13 = (float)(this.gy * var4);
               var20 = (float)this.eh[0];
               var18 = 6.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
               var17 = 6.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F;
               var1.drawScaledImage(var2, 309.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var21 - var19 + var13 + var20 + var11 + var18 + var17, 559.0F - 102.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 309.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - 309.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 92.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 56);
               var2 = this.ae[8];
               var19 = (float)this.getWidth() / 2.0F;
               var17 = (float)this.go[var4][0] / 2.0F;
               var21 = (float)(this.gy * var4);
               var18 = (float)this.eh[0];
               var1.drawScaledImage(var2, 180.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F + var19 - var17 + var21 + var18 + var11, 559.0F - 138.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 138.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F, 34.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 57);
               if (this.ff[3] == 0) {
                  var1.setImageColor(0, 0, 0);
               }
            } else {
               var1.setColor(255, 255, 255);
               var3 = this.ag[var4 - this.gC[0]].a();
               var1.drawScaledImage(this.ag[var4 - this.gC[0]], (float)this.getWidth() / 2.0F - (float)this.go[var4][0] / 2.0F + (float)(this.gy * var4) + (float)this.eh[0] + var11 + 328.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F / 2.0F + (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F, 559.0F - 254.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F - (float)var3 * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F * (float)cC[this.eH[0]] / 100.0F, 30.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F);
            }

            var2 = this.ae[var4 + 11 - this.gC[0]];
            var19 = (float)this.getWidth() / 2.0F;
            var17 = (float)this.go[var4][0] / 2.0F;
            var21 = (float)(this.gy * var4);
            var18 = (float)this.eh[0];
            var1.drawScaledImage(var2, 328.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F / 2.0F + var19 - var17 + var21 + var18 + var11, 559.0F - 219.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 328.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 328.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 114.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
            var1.setImageColor(255, 255, 255);
            if (this.bu[this.bK[var4 - this.gC[0]]] == 0) {
               if (this.ff[3] == 0) {
                  if (this.aY >= this.bJ[this.bK[var4 - this.gC[0]]][1]) {
                     var2 = this.ae[8];
                     var21 = (float)this.getWidth() / 2.0F;
                     var17 = (float)this.go[var4][0] / 2.0F;
                     var18 = (float)(this.gy * var4);
                     var19 = (float)this.eh[0];
                     var1.drawScaledImage(var2, 15.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F + var21 - var17 + var18 + var19 + var11, 559.0F - 131.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 187.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F, 53.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 58);
                  }
               } else if (this.aL >= this.bJ[this.bK[var4 - this.gC[0]]][1]) {
                  var2 = this.ae[8];
                  var21 = (float)this.getWidth() / 2.0F;
                  var17 = (float)this.go[var4][0] / 2.0F;
                  var18 = (float)(this.gy * var4);
                  var19 = (float)this.eh[0];
                  var1.drawScaledImage(var2, 15.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F + var21 - var17 + var18 + var19 + var11, 559.0F - 131.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 225.0F * ((float)this.go[var4][0] * 10000.0F / 328.0F) / 10000.0F, 53.0F * ((float)this.go[var4][1] * 10000.0F / 263.0F) / 10000.0F, 58);
               }
            }

            for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
               if (this.bk[var3] == this.bK[var4 - this.gC[0]] + 2) {
                  if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
                     if (this.bK[this.ff[2]] + 2 == this.bK[var4 - this.gC[0]] + 2) {
                        if (!this.fn) {
                           if (this.eE[3]) {
                              var2 = this.ae[9];
                              var19 = (float)(this.getWidth() / 2);
                              var18 = (float)this.go[var4][0] / 2.0F;
                              var21 = (float)(this.gy * var4);
                              var20 = (float)this.eh[0];
                              var17 = 223.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                              var1.drawScaledImage(var2, -59.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var19 - var18 + var21 + var20 + var11 + var17, 559.0F - 217.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
                           } else {
                              var2 = this.ae[9];
                              var18 = (float)(this.getWidth() / 2);
                              var19 = (float)this.go[var4][0] / 2.0F;
                              var20 = (float)(this.gy * var4);
                              var17 = (float)this.eh[0];
                              var21 = 223.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                              var1.drawScaledImage(var2, -59.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var18 - var19 + var20 + var17 + var11 + var21, 559.0F - 217.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
                           }
                        }
                     } else {
                        var2 = this.ae[9];
                        var20 = (float)(this.getWidth() / 2);
                        var21 = (float)this.go[var4][0] / 2.0F;
                        var19 = (float)(this.gy * var4);
                        var18 = (float)this.eh[0];
                        var17 = 223.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                        var1.drawScaledImage(var2, -59.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var20 - var21 + var19 + var18 + var11 + var17, 559.0F - 217.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
                     }
                  } else {
                     var2 = this.ae[9];
                     var18 = (float)(this.getWidth() / 2);
                     var20 = (float)this.go[var4][0] / 2.0F;
                     var19 = (float)(this.gy * var4);
                     var21 = (float)this.eh[0];
                     var17 = 223.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var2, -59.0F * ((float)this.go[var4][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var18 - var20 + var19 + var21 + var11 + var17, 559.0F - 217.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 0);
                  }
               }
            }

            if (this.bu[this.bK[var4 - this.gC[0]]] == 1) {
               var8 = this.bv[this.bK[var4 - this.gC[0]]] + 1;
               if (var8 < this.bi) {
                  var3 = 0;

                  while(true) {
                     var2 = this.ae[5];
                     var12 = (float)this.getWidth() / 2.0F;
                     var17 = (float)this.go[var4][0] / 2.0F;
                     var21 = (float)(this.gy * var4);
                     var19 = (float)this.eh[0];
                     var18 = (float)var3;
                     var13 = 29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                     var20 = 281.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                     var1.drawScaledImage(var2, (-117.0F + (float)var3 * (29.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var12 - var17 + var21 + var19 + var11 - var18 * var13 + var20, 559.0F - 152.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 30.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 30.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 42.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, var8 % 10);
                     var8 /= 10;
                     if (var8 <= 0) {
                        break;
                     }

                     ++var3;
                  }
               } else {
                  var1.drawScaledImage(this.ae[8], (float)this.getWidth() / 2.0F - (float)this.go[var4][0] / 2.0F + (float)(this.gy * var4) + (float)this.eh[0] + var11 - (float)1 * (43.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F) + 290.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F + ((float)1 * (43.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F) - 126.0F) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 559.0F - 144.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 58.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 58.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 35.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 52);
               }

               var8 = this.bX[this.bK[var4 - this.gC[0]] + 2][0][6] / 100;
               var5 = this.bX[this.bK[var4 - this.gC[0]] + 2][0][6] / 100 * this.eQ * 50 / 100;
               var3 = 0;
               var8 += var5;

               while(true) {
                  var2 = this.ae[8];
                  var19 = (float)this.getWidth() / 2.0F;
                  var13 = (float)this.go[var4][0] / 2.0F;
                  var20 = (float)(this.gy * var4);
                  var12 = (float)this.eh[0];
                  var17 = (float)var3;
                  var18 = 13.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                  var21 = 282.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F;
                  var1.drawScaledImage(var2, (-118.0F + (float)var3 * (13.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F)) * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F + var19 - var13 + var20 + var12 + var11 - var17 * var18 + var21, 559.0F - 98.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, 13.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F - 13.0F * ((float)this.go[var4][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 26.0F * ((float)this.go[var4][1] * 100.0F / 263.0F) / 100.0F, var8 % 10 + 1);
                  var8 /= 10;
                  if (var8 <= 0) {
                     break;
                  }

                  ++var3;
               }
            }
         }

         var1.setColor(0, 0, 0);
         if (this.gI && this.ff[0] == var4) {
            var1.setAlpha(cC[this.eH[0]] * 255 / 100);
         } else {
            var1.setAlpha((255 - this.go[var4][0] * 100 / 328 * 255 / 100) * 2);
         }

         if (var4 - this.gC[0] > -1 && var4 - this.gC[0] < this.gC[1] + 1) {
            var1.drawRectangle((int)((float)(this.getWidth() / 2 - this.go[var4][0] / 2 + this.gy * var4 + this.eh[0]) + var11 + (float)(cC[this.eH[0]] * 328 / 100 / 2)), 559 - this.go[var4][1], this.go[var4][0] - cC[this.eH[0]] * 328 / 100, this.go[var4][1]);
         }
      }

      var3 = 0;

      boolean var26;
      while(true) {
         if (var3 >= this.getLength(this.bk)) {
            var26 = false;
            break;
         }

         if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && this.bk[var3] == this.bK[this.ff[2]] + 2 && !this.fn) {
            var26 = true;
            break;
         }

         ++var3;
      }

      if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
         if (!var26 && this.bu[this.bK[this.ff[2]]] >= 1 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[5]) {
            if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
               var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 297, 324, 260, 32);
            } else {
               var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 297, 324, 260, 31);
            }
         }
      } else if ((this.ff[2] <= -1 || this.ff[2] >= this.gC[1] + 1) && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[5]) {
         if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
            var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 297, 324, 260, 32);
         } else {
            var1.drawScaledImageI(this.ae[8], this.excessWidth / 2 + 316, 297, 324, 260, 31);
         }
      }

      for(var3 = 1; var3 < this.gC[0] + 1 + this.gC[1] + this.gC[2]; ++var3) {
         if (this.ff[0] == var3) {
            this.eH[0] = this.gH;
            if (this.ff[5] == 0) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = (float)(-(328 - this.go[var3][0]));
         } else if (this.ff[0] + 1 == var3) {
            this.eH[0] = 0;
            if (this.ff[5] == 1) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = (float)(328 - this.go[var3][0]);
         } else if (this.ff[0] + 2 == var3) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = (float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 - 1][0]) / 2.0F;
         } else if (this.ff[0] + 3 == var3) {
            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = (float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 - 1][0]) / 2.0F + (float)(328 - this.go[var3 - 2][0]) / 2.0F;
         } else if (this.ff[0] - 1 == var3) {
            this.eH[0] = 0;
            if (this.ff[5] == -1) {
               this.eH[1] = this.fx[2];
            } else {
               this.eH[1] = 0;
            }

            var11 = -((float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 + 1][0]) / 2.0F);
         } else {
            if (this.ff[0] - 2 != var3) {
               continue;
            }

            this.eH[0] = 0;
            this.eH[1] = 0;
            var11 = -((float)(328 - this.go[var3][0]) + (float)(328 - this.go[var3 + 1][0]) / 2.0F);
         }

         if (var3 - this.gC[0] >= 0 && var3 - this.gC[0] <= this.gC[1] && this.bq[this.bJ[this.bK[var3 - this.gC[0]]][15]] >= this.bJ[this.bK[var3 - this.gC[0]]][0] && this.bu[this.bK[var3 - this.gC[0]]] == 0 && this.fQ[3] % 8 / 4 == 0) {
            var2 = this.am;
            var20 = (float)this.getWidth() / 2.0F;
            var21 = (float)this.go[var3][0] / 2.0F;
            var18 = (float)(this.gy * var3);
            var17 = (float)this.eh[0];
            var19 = 269.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F;
            var1.drawScaledImage(var2, -135.0F * ((float)this.go[var3][0] * 100.0F / 328.0F / 100.0F) * (float)cC[this.eH[0]] / 100.0F + var11 + var20 - var21 + var18 + var17 + var19, 559.0F - 303.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 80.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F - 80.0F * ((float)this.go[var3][0] * 100.0F / 328.0F) / 100.0F * (float)cC[this.eH[0]] / 100.0F, 80.0F * ((float)this.go[var3][1] * 100.0F / 263.0F) / 100.0F, 0);
         }
      }

      for(var3 = 0; var3 < 10; ++var3) {
         if (this.fh - 1 != var3 && this.bk[var3] != -1 && this.ak[var3].isLoaded()) {
            var2 = this.ak[var3];
            var4 = this.fg[var3][0];
            var8 = this.fj[var3][0];
            var5 = this.fg[var3][1];
            var1.drawScaledImageI(var2, var8 + var4, this.fj[var3][1] + var5, 110, 85, 0);
         }
      }

      if (this.fh >= 1) {
         var1.setImageAlpha(255 - this.fi);
         if (!this.fn) {
            if (this.eE[3]) {
               var1.drawScaledImageI(this.ak[this.fh - 1], this.K() - this.fl - this.fj[this.fh - 1][2] * 110 / 100 / 2, this.L() - this.fm - this.fj[this.fh - 1][3] * 85 / 100 / 2, this.fj[this.fh - 1][2] * 110 / 100 + 110, this.fj[this.fh - 1][3] * 85 / 100 + 85, 0);
            } else {
               var1.drawScaledImageI(this.ak[this.fh - 1], this.fg[this.fh - 1][0] + this.fj[this.fh - 1][0] - this.fj[this.fh - 1][2] * 110 / 100 / 2, this.fg[this.fh - 1][1] + this.fj[this.fh - 1][1] - this.fj[this.fh - 1][3] * 85 / 100 / 2, this.fj[this.fh - 1][2] * 110 / 100 + 110, this.fj[this.fh - 1][3] * 85 / 100 + 85, 0);
            }
         }
      }

      var1.setImageAlpha(255);

      for(var3 = 0; var3 < 10; ++var3) {
         if (this.bk[var3] != -1 && this.fh - 1 != var3 && this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && this.bk[var3] - 2 == this.bK[this.ff[2]]) {
            if (this.fQ[3] % 4 != 0 && this.fQ[3] % 4 != 1) {
               var2 = this.ae[7];
               var8 = this.fg[var3][0];
               var4 = this.fj[var3][0];
               var5 = this.fg[var3][1];
               var1.drawScaledImageI(var2, var4 + var8, this.fj[var3][1] + var5, 110, 85, 10);
            } else {
               var2 = this.ae[7];
               var4 = this.fg[var3][0];
               var5 = this.fj[var3][0];
               var8 = this.fg[var3][1];
               var1.drawScaledImageI(var2, var5 + var4, this.fj[var3][1] + var8, 110, 85, 9);
            }
         }
      }

      for(var3 = 0; var3 < 10; ++var3) {
         if (this.fh - 1 != var3 && this.bk[var3] != -1 && this.ak[var3].isLoaded()) {
            this.a(var1, this.bX[this.bk[var3]][0][6] / 100 + this.bX[this.bk[var3]][0][6] / 100 * this.eQ * 50 / 100, this.fg[var3][0] + this.fj[var3][0] - 22 + 3 + 110, this.fg[var3][1] + this.fj[var3][1] - 26 + 2 + 85, 0, 0, 1);
         }
      }

      if (this.gJ) {
         var1.drawScaledImageI(this.ae[7], this.getWidth() / 2 - eO[this.gK] * 869 / 100 / 2, 183 - eO[this.gK] * 180 / 100 / 2, eO[this.gK] * 869 / 100, eO[this.gK] * 180 / 100, 1);
         var1.setColor(255, 255, 255);
         if (this.gK >= this.getLength(eO) - 1 && this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
            if (this.bq[this.bJ[this.bK[this.ff[2]]][15]] < this.bJ[this.bK[this.ff[2]]][0]) {
               var1.drawScaledImage(this.ag[this.gA[0] + 1], this.getWidth() / 2, 123, 1);
               var1.drawScaledImage(this.ag[this.gA[0] + 2], this.getWidth() / 2, 159, 1);
            } else if (this.bu[this.bK[this.ff[2]]] != 0) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  var1.drawScaledImage(this.ag[var3], this.getWidth() / 2, (var3 - this.gA[3]) * 36 + 128 - 5, 1);
               }
            }
         }
      }

      if (this.bq[0] >= 48 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && this.ff[2] >= 0 && this.ff[2] <= this.gC[1] && this.bv[this.bK[this.ff[2]]] + 1 >= 10) {
         var1.drawScaledImageI(this.ae[8], this.getWidth() / 2 - 164 + 285 - dv[this.fx[12]] / 2, 516 - dv[this.fx[12]] / 2, dv[this.fx[12]] + 69, dv[this.fx[12]] + 69, 46);
      }

      if (-this.eh[0] % this.gy != 0) {
         if (-this.eh[0] % this.gy >= this.gy / 2) {
            this.eH[0] = 1;
            this.eH[1] = 328 - this.go[this.ff[0] + this.eH[0]][0];
         } else {
            this.eH[0] = 0;
            this.eH[1] = -(328 - this.go[this.ff[0] + this.eH[0]][0]);
         }
      } else {
         this.eH[0] = 0;
         this.eH[1] = -(328 - this.go[this.ff[0] + this.eH[0]][0]);
      }

      int var6;
      int var7;
      int var9;
      if (this.fn) {
         var1.setImageAlpha(127);
         var2 = this.ae[8];
         var3 = this.eh[1];
         var5 = (this.go[this.ff[0] + this.eH[0]][0] + this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55) / 100) / 2;
         var6 = this.ei[1];
         var7 = (this.go[this.ff[0] + this.eH[0]][1] + this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55) / 100) / 2;
         var8 = this.go[this.ff[0] + this.eH[0]][0];
         var9 = this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55) / 100;
         var4 = this.go[this.ff[0] + this.eH[0]][1];
         var1.drawScaledImageI(var2, var3 - var5, var6 - var7, var9 + var8, this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55) / 100 + var4, 47);
         var3 = this.ag[this.ff[2]].a();
         var2 = this.ag[this.ff[2]];
         var10 = (float)this.eh[1];
         var11 = ((float)this.go[this.ff[0] + this.eH[0]][0] + (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F) / 2.0F;
         var12 = (float)this.go[this.ff[0] + this.eH[0]][0] / 2.0F;
         var13 = (float)this.go[this.ff[0] + this.eH[0]][0] / 2.0F * (float)(this.fo[0] - 55) / 100.0F;
         var14 = (float)var3 / 2.0F;
         var15 = (float)var3 / 2.0F * (float)(this.fo[0] - 55) / 100.0F;
         var16 = (float)(this.ei[1] + 9);
         var17 = (float)((this.fo[1] - 55) * 9) / 100.0F;
         var18 = ((float)this.go[this.ff[0] + this.eH[0]][1] + (float)(this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55)) / 100.0F) / 2.0F;
         var19 = (float)var3 * ((float)this.go[this.ff[0] + this.eH[0]][0] * 10000.0F / 328.0F) / 10000.0F;
         var20 = (float)((this.fo[0] - 55) * var3) / 100.0F;
         var21 = 30.0F * ((float)this.go[this.ff[0] + this.eH[0]][1] * 10000.0F / 263.0F) / 10000.0F;
         var1.drawScaledImage(var2, var10 - var11 + var12 + var13 - (var14 + var15), var16 + var17 - var18, var20 + var19, (float)((this.fo[1] - 55) * 30) / 100.0F + var21);
         var2 = this.ae[this.ff[2] + 11];
         var19 = (float)this.eh[1];
         var17 = ((float)this.go[this.ff[0] + this.eH[0]][0] + (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F) / 2.0F;
         var21 = (float)(this.ei[1] + 44);
         var11 = (float)((this.fo[1] - 55) * 44) / 100.0F;
         var20 = ((float)this.go[this.ff[0] + this.eH[0]][1] + (float)(this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55)) / 100.0F) / 2.0F;
         var12 = (float)this.go[this.ff[0] + this.eH[0]][0];
         var18 = (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F;
         var13 = 114.0F * ((float)(this.go[this.ff[0] + this.eH[0]][1] * 100) / 263.0F) / 100.0F;
         var1.drawScaledImage(var2, var19 - var17, var21 + var11 - var20, var18 + var12, (float)((this.fo[1] - 55) * 114) / 100.0F + var13, 0);
         if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
            var3 = this.bv[this.bK[this.ff[2]]] + 1;
         }

         byte var27;
         if (var3 < this.bi) {
            var27 = 0;
            var4 = var3;
            var3 = var27;

            while(true) {
               var2 = this.ae[8];
               var20 = (float)this.eh[1];
               var19 = ((float)this.go[this.ff[0] + this.eH[0]][0] + (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F) / 2.0F;
               var11 = (float)(290 - var3 * 13);
               var10 = (float)((290 - var3 * 13) * (this.fo[0] - 55)) / 100.0F;
               var12 = (float)(this.ei[1] + 120);
               var13 = (float)((this.fo[1] - 55) * 120) / 100.0F;
               var21 = ((float)this.go[this.ff[0] + this.eH[0]][1] + (float)(this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55)) / 100.0F) / 2.0F;
               var18 = 14.0F * ((float)this.go[this.ff[0] + this.eH[0]][0] * 10000.0F / 328.0F) / 10000.0F;
               var16 = (float)((this.fo[0] - 55) * 14) / 100.0F;
               var17 = 34.0F * ((float)this.go[this.ff[0] + this.eH[0]][1] * 10000.0F / 263.0F) / 10000.0F;
               var1.drawScaledImage(var2, var11 + var10 + (var20 - var19), var12 + var13 - var21, var16 + var18, (float)((this.fo[1] - 55) * 34) / 100.0F + var17, var4 % 10 + 11);
               var4 /= 10;
               if (var4 <= 0) {
                  break;
               }

               ++var3;
            }
         } else {
            var2 = this.ae[8];
            var20 = (float)this.eh[1];
            var11 = ((float)this.go[this.ff[0] + this.eH[0]][0] + (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F) / 2.0F;
            var19 = (float)247;
            var17 = (float)((this.fo[0] - 55) * 247) / 100.0F;
            var21 = (float)(this.ei[1] + 119);
            var12 = (float)((this.fo[1] - 55) * 119) / 100.0F;
            var13 = ((float)this.go[this.ff[0] + this.eH[0]][1] + (float)(this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55)) / 100.0F) / 2.0F;
            var18 = 58.0F * ((float)this.go[this.ff[0] + this.eH[0]][0] * 10000.0F / 328.0F) / 10000.0F;
            var10 = (float)((this.fo[0] - 55) * 58) / 100.0F;
            var16 = 35.0F * ((float)this.go[this.ff[0] + this.eH[0]][1] * 10000.0F / 263.0F) / 10000.0F;
            var1.drawScaledImage(var2, var19 + var17 + (var20 - var11), var21 + var12 - var13, var10 + var18, (float)((this.fo[1] - 55) * 35) / 100.0F + var16, 52);
         }

         if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
            var3 = this.bX[this.bK[this.ff[2]] + 2][0][6] / 100 + this.bX[this.bK[this.ff[2]] + 2][0][6] / 100 * this.eQ * 50 / 100;
         } else {
            var3 = 0;
         }

         var27 = 0;
         var4 = var3;
         var3 = var27;

         while(true) {
            var2 = this.ae[8];
            var21 = (float)this.eh[1];
            var17 = ((float)this.go[this.ff[0] + this.eH[0]][0] + (float)(this.go[this.ff[0] + this.eH[0]][0] * (this.fo[0] - 55)) / 100.0F) / 2.0F;
            var10 = (float)(282 - var3 * 13);
            var20 = (float)((282 - var3 * 13) * (this.fo[0] - 55)) / 100.0F;
            var19 = (float)(this.ei[1] + 165);
            var11 = (float)((this.fo[1] - 55) * 165) / 100.0F;
            var13 = ((float)this.go[this.ff[0] + this.eH[0]][1] + (float)(this.go[this.ff[0] + this.eH[0]][1] * (this.fo[1] - 55)) / 100.0F) / 2.0F;
            var16 = 13.0F * ((float)this.go[this.ff[0] + this.eH[0]][0] * 10000.0F / 328.0F) / 10000.0F;
            var12 = (float)((this.fo[0] - 55) * 13) / 100.0F;
            var18 = 26.0F * ((float)this.go[this.ff[0] + this.eH[0]][1] * 10000.0F / 263.0F) / 10000.0F;
            var1.drawScaledImage(var2, var10 + var20 + (var21 - var17), var19 + var11 - var13, var12 + var16, (float)((this.fo[1] - 55) * 26) / 100.0F + var18, var4 % 10 + 1);
            var4 /= 10;
            if (var4 <= 0) {
               break;
            }

            ++var3;
         }
      }

      var1.setImageAlpha(255);
      var1.setImageAlpha(127);
      if (this.ff[2] >= 0) {
         var1.drawScaledImageI(this.ae[10], (int)(49.0F + 10.0F * aMath.sin((float)(this.fQ[4] * 30))), 391, 0);
      }

      if (this.ff[2] < this.gC[1] + this.gC[2]) {
         var1.setImageOrientation(1);
         var1.drawScaledImageI(this.ae[10], (int)(849.0F - 10.0F * aMath.sin((float)(this.fQ[4] * 30)) + (float)this.excessWidth), 391, 0);
      }

      var1.setImageOrientation(0);
      var1.setImageAlpha(255);
      if (this.ff[2] >= 0 && this.ff[2] <= this.gC[1]) {
         var4 = -this.gC[1];
         var3 = this.gC[1];
         var8 = 0;

         do {
            if (this.ff[2] == var8) {
               var1.setImageColor(255, 255, 255);
               var1.setImageAlpha(255);
            } else {
               var1.setImageColor(0, 0, 0);
               var1.setImageAlpha(200);
            }

            var1.drawScaledImageI(this.ae[6], this.getWidth() / 2 - 6 + var4 * 10, 60, 0);
            var4 += 2;
            var5 = var3 - 1;
            ++var8;
            var3 = var5;
         } while(var5 >= 0);
      }

      var1.setImageColor(255, 255, 255);
      var1.setImageAlpha(255);
      var1.drawScaledImageI(this.af[0], this.getWidth() / 2 - 572 - this.fP, 0, 572, 637, 0);
      var2 = this.af[0];
      var3 = this.getWidth() / 2;
      var1.drawScaledImageI(var2, this.fP + var3, 0, 572, 637, 1);
      var3 = 0;
      if (this.fR[0] == 0) {
         var3 = cu[this.fQ[0]];
      } else if (this.fR[0] == 1) {
         var3 = cv[this.fQ[0]];
      } else {
         var4 = this.fR[0];
      }

      var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var3, 355, 355, 0);
      if (this.fQ[1] == 1 || this.fQ[1] == 2 || this.fQ[1] == 4 || this.fQ[1] == 5) {
         var1.drawScaledImageI(this.ae[1], this.excessWidth + 659, var3, 355, 191, 2);
      }

      var1.drawScaledImageI(this.ae[2], 0, -42, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 638, this.getWidth(), 44, 10);
      var1.drawScaledImageI(this.ae[2], 0, 0, this.getWidth(), 55, 0);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[2], 0, 585, this.getWidth(), 55, 0);
      var1.setImageOrientation(0);
      if (this.gm[0] < 297) {
         if (this.gQ == 0) {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 1);
         } else {
            var1.drawScaledImageI(this.ae[2], 8 - this.gm[0], 3, 8);
         }
      }

      if (this.gm[1] < 297) {
         var1.drawScaledImageI(this.ae[2], 8 - this.gm[1], 3, 3);
      }

      var2 = this.ae[0];
      var6 = this.fw[10][0];
      var4 = dv[this.fx[10]] / 2;
      var5 = this.fw[10][1];
      var3 = dv[this.fx[10]] / 2;
      var8 = this.fw[10][2];
      var9 = dv[this.fx[10]];
      var7 = this.fw[10][3];
      var1.drawScaledImageI(var2, var6 - var4, var5 - var3, var9 + var8, dv[this.fx[10]] + var7, 9);
      var1.drawScaledImageI(this.ae[0], this.fw[10][0] + 4 - dv[this.fx[10]] / 2, this.fw[10][1] + 17 - dv[this.fx[10]] / 2, dv[this.fx[10]] + 84, dv[this.fx[10]] + 60, 3);
      boolean var25 = false;
      var26 = var25;
      if (this.fx[2] == 0) {
         var26 = var25;
         if (this.ff[0] - 1 >= 0) {
            var26 = var25;
            if (this.ff[2] <= 0) {
               var26 = var25;
               if (this.eh[0] % this.gy == 0) {
                  var26 = var25;
                  if (this.ek[0] == 0) {
                     var26 = var25;
                     if (!this.eE[9]) {
                        label438: {
                           if (!this.R()) {
                              var26 = var25;
                              if (!this.S()) {
                                 break label438;
                              }
                           }

                           var26 = var25;
                           if (this.b((int)((float)(this.getWidth() / 2 - this.go[this.ff[0] - 1][0] / 2 + this.gy * (this.ff[0] - 1) + this.eh[0]) - ((float)(328 - this.go[this.ff[0] - 1][0]) + (float)(328 - this.go[this.ff[0] - 1 + 1][0]) / 2.0F)), 559 - this.go[this.ff[0] - 1][1], this.go[this.ff[0] - 1][0], this.go[this.ff[0] - 1][1])) {
                              var26 = true;
                           }
                        }
                     }
                  }
               }
            }
         }
      }

      var25 = var26;
      if (this.fx[2] == 0) {
         var25 = var26;
         if (this.ff[2] >= this.gC[1]) {
            var25 = var26;
            if (this.eh[0] % this.gy == 0) {
               var25 = var26;
               if (this.ek[0] == 0) {
                  var25 = var26;
                  if (!this.eE[9]) {
                     label428: {
                        if (!this.R()) {
                           var25 = var26;
                           if (!this.S()) {
                              break label428;
                           }
                        }

                        var25 = var26;
                        if (this.b(this.getWidth() / 2 - this.go[this.ff[0] + 1][0] / 2 + this.gy * (this.ff[0] + 1) + this.eh[0] + (328 - this.go[this.ff[0] + 1][0]), 559 - this.go[this.ff[0] + 1][1], this.go[this.ff[0] + 1][0], this.go[this.ff[0] + 1][1])) {
                           var25 = true;
                        }
                     }
                  }
               }
            }
         }
      }

      if ((this.fx[2] != 0 || this.ff[2] > -1 && this.ff[2] < this.gC[1] + 1 || this.eE[5] || this.eh[0] % this.gy != 0 || this.ek[0] != 0 || !this.R() && !this.S() || !this.b(this.getWidth() / 2 - this.go[this.ff[0]][0] / 2 + this.gy * this.ff[0] + this.eh[0] - (328 - this.go[this.ff[0]][0]), 559 - this.go[this.ff[0]][1], this.go[this.ff[0]][0], this.go[this.ff[0]][1])) && !this.eE[5] && this.fx[2] == 0 && !var25 && !this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eb && this.eE[10] && !this.gJ) {
         var1.drawScaledImageI(this.ae[0], 3, 540, 96, 96, this.fQ[3] % 4 / 2 + 12);
      }

      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 0, 11);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 570, 17, 10);
      var3 = this.aY;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 6, var3 % 10);
         var8 = var3 / 10;
         ++var4;
         var3 = var8;
      } while(var8 > 0);

      var2 = this.ae[0];
      var3 = dv[this.fx[15]] / 2;
      var1.drawScaledImageI(var2, this.excessWidth + (633 - var3), 8 - dv[this.fx[15]] / 2, dv[this.fx[15]] + 62, dv[this.fx[15]] + 36, 23);
      var1.setImageOrientation(2);
      var1.drawScaledImageI(this.ae[5], this.excessWidth + 670, 585, 11);
      var1.setImageOrientation(0);
      if (this.bf >= 1) {
         var2 = this.ae[0];
         var3 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth + (688 - var3), 593 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 55, dv[this.fx[14]] + 42, 21);
         var2 = this.ae[0];
         var3 = dv[this.fx[14]] / 2;
         var1.drawScaledImageI(var2, this.excessWidth + (733 - var3), 610 - dv[this.fx[14]] / 2, dv[this.fx[14]] + 27, dv[this.fx[14]] + 26, 18);
      }

      var1.drawScaledImageI(this.ae[0], this.excessWidth + 610, 607, 24);
      var3 = this.aL;
      var4 = 0;

      do {
         var1.drawScaledImageI(this.ae[5], 924 - var4 * 29 + this.excessWidth, 592, var3 % 10);
         var8 = var3 / 10;
         ++var4;
         var3 = var8;
      } while(var8 > 0);

   }

   boolean itemShopProcess() {
      boolean var1 = false;
      this.resetTextures();
      int[] var2 = this.eh;
      var2[0] += this.ek[0];
      var2 = this.eh;
      var2[1] -= this.ek[0];
      var2 = this.ek;
      var2[0] = (int)((double)var2[0] * 0.9);
      if (this.eh[0] >= this.gy / 2 - this.gy - 20) {
         this.eh[0] = this.gy / 2 - this.gy - 20;
         this.eh[1] = this.gy * 100;
         this.ek[0] = 0;
      } else if (this.eh[0] < -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20)) {
         this.eh[0] = -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20);
         this.ek[0] = 0;
         this.eh[1] = this.gy * 100;
      }

      if (this.R() && !this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && this.fx[1] == 0 && !this.eb && this.fx[0] == 0) {
         if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
            this.ek[0] = 0;
         } else {
            this.hI = true;
         }

         if (this.hI) {
            this.ek[0] = this.K() - this.O();
            if (this.ek[0] != 0 && !this.eE[9]) {
               this.eE[9] = true;
               this.ct = 0;
            }
         }
      } else {
         this.hI = false;
         if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
            this.ek[0] = 0;
            if (this.eh[0] % this.gy != 0) {
               if (-this.eh[0] % this.gy >= this.gy / 2) {
                  this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                  if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                     this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                  }
               } else {
                  this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                  if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                     this.eh[0] = this.eh[0] / this.gy * this.gy;
                  }
               }
            }
         }

         if (!this.S()) {
            this.eE[9] = false;
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.gF[0] && !this.gF[1] && !this.eb) {
         if (this.ek[0] < 0) {
            if (this.gP[0] != -(this.eh[0] / this.gy)) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.ek[0] > 0) {
            if (this.gP[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[3]) {
            Sound.getInstance().play(10);
            this.gp[3] = true;
         }
      }

      if (this.gP[0] != -(this.eh[0] / this.gy)) {
         this.gP[0] = -(this.eh[0] / this.gy);
      }

      if (this.gP[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
         this.gP[1] = (this.gy * 100 + this.eh[0]) / this.gy;
      }

      int var3;
      if (-this.eh[0] % this.gy >= this.gy / 2) {
         if (this.gP[0] + 1 - this.gC[0] != this.gP[2]) {
            this.gP[2] = this.gP[0] + 1 - this.gC[0];
            if (this.gP[2] >= 0 && this.gP[2] <= this.gC[1]) {
               if (this.gP[2] < this.gB[0]) {
                  this.ag[this.gA[0]].a(this.cY[6], "FONT_SYSTEM_BOLD", 30, 1);
               } else {
                  this.ag[this.gA[0]].a(this.cY[8], "FONT_SYSTEM_BOLD", 30, 1);
               }

               for(var3 = this.gA[1]; var3 < this.gA[1] + 3; ++var3) {
                  this.ag[var3].a(this.dd[this.gP[2]][var3 - this.gA[1]], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }
      } else if (this.gP[0] - this.gC[0] != this.gP[2]) {
         this.gP[2] = this.gP[0] - this.gC[0];
         if (this.gP[2] >= 0 && this.gP[2] <= this.gC[1]) {
            if (this.gP[2] < this.gB[0]) {
               this.ag[this.gA[0]].a(this.cY[6], "FONT_SYSTEM_BOLD", 30, 1);
            } else {
               this.ag[this.gA[0]].a(this.cY[8], "FONT_SYSTEM_BOLD", 30, 1);
            }

            for(var3 = this.gA[1]; var3 < this.gA[1] + 3; ++var3) {
               this.ag[var3].a(this.dd[this.gP[2]][var3 - this.gA[1]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }
      }

      int var10002;
      boolean var4;
      if (!this.eE[0] && !this.eE[1] && !this.eb && !this.eE[9] && !this.eE[13]) {
         if (this.fx[0] >= 1) {
            var2 = this.fx;
            var10002 = var2[0]++;
            if (this.fx[0] > this.getLength(dv) - 1) {
               this.fx[0] = 0;
               if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
                  if (this.aL >= 500) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 2;
                     var4 = var1;
                  } else {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 1;
                     var4 = var1;
                  }

                  return var4;
               } else {
                  if (this.aL >= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]]) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 2;
                     var4 = var1;
                  } else {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 1;
                     var4 = var1;
                  }

                  return var4;
               }
            }
         } else if (this.fx[5] >= 1) {
            var2 = this.fx;
            var10002 = var2[5]++;
            if (this.fx[5] > this.getLength(dv) - 1) {
               this.fx[5] = 0;
               if (this.gQ == 0) {
                  this.eE[1] = true;
               } else if (this.gQ >= 1) {
                  this.eE[13] = true;
               }
            }
         } else if (this.fx[14] >= 1) {
            var2 = this.fx;
            var10002 = var2[14]++;
            if (this.fx[14] > this.getLength(dv) - 1) {
               this.fx[14] = 0;
               if (this.bB[8] == 0) {
                  this.screenTransition();
                  this.bB[8] = 1;
                  this.gU = true;

                  for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                     this.gV[var3] = 0;
                  }

                  Sound.getInstance().setVolume(50);
                  var4 = var1;
                  return var4;
               } else {
                  if (this.aL >= 900000) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 10000;
                     var4 = var1;
                  } else {
                     this.screenTransition();
                     this.menuType = 0;
                     this.j = true;
                     var4 = var1;
                  }

                  return var4;
               }
            }
         } else {
            boolean var6;
            label416: {
               if (this.gP[2] < this.gB[0]) {
                  if (this.bA[this.gP[2]] < 9000) {
                     var6 = true;
                     break label416;
                  }
               } else if (this.aY < 90000000) {
                  var6 = true;
                  break label416;
               }

               var6 = false;
            }

            if (var6 && this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
               if (!this.gp[0]) {
                  Sound.getInstance().play(10);
                  this.gp[0] = true;
               }
            } else {
               this.gp[0] = false;
            }

            if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               if (!this.gp[5]) {
                  Sound.getInstance().play(10);
                  this.gp[5] = true;
               }
            } else {
               this.gp[5] = false;
            }

            if (var6 && this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
               if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
                  if (this.aL >= 500) {
                     Sound.getInstance().play(11);
                  } else {
                     Sound.getInstance().play(15);
                  }
               } else if (this.aL >= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]]) {
                  Sound.getInstance().play(11);
               } else {
                  Sound.getInstance().play(15);
               }

               var2 = this.fx;
               var10002 = var2[0]++;
            } else if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               Sound.getInstance().play(11);
               var2 = this.fx;
               var10002 = var2[5]++;
            } else if (this.T()) {
               if (this.gQ == 0) {
                  this.eE[1] = true;
               } else if (this.gQ >= 1) {
                  this.eE[13] = true;
               }
            } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
               var2 = this.fx;
               var10002 = var2[14]++;
               Sound.getInstance().play(11);
            }

            if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
               if (!this.gp[14]) {
                  this.gp[14] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[14] = false;
            }
         }
      }

      if (this.eE[0]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[0] = this.gm[0] * 2 + 1;
         if (this.gm[0] >= 297) {
            this.gm[0] = 297;
            this.gm[1] /= 2;
            this.fQ[6] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = this.getWidth();
            if (this.gm[1] <= 0) {
               this.eE[0] = false;
               this.fQ[2] = 0;
            }
         } else {
            this.fP = fM[this.fQ[2]];
         }
      } else if (this.eE[1]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[1] = this.gm[1] * 2 + 1;
         this.fQ[6] = this.fQ[6] * 2 + 1;
         if (this.gm[1] >= 297) {
            this.gm[1] = 297;
            this.fQ[6] = 126;
            this.gm[0] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = 0;
            if (this.gm[0] <= 0) {
               this.screenTransition();
               if (this.gQ == 0) {
                  this.screen = 5;
                  this.fF = -1;
                  this.fQ[2] = 0;
                  this.eE[1] = false;
                  var4 = var1;
               } else {
                  var4 = var1;
                  if (this.gQ == 1) {
                     this.screen = 9;
                     this.fF = -1;
                     this.fQ[2] = 0;
                     this.eE[1] = false;
                     var4 = var1;
                     return var4;
                  }
               }

               return var4;
            }
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }
      }

      if (this.eE[13]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fP = 0;
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }

         if (this.fQ[2] > this.getLength(fM)) {
            this.fP = 0;
            this.fQ[2] = 0;
            this.screenTransition();
            if (this.gQ == 1) {
               this.screen = 9;
            } else if (this.gQ == 2) {
               this.screen = 7;
            } else if (this.gQ == 3) {
               this.screen = 3;
            } else if (this.gQ == 4) {
               this.screen = 6;
            } else if (this.gQ == 5) {
               this.screen = 8;
            }

            this.fF = -1;
            this.eE[1] = false;
            var4 = var1;
            return var4;
         }
      }

      var2 = this.fQ;
      var10002 = var2[0]--;
      if (this.fQ[0] <= 0) {
         this.fQ[0] = 0;
      }

      for(var3 = 0; var3 < this.getLength(this.go); ++var3) {
         for(int var5 = 0; var5 < this.getLength(this.go[var3]); ++var5) {
            if (var5 == 0) {
               if (var3 == this.gP[0]) {
                  this.go[var3][var5] = this.eh[0] % this.gy * 100 / this.gy * 99 / 100 + 328;
                  if (this.eh[0] > 0) {
                     this.go[var3][var5] = 328 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
                  }
               } else if (var3 == this.gP[0] + 1) {
                  this.go[var3][var5] = 229 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
               } else {
                  this.go[var3][var5] = 229;
               }

               if (this.go[var3][var5] >= 328) {
                  this.go[var3][var5] = 328;
               } else if (this.go[var3][var5] <= 229) {
                  this.go[var3][var5] = 229;
               }
            } else if (var5 == 1) {
               if (var3 == this.gP[0]) {
                  this.go[var3][var5] = this.eh[0] % this.gy * 100 / this.gy * 79 / 100 + 263;
                  if (this.eh[0] > 0) {
                     this.go[var3][var5] = 263 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
                  }
               } else if (var3 == this.gP[0] + 1) {
                  this.go[var3][var5] = 184 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
               } else {
                  this.go[var3][var5] = 184;
               }

               if (this.go[var3][var5] >= 263) {
                  this.go[var3][var5] = 263;
               } else if (this.go[var3][var5] <= 184) {
                  this.go[var3][var5] = 184;
               }
            }
         }
      }

      var2 = this.fQ;
      var10002 = var2[3]++;
      var2 = this.fQ;
      var10002 = var2[4]++;
      var2 = this.fQ;
      var2[5] -= 10;
      if (this.fQ[5] <= 0) {
         this.fQ[5] = 0;

         for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
            this.gG[var3] = 0;
         }
      }

      if (this.gP[2] >= 0 && this.gP[2] <= this.gC[1]) {
         if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
            this.gz = 50;
         } else {
            this.gz = Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]];
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.gF[0] && !this.gF[1] && !this.eb && !this.eE[9]) {
         if ((this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
            this.eE[10] = true;
         } else if (this.fx[10] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }
      } else if (this.fx[10] == 0 && !this.eE[1]) {
         this.eE[10] = false;
      }

      var4 = true;
      return var4;
   }

   void catBaseLoad() {
      //jp.co.ponos.library.a.a.b().f();

      int var1;
      int var2;
      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      this.gQ = 0;
      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[6][0] = this.excessWidth / 2 + 546;
      this.fw[6][1] = 331;
      this.fw[6][2] = 100;
      this.fw[6][3] = 88;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;

      for(var1 = 0; var1 < this.getLength(this.gc); ++var1) {
         this.gc[var1] = 450;
      }

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      if (this.bh >= 1 && this.bz[2] == 0) {
         this.bz[2] = 1;
      }

      if (this.bz[0] >= 2 || this.bz[1] >= 2 || this.bz[2] >= 2 || this.bz[3] >= 2 || this.bz[4] >= 2) {
         this.fK = 5;
         byte var4;
         if (this.bz[0] >= 2) {
            if (this.aX == 0) {
               var4 = 2;
            } else {
               var4 = 0;
            }

            var2 = this.getLength(this.cL) - var4 + 0;
         } else {
            var2 = 0;
         }

         var1 = var2;
         if (this.bz[1] >= 2) {
            var1 = var2 + this.getLength(this.cM);
         }

         var2 = var1;
         if (this.bz[2] >= 2) {
            var2 = var1 + this.getLength(this.cN);
         }

         var1 = var2;
         if (this.bz[3] >= 2) {
            var1 = var2 + this.getLength(this.cO);
         }

         var2 = var1;
         if (this.bz[4] >= 2) {
            var2 = var1 + this.getLength(this.cP);
         }

         this.fJ = aMath.rand(var2);
         if (this.aX == 0) {
            var4 = 2;
         } else {
            var4 = 0;
         }

         if (this.fJ >= 0 && this.bz[0] == 0) {
            this.fJ += this.getLength(this.cL) - var4;
         }

         if (this.fJ >= this.getLength(this.cL) - var4 && this.bz[1] == 0) {
            this.fJ += this.getLength(this.cM);
         }

         if (this.fJ >= this.getLength(this.cL) - var4 + this.getLength(this.cM) && this.bz[2] == 0) {
            this.fJ += this.getLength(this.cN);
         }

         if (this.fJ >= this.getLength(this.cL) - var4 + this.getLength(this.cM) + this.getLength(this.cN) && this.bz[3] == 0) {
            this.fJ += this.getLength(this.cO);
         }

         if (this.aX == 0) {
            var4 = 2;
         } else {
            var4 = 0;
         }

         for(var2 = 0; var2 < 5; ++var2) {
            if (!this.ag[var2].isLoaded()) {
               if (this.fJ < this.getLength(this.cL) - var4) {
                  this.ag[var2].a(this.cL[this.fJ][var2], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM)) {
                  this.ag[var2].a(this.cM[this.fJ - (this.getLength(this.cL) - var4)][var2], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM) + this.getLength(this.cN)) {
                  this.ag[var2].a(this.cN[this.fJ - (this.getLength(this.cL) - var4) - this.getLength(this.cM)][var2], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fJ < this.getLength(this.cL) - var4 + this.getLength(this.cM) + this.getLength(this.cN) + this.getLength(this.cO)) {
                  this.ag[var2].a(this.cO[this.fJ - (this.getLength(this.cL) - var4) - this.getLength(this.cM) - this.getLength(this.cN)][var2], "FONT_SYSTEM_BOLD", 30, 1);
               } else {
                  this.ag[var2].a(this.cP[this.fJ - (this.getLength(this.cL) - var4) - this.getLength(this.cM) - this.getLength(this.cN) - this.getLength(this.cO)][var2], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }
      }

      if (this.bz[0] == 0) {
         this.fK = 0;
         this.bz[0] = 2;
         if (this.by[0] == 0) {
            this.by[0] = 1;
         }

         for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
            if (this.ag[var1].isLoaded()) {
               this.ag[var1].reset();
            }
         }

         for(var1 = 0; var1 < this.getLength(this.cL[0]); ++var1) {
            if (!this.ag[var1].isLoaded()) {
               this.ag[var1].a(this.cL[0][var1], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }
      }

      if (this.bz[1] == 1) {
         this.fK = 1;
         this.hp = 1;

         for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
            if (this.ag[var1].isLoaded()) {
               this.ag[var1].reset();
            }
         }

         for(var1 = 0; var1 < 5; ++var1) {
            if (!this.ag[var1].isLoaded()) {
               this.ag[var1].a(this.cM[0][var1], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }

         this.bz[1] = 2;
         if (this.by[1] == 0) {
            this.by[1] = 1;
         }
      }

      if (this.bz[2] == 1) {
         this.fK = 2;
         this.hp = 2;

         for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
            if (this.ag[var1].isLoaded()) {
               this.ag[var1].reset();
            }
         }

         for(var1 = 0; var1 < 5; ++var1) {
            if (!this.ag[var1].isLoaded()) {
               this.ag[var1].a(this.cN[0][var1], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }

         this.bz[2] = 2;
         if (this.by[2] == 0) {
            this.by[2] = 1;
         }
      }

      if (this.bz[3] == 1) {
         this.hp = 3;
         this.fK = 3;

         for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
            if (this.ag[var1].isLoaded()) {
               this.ag[var1].reset();
            }
         }

         for(var1 = 0; var1 < 5; ++var1) {
            if (!this.ag[var1].isLoaded()) {
               this.ag[var1].a(this.cO[0][var1], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }

         this.bz[3] = 2;
         if (this.by[3] == 0) {
            this.by[3] = 1;
         }
      }

      if (this.bz[4] == 1) {
         this.hp = 4;
         this.fK = 4;

         for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
            if (this.ag[var1].isLoaded()) {
               this.ag[var1].reset();
            }
         }

         for(var1 = 0; var1 < 5; ++var1) {
            if (!this.ag[var1].isLoaded()) {
               this.ag[var1].a(this.cP[0][var1], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }

         this.bz[4] = 2;
         if (this.by[4] == 0) {
            this.by[4] = 1;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      this.eE[2] = true;

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
         this.gm[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      this.resetTextures();

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.fL = 0;

      for(var1 = 0; var1 < this.getLength(this.by); ++var1) {
         int var10000 = this.by[var1];
      }

      this.fL = 5;
      int var3 = 0;

      for(var1 = 0; var1 < this.getLength(this.by); var3 = var2) {
         var2 = var3;
         if (this.by[var1] >= 1) {
            this.fw[var1][0] = 20;
            this.fw[var1][1] = var3 * 72 + 67 + var3 * 20;
            this.fw[var1][2] = 381;
            this.fw[var1][3] = 88;
            var2 = var3 + 1;
         }

         ++var1;
      }

      //if (this.bo == 0 && jp.co.ponos.library.a.a.b().i() && jp.co.ponos.library.a.a.b().j() - this.aQ >= 86400.0) {
      //   this.aQ = jp.co.ponos.library.a.a.b().j();
      //   this.aV = 2;
      //}

      for(var1 = 0; var1 < this.getLength(this.bE); ++var1) {
         if (this.bE[var1] == 0) {
            if (this.aV >= 1 && this.a.get(1) * 600 + this.a.get(2) * 40 + this.a.get(5) > this.aN[1] * 600 + this.aO[1] * 40 + this.aP[1]) {
               this.aN[1] = this.a.get(1);
               this.aO[1] = this.a.get(2);
               this.aP[1] = this.a.get(5);
               this.bo = 1;
            }
            break;
         }

         this.bo = 0;
      }

      this.ac();
   }

   boolean catBaseProcess() {
      boolean var1 = false;
      int[] var2;
      int var10002;
      int var3;
      boolean var4;
      if (!this.eE[0] && !this.eE[2] && !this.eb) {
         if (this.fx[0] >= 1) {
            var2 = this.fx;
            var10002 = var2[0]++;
            if (this.fx[0] > this.getLength(dv) - 1) {
               this.fx[0] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[1] >= 1) {
            var2 = this.fx;
            var10002 = var2[1]++;
            if (this.fx[1] > this.getLength(dv) - 1) {
               this.fx[1] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[2] >= 1) {
            var2 = this.fx;
            var10002 = var2[2]++;
            if (this.fx[2] > this.getLength(dv) - 1) {
               this.fx[2] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[3] >= 1) {
            var2 = this.fx;
            var10002 = var2[3]++;
            if (this.fx[3] > this.getLength(dv) - 1) {
               this.fx[3] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[4] >= 1) {
            var2 = this.fx;
            var10002 = var2[4]++;
            if (this.fx[4] > this.getLength(dv) - 1) {
               this.fx[4] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[5] >= 1) {
            var2 = this.fx;
            var10002 = var2[5]++;
            if (this.fx[5] > this.getLength(dv) - 1) {
               this.fx[5] = 0;
               this.screenTransition();
               this.gu = true;
               this.gw = 7;
               var4 = var1;
               return var4;
            }
         } else if (this.fx[13] >= 1) {
            var2 = this.fx;
            var10002 = var2[13]++;
            if (this.fx[13] > this.getLength(dv) - 1) {
               this.fx[13] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.be >= 1 && this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else if (this.fx[14] >= 1) {
            var2 = this.fx;
            var10002 = var2[14]++;
            if (this.fx[14] > this.getLength(dv) - 1) {
               this.fx[14] = 0;
               if (this.bB[8] == 0) {
                  this.screenTransition();
                  this.bB[8] = 1;
                  this.gU = true;

                  for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                     this.gV[var3] = 0;
                  }

                  Sound.getInstance().setVolume(50);
                  var4 = var1;
                  return var4;
               } else {
                  if (this.aL >= 900000) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 10000;
                     var4 = var1;
                  } else {
                     this.screenTransition();
                     this.menuType = 0;
                     this.j = true;
                     var4 = var1;
                  }

                  return var4;
               }
            }
         } else if (this.fx[15] >= 1) {
            var2 = this.fx;
            var10002 = var2[15]++;
            if (this.fx[15] > this.getLength(dv) - 1) {
               this.fx[15] = this.getLength(dv) - 1;
               var2 = this.fQ;
               var10002 = var2[4]++;
               if (this.be >= 1 && this.fQ[4] >= 10) {
                  this.eE[1] = true;
               }
            }
         } else {
            for(var3 = 0; var3 < this.fL; ++var3) {
               if (this.R() && this.b(this.fw[var3][0], this.fw[var3][1], this.fw[var3][2], this.fw[var3][3]) && var3 != this.fI) {
                  Sound.getInstance().play(10);
                  if (this.by[var3] >= 1) {
                     this.fI = var3;
                  }
               }
            }

            if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               if (!this.gp[5]) {
                  Sound.getInstance().play(10);
                  this.gp[5] = true;
               }
            } else {
               this.gp[5] = false;
            }

            if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) && this.fI == 0) {
               var2 = this.fx;
               var10002 = var2[0]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3]) && this.fI == 1) {
               var2 = this.fx;
               var10002 = var2[1]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[2][0], this.fw[2][1], this.fw[2][2], this.fw[2][3]) && this.fI == 2) {
               var2 = this.fx;
               var10002 = var2[2]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[3][0], this.fw[3][1], this.fw[3][2], this.fw[3][3]) && this.fI == 3) {
               var2 = this.fx;
               var10002 = var2[3]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[4][0], this.fw[4][1], this.fw[4][2], this.fw[4][3]) && this.fI == 4) {
               var2 = this.fx;
               var10002 = var2[4]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               var2 = this.fx;
               var10002 = var2[5]++;
               Sound.getInstance().play(11);
            } else if (this.S() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3])) {
               if (this.be >= 1) {
                  var2 = this.fx;
                  var10002 = var2[13]++;
                  this.fI = 13;
                  Sound.getInstance().play(11);
                  this.gR = 0;
               }
            } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
               if (this.bf >= 1) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[14]++;
               }
            } else if (this.S() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3])) {
               if (this.be >= 1) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[15]++;
                  this.fI = 13;
                  this.gR = 1;
               }
            } else if (this.T()) {
               this.screenTransition();
               this.gu = true;
               this.gw = 7;
               var4 = var1;
               return var4;
            }

            if (this.R() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3]) && this.be >= 1) {
               if (!this.gp[13]) {
                  this.gp[13] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[13] = false;
            }

            if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
               if (!this.gp[14]) {
                  this.gp[14] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[14] = false;
            }

            if (this.be >= 1) {
               if (this.R() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3]) && this.bf >= 1) {
                  if (!this.gp[15]) {
                     this.gp[15] = true;
                     Sound.getInstance().play(10);
                  }
               } else {
                  this.gp[15] = false;
               }
            }
         }
      }

      if (!this.eb && this.fR[0] == 0) {
         var2 = this.fQ;
         var10002 = var2[0]++;
         if (this.fQ[0] >= this.getLength(cu)) {
            this.fR[0] = 1;
            this.fQ[0] = 0;
         }
      }

      if (this.fR[0] == 1) {
         var2 = this.fQ;
         var10002 = var2[0]++;
         if (this.fQ[0] >= this.getLength(cv)) {
            this.fQ[0] = 0;
         }

         var2 = this.fQ;
         var10002 = var2[1]--;
         if (this.fQ[1] <= 0) {
            this.fQ[1] = aMath.rand(120) + 30;
         }
      }

      if (!this.eE[1]) {
         if (!this.eb) {
            for(var3 = 0; var3 < this.getLength(this.gc) - 1; ++var3) {
               if (this.gc[var3] >= 450) {
                  this.gc[var3] = this.gc[var3] * 100 / 200;
                  break;
               }

               this.gc[var3] = this.gc[var3] * 100 / 200;
            }

            if (this.fR[0] != 0 && this.gc[0] < 1 && this.gc[1] < 1 && this.gc[2] < 1 && this.gc[3] < 1 && this.gc[4] < 1) {
               if (this.eE[2] && this.bo == 1) {
                  this.screenTransition();
                  this.eb = true;
                  this.ed = 1;
                  var4 = var1;
                  return var4;
               }

               this.eE[2] = false;
            } else {
               this.eE[2] = true;
            }
         }
      } else {
         for(var3 = this.getLength(this.gc) - 1; var3 >= 0; --var3) {
            if (this.gc[var3] <= 0) {
               this.gc[var3] = 1;
               break;
            }

            this.gc[var3] *= 2;
         }

         if (this.gc[0] >= 800 && this.gc[1] >= 800 && this.gc[2] >= 800 && this.gc[3] >= 800 && this.gc[4] >= 800) {
            if (this.fI == 0) {
               this.fx[0] = 0;
               this.screenTransition();
               this.screen = 9;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               if (this.by[0] == 1) {
                  this.by[0] = 2;
                  var4 = var1;
               }

               return var4;
            }

            if (this.fI == 1) {
               this.fx[1] = 0;
               this.screenTransition();
               this.screen = 7;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               if (this.by[1] == 1) {
                  this.by[1] = 2;
                  var4 = var1;
               }

               return var4;
            }

            if (this.fI == 2) {
               this.fx[2] = 0;
               this.screenTransition();
               this.screen = 3;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               if (this.by[2] == 1) {
                  this.by[2] = 2;
                  var4 = var1;
               }

               return var4;
            }

            if (this.fI == 3) {
               this.fx[3] = 0;
               this.screenTransition();
               this.screen = 6;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               if (this.by[3] == 1) {
                  this.by[3] = 2;
                  var4 = var1;
               }

               return var4;
            }

            if (this.fI == 4) {
               this.fx[4] = 0;
               this.screenTransition();
               this.screen = 8;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               if (this.by[4] == 1) {
                  this.by[4] = 2;
                  var4 = var1;
               }

               return var4;
            }

            if (this.fI == 13) {
               this.screenTransition();
               this.screen = 999;
               this.fF = -1;
               this.eE[0] = true;
               this.eE[1] = false;
               var4 = var1;
               return var4;
            }
         }
      }

      var2 = this.fQ;
      var10002 = var2[3]++;
      if (!this.eE[2]) {
         int var10000;
         if (this.fR[0] == 0) {
            var10000 = cu[this.fQ[0]];
         } else if (this.fR[0] == 1) {
            var10000 = cv[this.fQ[0]];
         } else {
            var3 = this.fR[0];
         }

         if (this.R()) {
            this.eE[6] = true;
            this.eE[3] = false;
            this.fQ[2] = 0;
         } else {
            this.eE[6] = false;
            this.eE[3] = false;
            this.fQ[2] = 0;
         }

         if (this.R() && this.b(this.fw[6][0], this.fw[6][1], this.fw[6][2], this.fw[6][3]) && !this.eE[3] && !this.eE[5]) {
            this.eh[1] = this.K() - this.M();
         } else if (this.R()) {
            this.eh[1] = 0;
            this.eE[5] = true;
         } else {
            this.eh[1] = 0;
            this.eE[5] = false;
         }

         if (this.R() && this.b(this.fw[6][0] + this.eh[1], this.fw[6][1], this.fw[6][2], this.fw[6][3]) && !this.eE[3] && !this.eE[4]) {
            this.eh[0] = this.K() - this.M();
            if (this.eh[0] <= 0) {
               this.eh[0] = 0;
            }

            if (this.eh[0] >= 60) {
               this.eh[0] = 60;
            }
         } else if (this.R()) {
            this.eh[0] = 0;
            this.eE[4] = true;
         } else {
            this.eh[0] = 0;
            this.eE[4] = false;
         }
      }

      var4 = true;
      return var4;
   }

   void mapLoad() {
      this.gI = false;
      //jp.co.ponos.library.a.a.b().f();
      this.z = 10000;

      int var1;
      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      this.gp[6] = true;

      int var2;
      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      this.resetTextures();

      for(var1 = 6; var1 < this.getLength(this.ae) - 6; ++var1) {
         if (this.ae[var1].isLoaded()) {
            this.ae[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gA); ++var1) {
         this.gA[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.cE[1]); ++var1) {
         this.ag[var1 + 10].a(this.cE[1][var1], "FONT_SYSTEM_BOLD", 30, 1);
      }

      if (this.ae[6].isLoaded()) {
         this.ae[6].reset();
      }

      if (!this.ae[6].isLoaded()) {
         this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 18)), MyUtility.getString(String.format("img%03d.imgcut", 18)));
      }

      if (this.ae[7].isLoaded()) {
         this.ae[7].reset();
      }

      if (!this.ae[7].isLoaded()) {
         this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 19)), MyUtility.getString(String.format("img%03d.imgcut", 19)));
      }

      if (this.ae[9].isLoaded()) {
         this.ae[9].reset();
      }

      if (!this.ae[9].isLoaded()) {
         this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 31)), MyUtility.getString(String.format("img%03d.imgcut", 31)));
      }

      if (this.ae[10].isLoaded()) {
         this.ae[10].reset();
      }

      if (!this.ae[10].isLoaded()) {
         this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
      }

      if (this.ae[11].isLoaded()) {
         this.ae[11].reset();
      }

      if (!this.ae[11].isLoaded()) {
         this.ae[11].load(MyUtility.getString(String.format("img%03d.png", 30)), MyUtility.getString(String.format("img%03d.imgcut", 30)));
      }

      if (this.ae[12].isLoaded()) {
         this.ae[12].reset();
      }

      if (!this.ae[12].isLoaded()) {
         this.ae[12].load(MyUtility.getString(String.format("img%03d.png", 33)), MyUtility.getString(String.format("img%03d.imgcut", 33)));
      }

      if (this.ae[13].isLoaded()) {
         this.ae[13].reset();
      }

      if (!this.ae[13].isLoaded()) {
         this.ae[13].load(MyUtility.getString(String.format("img%03d.png", 1)), MyUtility.getString(String.format("img%03d.imgcut", 1)));
      }

      this.fw[0][0] = this.excessWidth + 640;
      this.fw[0][1] = 411;
      this.fw[0][2] = 304;
      this.fw[0][3] = 88;
      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;
      this.fw[16][0] = this.excessWidth + 667;
      this.fw[16][1] = 318;
      this.fw[16][2] = 272;
      this.fw[16][3] = 88;

      for(var1 = 0; var1 < this.getLength(this.eJ); ++var1) {
         this.eJ[var1][0] = var1 * 88 + 447 + this.excessWidth;
         this.eJ[var1][1] = 502;
         this.eJ[var1][2] = 88;
         this.eJ[var1][3] = 88;
      }

      this.eJ[6][0] = 736;
      this.eJ[6][1] = 247;
      this.eJ[6][2] = 95;
      this.eJ[6][3] = 95;

      for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
         this.fQ[var1] = 0;
      }

      if (this.aZ == 0) {
         if (this.gM == 1) {
            for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
               this.gm[var1] = 0;
            }

            this.gm[1] = 297;
         } else {
            for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
               this.gm[var1] = 0;
            }

            this.gm[0] = 297;
            this.fP = this.getWidth();
         }
      } else {
         for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
            this.gm[var1] = 0;
         }

         this.gm[1] = 297;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eH); ++var1) {
         this.eH[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
         this.eE[var1] = false;
      }

      if (this.aZ != 0) {
         this.eE[0] = true;
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
         this.ei[var1] = 0;
      }

      if (this.gQ == 0) {
         for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
            this.eh[var1] = 0;
         }

         for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
            this.ei[var1] = 0;
         }

         this.fR[0] = 0;
         this.fQ[0] = this.getLength(cu) - 1;
         this.gy = 200;
         this.gC[0] = 2;
         if (this.bq[this.eQ] + 1 >= 49) {
            if (this.dH != this.bq[this.eQ] - 1 && this.dH < 48) {
               if (this.bq[this.eQ] + 1 >= 49) {
                  this.gC[1] = 48;
               } else {
                  this.gC[1] = this.bq[this.eQ] + 1;
               }

               this.eh[0] = -(this.gy * this.gC[0] + this.gy * this.dH);
               this.dI[0] = this.gC[0];
               this.dI[2] = this.bp[this.eQ];
               this.dI[1] = this.gy * 100 + this.eh[0] / this.gy;
            } else {
               this.gC[1] = 48;
               this.eh[0] = -(this.gy * this.gC[0] + this.gy * 47);
               this.dI[0] = this.gC[0];
               this.dI[2] = this.bp[this.eQ];
               this.dI[1] = this.gy * 100 + this.eh[0] / this.gy;
            }
         } else if ((this.dH != this.bq[this.eQ] - 1 || this.bI != -1) && this.dH != this.bq[this.eQ]) {
            this.gC[1] = this.bq[this.eQ] + 1;
            this.eh[0] = -(this.gy * this.gC[0] + this.gy * this.dH);
            this.dI[0] = this.gC[0];
            this.dI[2] = this.bp[this.eQ];
            this.dI[1] = this.gy * 100 + this.eh[0] / this.gy;
         } else {
            this.gC[1] = this.bq[this.eQ] + 1;
            this.eh[0] = -(this.gy * this.gC[0] + this.gy * this.bq[this.eQ]);
            this.dI[0] = this.gC[0];
            this.dI[2] = this.bp[this.eQ];
            this.dI[1] = this.gy * 100 + this.eh[0] / this.gy;
            this.dH = this.bq[this.eQ];
         }

         for(var1 = 0; var1 < this.getLength(this.go); ++var1) {
            for(var2 = 0; var2 < this.getLength(this.go[var1]); ++var2) {
               if (var2 == 0) {
                  this.go[var1][var2] = 194;
               } else if (var2 == 1) {
                  this.go[var1][var2] = 64;
               }
            }
         }

         this.dZ = 0;
         this.ea = 0;

         for(var1 = 0; var1 < this.getLength(this.dJ); ++var1) {
            this.dJ[var1] = 0;
         }

         for(var1 = 0; var1 < this.getLength(this.dK); ++var1) {
            this.dK[var1] = 0;
         }
      } else {
         this.gy = 200;
         this.gC[0] = 2;
         var2 = 0;

         for(var1 = 0; var1 < this.getLength(this.dI); ++var1) {
            this.dI[var1] = this.gT[var1];
            var2 = var1 + 1;
         }

         this.eh[0] = this.gT[var2];

         for(var1 = 0; var1 < this.getLength(this.gC); ++var1) {
            this.gC[var1] = this.gD[var1];
         }

         this.eE[0] = true;
         this.fP = this.getWidth() / 2;
         this.gm[0] = 0;
         this.gm[1] = 297;
      }

      this.bI = 0;
      var1 = aMath.rand(4);
      if (var1 == 0) {
         this.dJ[0] = -ck[cm[this.dI[2]]][0] + (this.getWidth() / 2 - 80 - 200);
         this.dK[0] = -ck[cm[this.dI[2]]][1] + 200;
         this.dJ[1] = -200;
         this.dK[1] = -200;
      } else if (var1 == 1) {
         this.dJ[0] = -ck[cm[this.dI[2]]][0] + this.getWidth() / 2 - 80 + 200;
         this.dK[0] = -ck[cm[this.dI[2]]][1] + 600;
         this.dJ[1] = 200;
         this.dK[1] = 200;
      } else if (var1 == 2) {
         this.dJ[0] = -ck[cm[this.dI[2]]][0] + (this.getWidth() / 2 - 80 - 200);
         this.dK[0] = -ck[cm[this.dI[2]]][1] + 600;
         this.dJ[1] = -200;
         this.dK[1] = 200;
      } else if (var1 == 3) {
         this.dJ[0] = -ck[cm[this.dI[2]]][0] + this.getWidth() / 2 - 80 + 200;
         this.dK[0] = -ck[cm[this.dI[2]]][1] + 200;
         this.dJ[1] = 200;
         this.dK[1] = -200;
      }

      if (this.gM == 1) {
         this.gM = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.dM); ++var1) {
         this.dM[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.dN); ++var1) {
         this.dN[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.dO); ++var1) {
         this.dO[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.dP); ++var1) {
         this.dP[var1] = 0;
      }

      this.dQ = 0;
      this.dT = 0;
      this.dU = 0;
      this.gN = false;
      this.dY = 0;
      this.dS = 0;
      this.dR = this.dI[2];
      this.ct = 0;
      var2 = 0;

      for(var1 = 0; var1 < 10; ++var1) {
         var2 += cB[10] * this.bO[var1][10] / 100;
      }

      if (this.aM >= ad[10] + this.bx[10] * 10 + var2) {
         this.aM = var2 + ad[10] + this.bx[10] * 10;
      }

      for(var1 = 0; var1 < this.getLength(this.go); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.go[var1]); ++var2) {
            if (var2 == 0) {
               if (var1 == this.dI[0]) {
                  this.go[var1][var2] = this.eh[0] % this.gy * 100 / this.gy * 49 / 100 + 243;
                  if (this.eh[0] > 0) {
                     this.go[var1][var2] = 243 - this.eh[0] % this.gy * 100 / this.gy * 49 / 100;
                  }
               } else if (var1 == this.dI[0] + 1) {
                  this.go[var1][var2] = 194 - this.eh[0] % this.gy * 100 / this.gy * 49 / 100;
               } else {
                  this.go[var1][var2] = 194;
               }

               if (this.go[var1][var2] >= 243) {
                  this.go[var1][var2] = 243;
               } else if (this.go[var1][var2] <= 194) {
                  this.go[var1][var2] = 194;
               }
            } else if (var2 == 1) {
               if (var1 == this.dI[0]) {
                  this.go[var1][var2] = this.eh[0] % this.gy * 100 / this.gy * 17 / 100 + 81;
                  if (this.eh[0] > 0) {
                     this.go[var1][var2] = 81 - this.eh[0] % this.gy * 100 / this.gy * 17 / 100;
                  }
               } else if (var1 == this.dI[0] + 1) {
                  this.go[var1][var2] = 64 - this.eh[0] % this.gy * 100 / this.gy * 17 / 100;
               } else {
                  this.go[var1][var2] = 64;
               }

               if (this.go[var1][var2] >= 81) {
                  this.go[var1][var2] = 81;
               } else if (this.go[var1][var2] <= 64) {
                  this.go[var1][var2] = 64;
               }
            }
         }
      }

      this.hI = false;
   }

   boolean mapProcess() {
      boolean var1 = false;
      int var2;
      if (this.be >= 1 && !this.eE[0] && this.bB[7] == 0) {
         this.screenTransition();
         this.bB[7] = 1;
         this.gU = true;

         for(var2 = 0; var2 < this.getLength(this.gV); ++var2) {
            this.gV[var2] = 0;
         }
      } else {
         int[] var3 = this.eh;
         var3[0] += this.ek[0];
         var3 = this.eh;
         var3[1] -= this.ek[0];
         var3 = this.ek;
         var3[0] = (int)((double)var3[0] * 0.9);
         if (this.eh[0] > this.gy / 2 - this.gy * this.gC[0] - 20) {
            this.eh[0] = this.gy / 2 - this.gy * this.gC[0] - 20;
            this.eh[1] = this.gy * 100;
            this.ek[0] = 0;
         } else if (this.eh[0] < -(this.gy * (this.gC[0] - 1) + this.gy * this.gC[1] + this.gy / 2 - 20)) {
            this.eh[0] = -(this.gy * (this.gC[0] - 1) + this.gy * this.gC[1] + this.gy / 2 - 20);
            this.ek[0] = 0;
            this.eh[1] = this.gy * 100;
         }

         if (this.R() && !this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eE[13] && this.dY == 0 && !this.eb && !this.dV && this.fx[0] == 0) {
            if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
               this.ek[0] = 0;
            } else {
               this.hI = true;
            }

            if (this.hI) {
               this.ek[0] = this.K() - this.O();
               if (this.ek[0] != 0 && !this.eE[9]) {
                  this.ct = 0;
                  this.gA[0] = 0;
                  this.eE[9] = true;
               }
            }
         } else {
            this.hI = false;
            if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
               this.ek[0] = 0;
               if (this.eh[0] % this.gy != 0) {
                  if (-this.eh[0] % this.gy >= this.gy / 2) {
                     this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                     if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                        this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                     }
                  } else {
                     this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                     if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                        this.eh[0] = this.eh[0] / this.gy * this.gy;
                     }
                  }
               }
            }

            if (!this.S()) {
               this.eE[9] = false;
            }
         }

         if (this.ek[0] < 0) {
            if (this.dI[0] != -(this.eh[0] / this.gy)) {
               Sound.getInstance().play(10);
            }

            this.gp[6] = false;
         } else if (this.ek[0] > 0) {
            if (this.dI[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               Sound.getInstance().play(10);
            }

            this.gp[6] = false;
         } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[6]) {
            Sound.getInstance().play(10);
            this.gp[6] = true;
         }

         if (this.dI[0] != -(this.eh[0] / this.gy)) {
            this.dI[0] = -(this.eh[0] / this.gy);
         }

         if (this.dI[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
            this.dI[1] = (this.gy * 100 + this.eh[0]) / this.gy;
         }

         if (-this.eh[0] % this.gy >= this.gy / 2) {
            if (this.dI[0] + 1 - this.gC[0] != this.dI[2]) {
               this.dI[2] = this.dI[0] + 1 - this.gC[0];
               this.eH[0] = -ck[cm[this.dI[2]]][0] + this.getWidth() / 2 - 80;
               this.eH[1] = -ck[cm[this.dI[2]]][1] + 320 + 80;
               this.dJ[1] = this.dJ[0] - this.eH[0];
               this.dK[1] = this.dK[0] - this.eH[1];
            }
         } else if (this.dI[0] - this.gC[0] != this.dI[2]) {
            this.dI[2] = this.dI[0] - this.gC[0];
            this.eH[0] = -ck[cm[this.dI[2]]][0] + this.getWidth() / 2 - 80;
            this.eH[1] = -ck[cm[this.dI[2]]][1] + 320 + 80;
            this.dJ[1] = this.dJ[0] - this.eH[0];
            this.dK[1] = this.dK[0] - this.eH[1];
         }

         if (this.dJ[1] > 0) {
            var3 = this.dJ;
            var3[0] -= this.dJ[1] / 6;
            var3 = this.dK;
            var3[0] -= this.dK[1] / 6;
            var3 = this.dJ;
            var3[1] -= this.dJ[1] / 6;
            var3 = this.dK;
            var3[1] -= this.dK[1] / 6;
         } else {
            var3 = this.dJ;
            var3[0] -= this.dJ[1] / 6;
            var3 = this.dK;
            var3[0] -= this.dK[1] / 6;
            var3 = this.dJ;
            var3[1] -= this.dJ[1] / 6;
            var3 = this.dK;
            var3[1] -= this.dK[1] / 6;
         }

         int var10002;
         int var4;
         if (!this.eE[0] && !this.eE[1] && !this.eE[2] && !this.eE[3] && !this.eE[13] && this.dY == 0 && !this.eE[9] && !this.eb) {
            if (this.fx[0] >= 1) {
               var3 = this.fx;
               var10002 = var3[0]++;
               if (this.aZ == 0) {
                  if (this.aM >= this.bG[this.dI[2]] + X[this.eQ]) {
                     if (this.fx[0] > this.getLength(dv) - 2) {
                        this.gN = true;
                     }

                     if (this.fx[0] > this.getLength(dv) - 1) {
                        this.fx[0] = 0;
                        this.dH = this.dI[2];
                        this.eE[2] = true;
                        this.eh[2] = 0;
                        this.eh[3] = 960;
                        Sound.getInstance().play(7);
                        this.gA[0] = 0;
                        this.ct = 0;
                        this.aM -= this.bG[this.dI[2]] + X[this.eQ];
                     }
                  } else if (this.fx[0] > this.getLength(dv) - 1) {
                     this.fx[0] = 0;
                  }
               } else if (this.aM >= this.bG[this.dI[2]] + X[this.eQ]) {
                  if (this.fx[0] > this.getLength(dv) - 2) {
                     this.gN = true;
                  }

                  if (this.fx[0] > this.getLength(dv) - 1) {
                     this.fx[0] = 0;
                     this.dH = this.dI[2];
                     this.eE[2] = true;
                     this.eh[2] = 0;
                     this.eh[3] = 960;
                     Sound.getInstance().play(7);
                     this.gA[0] = 0;
                     this.ct = 0;
                     this.aM -= this.bG[this.dI[2]] + X[this.eQ];
                  }
               } else {
                  var2 = 0;

                  for(var4 = 0; var4 < 10; ++var4) {
                     var2 += cB[10] * this.bO[var4][10] / 100;
                  }

                  if (this.br[this.eQ][this.dI[2]] >= 1) {
                     int var5 = ad[10];
                     int var6 = this.bx[10];
                     int var7 = this.bG[this.dI[2]];
                     int var8 = X[this.eQ];
                     if (this.br[this.eQ][this.dI[2]] + 1 > 8) {
                        var4 = 8;
                     } else {
                        var4 = this.br[this.eQ][this.dI[2]] + 1;
                     }

                     int var9;
                     if (this.br[this.eQ][this.dI[2]] + 1 > 8) {
                        var9 = 8;
                     } else {
                        var9 = this.br[this.eQ][this.dI[2]] + 1;
                     }

                     if (var5 + var6 * 10 + var2 >= ((var4 + 6) * (var8 + var7) * 10 / (var9 * 6) + 5) / 10) {
                        if (this.fx[0] > this.getLength(dv) - 1) {
                           this.fx[0] = 0;
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 4;
                           return var1;
                        }
                     } else if (this.fx[0] > this.getLength(dv) - 1) {
                        this.fx[0] = 0;
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 5;
                        return var1;
                     }
                  } else if (var2 + ad[10] + this.bx[10] * 10 >= this.bG[this.dI[2]] + X[this.eQ]) {
                     if (this.fx[0] > this.getLength(dv) - 1) {
                        this.fx[0] = 0;
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 4;
                        return var1;
                     }
                  } else if (this.fx[0] > this.getLength(dv) - 1) {
                     this.fx[0] = 0;
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 5;
                     return var1;
                  }
               }
            } else if (this.fx[5] >= 1) {
               var3 = this.fx;
               var10002 = var3[5]++;
               if (this.fx[5] > this.getLength(dv) - 1) {
                  this.fx[5] = 0;
                  if (this.aZ == 0) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 7;
                     return var1;
                  }

                  this.eE[1] = true;
                  this.gA[0] = 0;
                  this.ct = 0;
               }
            } else if (this.fx[13] >= 1) {
               var3 = this.fx;
               var10002 = var3[13]++;
               if (this.fx[13] > this.getLength(dv) - 1) {
                  this.fx[13] = 0;
                  if (this.be >= 1) {
                     this.eE[13] = true;
                  }

                  this.gA[0] = 0;
                  this.ct = 0;
               }
            } else if (this.fx[14] >= 1) {
               var3 = this.fx;
               var10002 = var3[14]++;
               if (this.fx[14] > this.getLength(dv) - 1) {
                  this.fx[14] = 0;
                  this.gA[0] = 0;
                  this.ct = 0;
                  if (this.bB[8] == 0) {
                     this.screenTransition();
                     this.bB[8] = 1;
                     this.gU = true;

                     for(var2 = 0; var2 < this.getLength(this.gV); ++var2) {
                        this.gV[var2] = 0;
                     }

                     Sound.getInstance().setVolume(50);
                     return var1;
                  } else {
                     if (this.aL >= 900000) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 10000;
                     } else {
                        this.screenTransition();
                        this.menuType = 0;
                        this.j = true;
                     }

                     return var1;
                  }
               }
            } else if (this.fx[15] >= 1) {
               var3 = this.fx;
               var10002 = var3[15]++;
               if (this.fx[15] > this.getLength(dv) - 1) {
                  this.fx[15] = 0;
                  if (this.be >= 1) {
                     this.eE[13] = true;
                  }

                  this.gA[0] = 0;
                  this.ct = 0;
               }
            } else if (this.fx[16] >= 1) {
               var3 = this.fx;
               var10002 = var3[16]++;
               if (this.fx[16] > this.getLength(dv) - 1) {
                  var4 = 0;

                  for(var2 = 0; var2 < 10; ++var2) {
                     var4 += cB[10] * this.bO[var2][10] / 100;
                  }

                  if (this.aM >= var4 + ad[10] + this.bx[10] * 10) {
                     this.fx[16] = 0;
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 6;
                  } else {
                     this.fx[16] = 0;
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 3;
                  }

                  return var1;
               }
            } else if (this.eK[0] >= 1) {
               var3 = this.eK;
               var10002 = var3[0]++;
               if (this.eK[0] > this.getLength(dv) - 1) {
                  this.eK[0] = 0;
                  if (!this.eM[0]) {
                     if (this.bA[0] >= 1) {
                        this.eM[0] = true;
                     }
                  } else {
                     this.eM[0] = false;
                  }
               }
            } else if (this.eK[1] >= 1) {
               var3 = this.eK;
               var10002 = var3[1]++;
               if (this.eK[1] > this.getLength(dv) - 1) {
                  this.eK[1] = 0;
                  if (this.bb >= 1) {
                     if (!this.eM[1]) {
                        if (this.bA[1] >= 1) {
                           this.eM[1] = true;
                        }
                     } else {
                        this.eM[1] = false;
                     }
                  }
               }
            } else if (this.eK[2] >= 1) {
               var3 = this.eK;
               var10002 = var3[2]++;
               if (this.eK[2] > this.getLength(dv) - 1) {
                  this.eK[2] = 0;
                  if (!this.eM[2]) {
                     if (this.bA[2] >= 1) {
                        this.eM[2] = true;
                     }
                  } else {
                     this.eM[2] = false;
                  }
               }
            } else if (this.eK[3] >= 1) {
               var3 = this.eK;
               var10002 = var3[3]++;
               if (this.eK[3] > this.getLength(dv) - 1) {
                  this.eK[3] = 0;
                  if (!this.eM[3]) {
                     if (this.bA[3] >= 1) {
                        this.eM[3] = true;
                     }
                  } else {
                     this.eM[3] = false;
                  }
               }
            } else if (this.eK[4] >= 1) {
               var3 = this.eK;
               var10002 = var3[4]++;
               if (this.eK[4] > this.getLength(dv) - 1) {
                  this.eK[4] = 0;
                  if (!this.eM[4]) {
                     if (this.bA[4] >= 1) {
                        this.eM[4] = true;
                     }
                  } else {
                     this.eM[4] = false;
                  }
               }
            } else if (this.eK[5] >= 1) {
               var3 = this.eK;
               var10002 = var3[5]++;
               if (this.eK[5] > this.getLength(dv) - 1) {
                  this.eK[5] = 0;
                  if (!this.eM[5]) {
                     if (this.bA[5] >= 1) {
                        this.eM[5] = true;
                     }
                  } else {
                     this.eM[5] = false;
                  }
               }
            } else if (this.eK[6] >= 1) {
               var3 = this.eK;
               var10002 = var3[6]++;
               if (this.eK[6] > this.getLength(dv) - 1) {
                  this.eK[6] = 0;
                  this.dV = false;
                  Sound.getInstance().setVolume(100);
               }
            } else {
               if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
                  if (!this.gp[0]) {
                     Sound.getInstance().play(10);
                     this.gp[0] = true;
                  }
               } else {
                  this.gp[0] = false;
               }

               if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
                  if (!this.gp[5]) {
                     Sound.getInstance().play(10);
                     this.gp[5] = true;
                  }
               } else {
                  this.gp[5] = false;
               }

               if (this.be >= 1) {
                  if (this.R() && this.b(this.eJ[0][0], this.eJ[0][1], this.eJ[0][2], this.eJ[0][3])) {
                     ++this.dX;
                     this.dW = 0;
                  } else if (this.R() && this.b(this.eJ[1][0], this.eJ[1][1], this.eJ[1][2], this.eJ[1][3])) {
                     ++this.dX;
                     this.dW = 1;
                  } else if (this.R() && this.b(this.eJ[2][0], this.eJ[2][1], this.eJ[2][2], this.eJ[2][3])) {
                     ++this.dX;
                     this.dW = 2;
                  } else if (this.R() && this.b(this.eJ[3][0], this.eJ[3][1], this.eJ[3][2], this.eJ[3][3])) {
                     ++this.dX;
                     this.dW = 3;
                  } else if (this.R() && this.b(this.eJ[4][0], this.eJ[4][1], this.eJ[4][2], this.eJ[4][3])) {
                     ++this.dX;
                     this.dW = 4;
                  } else if (this.R() && this.b(this.eJ[5][0], this.eJ[5][1], this.eJ[5][2], this.eJ[5][3])) {
                     ++this.dX;
                     this.dW = 5;
                  } else {
                     this.dX = 0;
                  }
               }

               if (this.dX >= 1) {
                  this.ct = 0;
                  this.dV = true;

                  for(var2 = 0; var2 < this.getLength(this.ag); ++var2) {
                     if (this.ag[var2].isLoaded()) {
                        this.ag[var2].reset();
                     }
                  }

                  this.ag[0].a(this.dc[this.dW], "FONT_SYSTEM_BOLD", 30, 1);

                  for(var2 = 0; var2 < 3; ++var2) {
                     this.ag[var2 + 1].a(this.dd[this.dW][var2], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  for(var2 = 0; var2 < this.getLength(this.cE[1]); ++var2) {
                     this.ag[var2 + 10].a(this.cE[1][var2], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  for(var2 = 0; var2 < this.getLength(this.cE[15]); ++var2) {
                     this.ag[var2 + 20].a(this.cE[15][var2], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.gA[0] = 5;
               }

               if (this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3]) && !this.dV) {
                  if (this.eh[0] % this.gy == 0 && this.ek[0] == 0) {
                     if (this.aZ == 0) {
                        if (this.aM < this.bG[this.dI[2]] + X[this.eQ]) {
                           Sound.getInstance().play(15);
                        } else {
                           Sound.getInstance().play(11);
                        }
                     } else {
                        Sound.getInstance().play(11);
                     }

                     var3 = this.fx;
                     var10002 = var3[0]++;
                     this.gA[0] = 0;
                     this.ct = 0;
                  }
               } else if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3]) && !this.dV) {
                  Sound.getInstance().play(11);
                  var3 = this.fx;
                  var10002 = var3[5]++;
                  this.gA[0] = 0;
                  this.ct = 0;
               } else if (this.S() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3]) && !this.dV) {
                  if (this.be >= 1) {
                     Sound.getInstance().play(11);
                     var3 = this.fx;
                     var10002 = var3[13]++;
                     this.gA[0] = 0;
                     this.ct = 0;
                     this.gR = 0;
                  }
               } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && !this.dV) {
                  if (this.bf >= 1) {
                     Sound.getInstance().play(11);
                     var3 = this.fx;
                     var10002 = var3[14]++;
                     this.gA[0] = 0;
                     this.ct = 0;
                  }
               } else if (this.S() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3]) && !this.dV) {
                  if (this.be >= 1) {
                     Sound.getInstance().play(11);
                     var3 = this.fx;
                     var10002 = var3[15]++;
                     this.gA[0] = 0;
                     this.ct = 0;
                     this.gR = 1;
                  }
               } else if (this.S() && this.b(this.fw[16][0], this.fw[16][1], this.fw[16][2], this.fw[16][3]) && !this.dV) {
                  if (this.aZ != 0) {
                     Sound.getInstance().play(11);
                     var3 = this.fx;
                     var10002 = var3[16]++;
                  }
               } else if (this.S() && this.b(this.eJ[0][0], this.eJ[0][1], this.eJ[0][2], this.eJ[0][3])) {
                  if (this.be >= 1) {
                     if (this.bA[0] >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[0]++;
                  }
               } else if (this.S() && this.b(this.eJ[1][0], this.eJ[1][1], this.eJ[1][2], this.eJ[1][3])) {
                  if (this.be >= 1) {
                     if (this.bA[1] >= 1 && this.bb >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[1]++;
                  }
               } else if (this.S() && this.b(this.eJ[2][0], this.eJ[2][1], this.eJ[2][2], this.eJ[2][3])) {
                  if (this.be >= 1) {
                     if (this.bA[2] >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[2]++;
                  }
               } else if (this.S() && this.b(this.eJ[3][0], this.eJ[3][1], this.eJ[3][2], this.eJ[3][3])) {
                  if (this.be >= 1) {
                     if (this.bA[3] >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[3]++;
                  }
               } else if (this.S() && this.b(this.eJ[4][0], this.eJ[4][1], this.eJ[4][2], this.eJ[4][3])) {
                  if (this.be >= 1) {
                     if (this.bA[4] >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[4]++;
                  }
               } else if (this.S() && this.b(this.eJ[5][0], this.eJ[5][1], this.eJ[5][2], this.eJ[5][3])) {
                  if (this.be >= 1) {
                     if (this.bA[5] >= 1) {
                        Sound.getInstance().play(11);
                     } else {
                        Sound.getInstance().play(15);
                     }

                     var3 = this.eK;
                     var10002 = var3[5]++;
                  }
               } else if (this.T()) {
                  if (this.aZ == 0) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 7;
                     return var1;
                  }

                  this.eE[1] = true;
                  this.gA[0] = 0;
                  this.ct = 0;
               }

               if (this.R() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3]) && this.be >= 1) {
                  if (!this.gp[13]) {
                     this.gp[13] = true;
                     Sound.getInstance().play(10);
                  }
               } else {
                  this.gp[13] = false;
               }

               if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                  if (!this.gp[14]) {
                     this.gp[14] = true;
                     Sound.getInstance().play(10);
                  }
               } else {
                  this.gp[14] = false;
               }
            }
         }

         if (this.be >= 1 && (this.dV || this.gA[0] >= 1)) {
            var2 = 0;

            while(true) {
               if (var2 >= 6) {
                  if (!this.R()) {
                     this.dV = false;
                     this.dX = 0;
                  }
                  break;
               }

               if (this.R() && this.b(this.eJ[var2][0], this.eJ[var2][1], this.eJ[var2][2], this.eJ[var2][3]) && this.dW != var2) {
                  this.dW = var2;

                  for(var4 = 0; var4 < this.getLength(this.ag); ++var4) {
                     if (this.ag[var4].isLoaded()) {
                        this.ag[var4].reset();
                     }
                  }

                  this.ag[0].a(this.dc[this.dW], "FONT_SYSTEM_BOLD", 30, 1);

                  for(var4 = 0; var4 < 3; ++var4) {
                     this.ag[var4 + 1].a(this.dd[this.dW][var4], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  for(var4 = 0; var4 < this.getLength(this.cE[1]); ++var4) {
                     this.ag[var4 + 10].a(this.cE[1][var4], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  for(var4 = 0; var4 < this.getLength(this.cE[15]); ++var4) {
                     this.ag[var4 + 20].a(this.cE[15][var4], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }

               ++var2;
            }
         }

         if (this.eE[0]) {
            var3 = this.fQ;
            var10002 = var3[2]++;
            this.gm[0] = this.gm[0] * 2 + 1;
            if (this.gm[0] >= 297) {
               this.gm[0] = 297;
               this.gm[1] /= 2;
               this.gM = 0;
            }

            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fQ[2] = this.getLength(fM) - 1;
               this.fP = this.getWidth();
               if (this.gm[1] <= 0) {
                  this.eE[0] = false;
                  this.fQ[2] = 0;
                  this.gQ = 0;
               }
            } else {
               this.fP = fM[this.fQ[2]];
            }
         } else if (this.eE[1]) {
            var3 = this.fQ;
            var10002 = var3[2]++;
            this.gm[1] = this.gm[1] * 2 + 1;
            if (this.gm[1] >= 297) {
               this.gm[1] = 297;
               this.gm[0] /= 2;
            }

            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fQ[2] = this.getLength(fM) - 1;
               this.fP = 0;
               if (this.gm[0] <= 0) {
                  this.fQ[2] = 0;
                  this.screenTransition();
                  this.screen = 5;
                  this.fF = -1;
                  this.eE[1] = false;
                  return var1;
               }
            } else {
               this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
            }
         } else if (this.eE[2]) {
            this.eh[2] = this.eh[2] * 2 + 1;
            this.ei[0] = this.ei[0] * 2 + 1;
            if (this.eh[2] >= this.getWidth()) {
               this.eh[2] = this.getWidth();
               this.ei[0] = this.getHeight();
               this.eh[3] /= 2;
               if (this.eh[3] >= this.getWidth()) {
                  this.eh[3] = this.getWidth();
               }

               var3 = this.fQ;
               var10002 = var3[0]++;
               if (this.fQ[0] >= this.getLength(cu)) {
                  this.fR[0] = 1;
                  this.dY = 1;
                  this.eE[2] = false;
                  this.fQ[0] = 0;
               }
            }
         }

         if (this.dY == 1) {
            var3 = this.fQ;
            var10002 = var3[1]++;
            if (this.fQ[1] >= 10) {
               var3 = this.fQ;
               var10002 = var3[0]++;
               if (this.fQ[0] >= 60) {
                  this.eb = true;
                  this.ed = 1;
               }
            }
         }

         if (this.eE[13]) {
            var3 = this.fQ;
            var10002 = var3[2]++;
            if (this.fQ[2] > this.getLength(fM) - 1) {
               this.fP = 0;
            } else {
               this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
            }

            if (this.fQ[2] > this.getLength(fM)) {
               this.fQ[2] = 0;
               this.screenTransition();
               var4 = 0;

               for(var2 = 0; var2 < this.getLength(this.dI); ++var2) {
                  this.gT[var2] = this.dI[var2];
                  var4 = var2 + 1;
               }

               this.gT[var4] = this.eh[0];

               for(var2 = 0; var2 < this.getLength(this.gC); ++var2) {
                  this.gD[var2] = this.gC[var2];
               }

               this.fP = 0;
               this.screen = 999;
               this.fF = -1;
               this.gQ = 1;
               return var1;
            }
         }

         for(var2 = 0; var2 < this.getLength(this.go); ++var2) {
            for(var4 = 0; var4 < this.getLength(this.go[var2]); ++var4) {
               if (var4 == 0) {
                  if (var2 == this.dI[0]) {
                     this.go[var2][var4] = this.eh[0] % this.gy * 100 / this.gy * 49 / 100 + 243;
                     if (this.eh[0] > 0) {
                        this.go[var2][var4] = 243 - this.eh[0] % this.gy * 100 / this.gy * 49 / 100;
                     }
                  } else if (var2 == this.dI[0] + 1) {
                     this.go[var2][var4] = 194 - this.eh[0] % this.gy * 100 / this.gy * 49 / 100;
                  } else {
                     this.go[var2][var4] = 194;
                  }

                  if (this.go[var2][var4] >= 243) {
                     this.go[var2][var4] = 243;
                  } else if (this.go[var2][var4] <= 194) {
                     this.go[var2][var4] = 194;
                  }
               } else if (var4 == 1) {
                  if (var2 == this.dI[0]) {
                     this.go[var2][var4] = this.eh[0] % this.gy * 100 / this.gy * 17 / 100 + 81;
                     if (this.eh[0] > 0) {
                        this.go[var2][var4] = 81 - this.eh[0] % this.gy * 100 / this.gy * 17 / 100;
                     }
                  } else if (var2 == this.dI[0] + 1) {
                     this.go[var2][var4] = 64 - this.eh[0] % this.gy * 100 / this.gy * 17 / 100;
                  } else {
                     this.go[var2][var4] = 64;
                  }

                  if (this.go[var2][var4] >= 81) {
                     this.go[var2][var4] = 81;
                  } else if (this.go[var2][var4] <= 64) {
                     this.go[var2][var4] = 64;
                  }
               }
            }
         }

         if (!this.eE[2] && this.dY == 0) {
            var3 = this.fQ;
            var10002 = var3[0]--;
            if (this.fQ[0] <= 0) {
               this.fQ[0] = 0;
            }
         }

         this.dZ += 2;
         this.ea += 2;
         var3 = this.fQ;
         var10002 = var3[3]++;
         if (this.dR == this.dI[2] && this.dS == 0) {
            this.dU = 0;
            this.dS = 0;
            this.dM[0] = ck[cm[this.dI[2]]][0] - 28;
            this.dN[0] = ck[cm[this.dI[2]]][1] - 28;
         } else {
            if (this.dS == 0) {
               if (this.dR >= this.dI[2]) {
                  this.dP[0] = cm[this.dR];
                  this.dP[1] = cm[this.dR - 1];
                  this.dQ = 0;
               } else {
                  this.dP[0] = cm[this.dR];
                  this.dP[1] = cm[this.dR + 1];
                  this.dQ = 1;
               }

               float var10 = aMath.atan2((float)ck[this.dP[1]][1] - (float)ck[this.dP[0]][1], (float)ck[this.dP[1]][0] - (float)ck[this.dP[0]][0]);
               if (!(var10 >= 270.0F) && (!(var10 >= 0.0F) || !(var10 <= 90.0F))) {
                  this.dT = 1;
               } else {
                  this.dT = 0;
               }

               for(var2 = 0; var2 < 200; ++var2) {
                  if (var2 % 1 == 0) {
                     ++this.dU;
                  }

                  if (this.dU >= 400) {
                     this.dU = 400;
                  }

                  if (this.d((int)((float)ck[this.dP[0]][0] + (float)(this.dU * var2 / 2) * aMath.cos(var10)), (int)((float)ck[this.dP[0]][1] + (float)(this.dU * var2 / 2) * aMath.sin(var10)), this.dU / 2 + 1, ck[this.dP[1]][0], ck[this.dP[1]][1], this.dU / 2 + 1)) {
                     this.dM[var2] = (int)((float)ck[this.dP[0]][0] + (float)(this.dU * var2 / 2) * aMath.cos(var10) - 28.0F);
                     this.dN[var2] = (int)((float)ck[this.dP[0]][1] + (float)(this.dU * var2 / 2) * aMath.sin(var10) - 28.0F);
                     this.dO[var2] = this.dU;
                     break;
                  }

                  this.dM[var2] = (int)((float)ck[this.dP[0]][0] + (float)(this.dU * var2 / 2) * aMath.cos(var10) - 28.0F);
                  this.dN[var2] = (int)((float)ck[this.dP[0]][1] + (float)(this.dU * var2 / 2) * aMath.sin(var10) - 28.0F);
                  this.dO[var2] = this.dU;
               }
            }

            if (this.d(this.dM[this.dS] + 28, this.dN[this.dS] + 28, this.dO[this.dS] / 2 + 1, ck[this.dP[1]][0], ck[this.dP[1]][1], this.dU / 2 + 1)) {
               if (this.dQ == 0) {
                  --this.dR;
               } else {
                  ++this.dR;
               }

               this.dS = 0;
               this.dM[0] = ck[cm[this.dR]][0] - 28;
               this.dN[0] = ck[cm[this.dR]][1] - 28;
            } else {
               ++this.dS;
            }
         }

         if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && !this.eE[9]) {
            if ((this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               this.eE[10] = true;
            } else if (this.aZ == 0) {
               if (!this.eb) {
                  this.eE[10] = false;
               }
            } else if (this.fx[5] == 0 && !this.eE[1]) {
               this.eE[10] = false;
            }
         } else if (this.aZ == 0) {
            if (!this.eb) {
               this.eE[10] = false;
            }
         } else if (this.fx[5] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }

         --this.ct;
         if (this.ct <= 0) {
            this.ct = 0;
         }

         var3 = this.gA;
         var10002 = var3[0]--;
         if (this.gA[0] <= 0) {
            this.gA[0] = 0;
         }

         var1 = true;
      }

      return var1;
   }

   void x() {
      byte var1 = 0;
      byte var2 = 0;
      byte var3 = 0;
      int var4 = 0;
      int var5 = 0;
      int var7;
      if (this.gu) {
         int[] var6 = this.gv;
         int var10002 = var6[0]++;
         var6 = this.gv;
         var10002 = var6[2]++;
         byte var9;
         byte var10;
         if (this.gv[0] == 1) {
            for(var7 = 0; var7 < this.getLength(this.fz); ++var7) {
               this.fz[var7] = 0;
            }

            if (this.gw == 9999) {
               Sound.getInstance().play(29);
            } else {
               Sound.getInstance().play(42);
            }

            for(var7 = 0; var7 < this.getLength(this.ah); ++var7) {
               if (this.ah[var7].isLoaded()) {
                  this.ah[var7].reset();
               }
            }

            if (this.gw == 0) {
               label1231:
               switch (this.getScene()) {
                  case 98:
                  default:
                     break;
                  case 99:
                     if (this.dE == 5) {
                        var7 = 0;

                        while(true) {
                           if (var7 >= this.getLength(this.dg[0]) || aString.equals(this.dg[0][var7], "＠")) {
                              break label1231;
                           }

                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.dg[0][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }

                           ++var7;
                        }
                     } else if (this.dE == 6) {
                        var7 = 0;

                        while(true) {
                           if (var7 >= this.getLength(this.dg[1]) || aString.equals(this.dg[1][var7], "＠")) {
                              break label1231;
                           }

                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.dg[1][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }

                           ++var7;
                        }
                     } else if (this.dE == 7 && this.bc[2] == 0) {
                        var7 = 0;

                        while(true) {
                           if (var7 >= this.getLength(this.cX)) {
                              break label1231;
                           }

                           this.ah[var7].a(this.cX[var7], "FONT_SYSTEM_BOLD", 30, 1);
                           ++var7;
                        }
                     } else {
                        if (this.gx == 999) {
                           this.ah[0].a(this.do1[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                           this.ah[1].a(this.do1[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                        } else if (this.gx == 1000) {
                           this.ah[0].a(String.format("%s", this.do1[1][0]), "FONT_SYSTEM_BOLD", 30, 1);
                           this.ah[1].a(String.format("%s%s%s", this.do1[1][1], this.cT[this.bM[32]][0][0], this.do1[1][2]), "FONT_SYSTEM_BOLD", 30, 1);
                           this.ah[2].a(String.format("%s", this.do1[1][3]), "FONT_SYSTEM_BOLD", 30, 1);
                        }
                        break;
                     }
                  case 100:
                     if (this.screen == 0) {
                        if (!this.ah[0].isLoaded()) {
                           this.ah[0].a(this.db[2], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     } else if (this.screen != 7) {
                        if (this.screen == 3 && !this.ah[0].isLoaded()) {
                           this.ah[0].a(this.cD[8], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     } else if (this.gx == 0) {
                        for(var7 = 0; var7 < this.getLength(this.de[1]) && !aString.equals(this.de[1][var7], "＠"); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.de[1][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }

                        this.bz[2] = 1;
                     } else if (this.gx == 1 && this.bd == 0) {
                        for(var7 = 0; var7 < this.getLength(this.de[6]) && !aString.equals(this.de[6][var7], "＠"); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.de[6][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }

                        this.bd = 1;
                     }
                     break;
                  case 300:
                     if (this.gx == 1) {
                        if (this.bz[1] == 0) {
                           for(var7 = 0; var7 < this.getLength(this.de[0]) && !aString.equals(this.de[0][var7], "＠"); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.de[0][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }

                           this.bz[1] = 1;
                        }
                     } else if (this.gx == 2) {
                        if (this.bz[3] == 0) {
                           for(var7 = 0; var7 < this.getLength(this.de[2]) && !aString.equals(this.de[2][var7], "＠"); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.de[2][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }

                           this.bz[3] = 1;
                        }
                     } else if (this.gx == 3) {
                        if (this.bz[4] == 0) {
                           for(var7 = 0; var7 < this.getLength(this.de[3]) && !aString.equals(this.de[3][var7], "＠"); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.de[3][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }

                           this.bz[4] = 1;
                        }
                     } else if (this.gx == 4) {
                        if (this.be == 0) {
                           for(var7 = 0; var7 < this.getLength(this.de[4]) && !aString.equals(this.de[4][var7], "＠"); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.de[4][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }

                           this.be = 1;
                        }
                     } else if (this.gx == 5) {
                        if (this.bf == 0) {
                           for(var7 = 0; var7 < this.getLength(this.de[5]) && !aString.equals(this.de[5][var7], "＠"); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.de[5][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }

                           this.bf = 1;
                        }
                     } else if (this.gx != 6) {
                        if (this.gx == 10) {
                           this.ah[0].a(this.cT[0][0][0], "FONT_SYSTEM_BOLD", 30, 1);
                        } else if (this.gx == 11) {
                           for(var7 = 0; var7 < this.getLength(this.de[7]); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 if (aString.equals(this.de[7][var7], "＠")) {
                                    break;
                                 }

                                 this.ah[var7].a(this.de[7][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }
                        } else if (this.gx == 999) {
                           this.ah[0].a(this.do1[0][0], "FONT_SYSTEM_BOLD", 30, 1);
                           this.ah[1].a(this.do1[0][1], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     } else if (this.bd == 0) {
                        for(var7 = 0; var7 < this.getLength(this.de[6]) && !aString.equals(this.de[6][var7], "＠"); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.de[6][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }

                        this.bd = 1;
                     }
               }
            } else if (this.gw != 1 && this.gw != 99) {
               if (this.gw == 2) {
                  this.fA[0][0] = this.excessWidth / 2 + 251;
                  this.fA[0][1] = 374;
                  this.fA[0][2] = 168;
                  this.fA[0][3] = 88;
                  this.fA[1][0] = this.excessWidth / 2 + 541;
                  this.fA[1][1] = 374;
                  this.fA[1][2] = 168;
                  this.fA[1][3] = 88;

                  for(var7 = 0; var7 < this.getLength(this.cE[3]); ++var7) {
                     if (!this.ah[var7].isLoaded()) {
                        this.ah[var7].a(this.cE[3][var7], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }
               } else if (this.gw != 3 && this.gw != 4) {
                  if (this.gw != 5 && this.gw != 6 && this.gw != 8 && this.gw != 9 && this.gw != 10) {
                     if (this.gw == 7) {
                        this.fA[0][0] = this.excessWidth / 2 + 251;
                        this.fA[0][1] = 374;
                        this.fA[0][2] = 168;
                        this.fA[0][3] = 88;
                        this.fA[1][0] = this.excessWidth / 2 + 541;
                        this.fA[1][1] = 374;
                        this.fA[1][2] = 168;
                        this.fA[1][3] = 88;

                        for(var7 = 0; var7 < this.getLength(this.cE[7]); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.cE[8][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }
                     } else if (this.gw != 9999) {
                        if (this.gw == 10000) {
                           for(var7 = 0; var7 < this.getLength(this.cE[14]); ++var7) {
                              if (!this.ah[var7].isLoaded()) {
                                 this.ah[var7].a(this.cE[14][var7], "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           }
                        }
                     } else {
                        this.fA[0][0] = this.excessWidth / 2 + 615;
                        this.fA[0][1] = 453;
                        this.fA[0][2] = 168;
                        this.fA[0][3] = 88;
                        this.ah[0].a(String.format("%s%d%s", this.dq[5], this.bl + 1, this.dq[6]), "FONT_SYSTEM_BOLD", 30, 1);
                        if (this.bl == 29 && this.bn != 0) {
                           var9 = 1;
                        } else {
                           var9 = 0;
                        }

                        if (this.ho[this.bl + var9][0] != 0 && this.ho[this.bl + var9][0] != 6) {
                           if (this.ho[this.bl + var9][0] == 1) {
                              this.ah[1].a(String.format("%s%s%s%d%s%s", this.dq[7], this.dq[14], this.dq[9], this.ho[var9 + this.bl][1], this.dq[8], this.dq[10]), "FONT_SYSTEM_BOLD", 30, 1);
                           } else if (this.ho[this.bl + var9][0] >= 2 && this.ho[this.bl + var9][0] <= 6) {
                              if (this.ho[this.bl + var9][0] == 2) {
                                 var10 = 0;
                              } else if (this.ho[this.bl + var9][0] == 3) {
                                 var10 = 3;
                              } else if (this.ho[this.bl + var9][0] == 4) {
                                 var10 = 4;
                              } else if (this.ho[this.bl + var9][0] == 5) {
                                 var10 = 1;
                              } else {
                                 var10 = 0;
                              }

                              if (this.p == 0) {
                                 this.ah[1].a(String.format("%s%s%s%d%s%s", this.dq[7], this.dc[var10], this.dq[9], this.ho[var9 + this.bl][1], this.dq[8], this.dq[10]), "FONT_SYSTEM_BOLD", 30, 1);
                              } else if (this.p == 1) {
                                 this.ah[1].a(String.format("%s%s%s%d%s%s", this.dq[7], this.dc[var10], this.dq[19], this.ho[var9 + this.bl][1], this.dq[8], this.dq[10]), "FONT_SYSTEM_BOLD", 30, 1);
                              }
                           } else if (this.ho[var9 + this.bl][0] == 7 && this.bn == 0) {
                              this.ah[1].a(String.format("%s%s%s%s%s", this.dq[11], this.dq[7], this.cT[17][0][0], this.dq[8], this.dq[15]), "FONT_SYSTEM_BOLD", 30, 1);
                              this.ah[2].a(String.format("%s", this.dq[12]), "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        } else {
                           this.ah[1].a(String.format("%s%s%s%d%s%s", this.dq[7], this.dq[13], this.dq[9], this.ho[var9 + this.bl][1], this.dq[8], this.dq[10]), "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }
                  } else if (this.gw == 5) {
                     for(var7 = 0; var7 < this.getLength(this.cE[6]); ++var7) {
                        if (!this.ah[var7].isLoaded()) {
                           this.ah[var7].a(this.cE[6][var7], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }
                  } else if (this.gw != 6) {
                     if (this.gw == 8) {
                        for(var7 = 0; var7 < this.getLength(this.cE[9]); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.cE[9][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }
                     } else if (this.gw == 9) {
                        for(var7 = 0; var7 < this.getLength(this.cE[10]); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.cE[10][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }
                     } else if (this.gw == 10) {
                        for(var7 = 0; var7 < this.getLength(this.cE[11]); ++var7) {
                           if (!this.ah[var7].isLoaded()) {
                              this.ah[var7].a(this.cE[11][var7], "FONT_SYSTEM_BOLD", 30, 1);
                           }
                        }
                     }
                  } else {
                     for(var7 = 0; var7 < this.getLength(this.cE[7]); ++var7) {
                        if (!this.ah[var7].isLoaded()) {
                           this.ah[var7].a(this.cE[7][var7], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }

                     var7 = 0;

                     for(var4 = 0; var4 < 10; ++var4) {
                        var7 += cB[10] * this.bO[var4][10] / 100;
                     }

                     var4 = ad[10] + this.bx[10] * 10 + var7 - this.aM;
                     if (this.p == 0) {
                        this.ah[this.getLength(this.cE[7]) + 1].a(String.format("%s%s%d%s%d%s%d%s%s", this.cD[9], this.cD[10], this.aM, this.cD[11], var7 + ad[10] + this.bx[10] * 10, this.cD[12], var4, this.cD[13], this.cD[14]), "FONT_SYSTEM_BOLD", 30, 1);
                     } else if (this.p == 1) {
                        this.ah[this.getLength(this.cE[7]) + 1].a(String.format("%s%d%s", this.cD[12], var4, this.cD[13]), "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }
               } else {
                  this.fA[0][0] = this.excessWidth / 2 + 251;
                  this.fA[0][1] = 374;
                  this.fA[0][2] = 168;
                  this.fA[0][3] = 88;
                  this.fA[1][0] = this.excessWidth / 2 + 541;
                  this.fA[1][1] = 374;
                  this.fA[1][2] = 168;
                  this.fA[1][3] = 88;
                  if (this.gw == 3) {
                     for(var7 = 0; var7 < this.getLength(this.cE[4]); ++var7) {
                        if (!this.ah[var7].isLoaded()) {
                           this.ah[var7].a(this.cE[4][var7], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }

                     var7 = 0;

                     for(var4 = 0; var4 < 10; ++var4) {
                        var7 += cB[10] * this.bO[var4][10] / 100;
                     }

                     var4 = ad[10] + this.bx[10] * 10 + var7 - this.aM;
                     if (this.p == 0) {
                        this.ah[this.getLength(this.cE[4]) + 1].a(String.format("%s%s%d%s%d%s%d%s%s", this.cD[9], this.cD[10], this.aM, this.cD[11], var7 + ad[10] + this.bx[10] * 10, this.cD[12], var4, this.cD[13], this.cD[14]), "FONT_SYSTEM_BOLD", 30, 1);
                     } else if (this.p == 1) {
                        this.ah[this.getLength(this.cE[4]) + 1].a(String.format("%s%d%s", this.cD[12], var4, this.cD[13]), "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  } else if (this.gw == 4) {
                     for(var7 = 0; var7 < this.getLength(this.cE[5]); ++var7) {
                        if (!this.ah[var7].isLoaded()) {
                           this.ah[var7].a(this.cE[5][var7], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }

                     var7 = 0;

                     for(var4 = 0; var4 < 10; ++var4) {
                        var7 += cB[10] * this.bO[var4][10] / 100;
                     }

                     var4 = ad[10] + this.bx[10] * 10 + var7 - this.aM;
                     if (this.p == 0) {
                        this.ah[this.getLength(this.cE[5]) + 1].a(String.format("%s%s%d%s%d%s%d%s%s", this.cD[9], this.cD[10], this.aM, this.cD[11], var7 + ad[10] + this.bx[10] * 10, this.cD[12], var4, this.cD[13], this.cD[14]), "FONT_SYSTEM_BOLD", 30, 1);
                     } else if (this.p == 1) {
                        this.ah[this.getLength(this.cE[5]) + 1].a(String.format("%s%d%s", this.cD[12], var4, this.cD[13]), "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }
               }
            } else {
               this.fA[0][0] = this.excessWidth / 2 + 251;
               this.fA[0][1] = 374;
               this.fA[0][2] = 168;
               this.fA[0][3] = 88;
               this.fA[1][0] = this.excessWidth / 2 + 541;
               this.fA[1][1] = 374;
               this.fA[1][2] = 168;
               this.fA[1][3] = 88;
               if (this.gw == 1) {
                  var10 = 0;
               } else if (this.gw == 99) {
                  var10 = 13;
               } else {
                  var10 = 0;
               }

               for(var4 = 0; var4 < this.getLength(this.cE[var10]); ++var4) {
                  if (!this.ah[var4].isLoaded()) {
                     this.ah[var4].a(this.cE[var10][var4], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            }
         }

         if (this.gv[0] > this.getLength(eO) - 1) {
            this.gv[0] = this.getLength(eO) - 1;
            var6 = this.gv;
            var10002 = var6[1]++;
         }

         if (this.gw == 0) {
            if (this.gv[1] >= 30) {
               this.gv[1] = 30;
               if (this.S()) {
                  switch (this.getScene()) {
                     case 98:
                     case 100:
                     default:
                        break;
                     case 99:
                        if (this.dE == 5) {
                           this.dE = 6;
                        } else if (this.dE == 6) {
                           this.dE = 7;
                        } else if (this.dE == 7 && this.bc[2] == 0) {
                           this.bc[2] = 1;
                        }
                        break;
                     case 300:
                        boolean var8 = this.ha[0];
                  }

                  if (this.gx == 1000) {
                     this.bM[32] = -1;
                  }

                  Sound.getInstance().play(11);

                  for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
                     this.gv[var7] = 0;
                  }

                  for(var7 = 0; var7 < this.getLength(this.ah); ++var7) {
                     if (this.ah[var7].isLoaded()) {
                        this.ah[var7].reset();
                     }
                  }

                  this.gu = false;
               }
            }
         } else if (this.gw != 1 && this.gw != 99) {
            if (this.gw == 2) {
               if (this.gv[1] >= 1) {
                  if (this.fz[0] >= 1) {
                     var6 = this.fz;
                     var10002 = var6[0]++;
                     if (this.fz[0] > this.getLength(dv) - 1) {
                        this.fz[0] = 0;
                        switch (this.getScene()) {
                           case 100:
                              if (this.screen != 0 && this.screen != 5 && this.screen != 9) {
                                 if (this.screen == 7) {
                                    this.aL -= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                                    if (this.bh == 0) {
                                       this.screenTransition();
                                       this.gw = 1;

                                       for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
                                          this.gv[var7] = 0;
                                       }

                                       for(var7 = 0; var7 < this.getLength(this.ah); ++var7) {
                                          if (this.ah[var7].isLoaded()) {
                                             this.ah[var7].reset();
                                          }
                                       }

                                       this.gu = true;
                                       this.gw = 0;
                                       this.bh = 1;
                                       this.bu[this.bK[this.fS[2] - this.gB[1]]] = 1;
                                       this.gx = 0;
                                       this.ac();

                                       for(var7 = 0; var7 < this.getLength(this.gG); ++var7) {
                                          this.gG[var7] = 0;
                                       }

                                       this.gG[this.fS[2]] = 1;
                                       this.fQ[5] = 255;
                                       break;
                                    } else {
                                       this.bu[this.bK[this.fS[2] - this.gB[1]]] = 1;
                                       this.ac();

                                       for(var7 = 0; var7 < this.getLength(this.gG); ++var7) {
                                          this.gG[var7] = 0;
                                       }

                                       this.gG[this.fS[2]] = 1;
                                       this.fQ[5] = 255;
                                    }
                                 } else if (this.screen != 3 && this.screen != 6 && this.screen != 8 && this.screen != 4 && this.screen == 999) {
                                    if (Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]] <= 0) {
                                       this.aL -= 500;
                                       if (this.gP[2] < this.gB[0]) {
                                          var6 = this.bA;
                                          var7 = this.gP[2];
                                          var6[var7] += aa[this.gP[2]] + aa[this.gP[2]] * this.gS[this.gP[2]];
                                       } else {
                                          this.aY += aa[this.gP[2]] + aa[this.gP[2]] * this.gS[this.gP[2]];
                                          if (this.aY > 99999999) {
                                             this.aY = 99999999;
                                          }
                                       }

                                       if (this.gP[2] < this.getLength(this.hD)) {
                                          var6 = this.hD;
                                          var7 = this.gP[2];
                                          var10002 = var6[var7]++;
                                          if (this.hD[this.gP[2]] >= 999999999) {
                                             this.hD[this.gP[2]] = 999999999;
                                          }
                                       }

                                       this.ac();

                                       for(var7 = 0; var7 < this.getLength(this.gG); ++var7) {
                                          this.gG[var7] = 0;
                                       }

                                       this.gG[this.gP[2]] = 1;
                                       this.fQ[5] = 255;
                                    } else if (this.aL >= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]]) {
                                       this.aL -= Z[this.gP[2]] + Z[this.gP[2]] * this.gS[this.gP[2]];
                                       if (this.gP[2] < this.gB[0]) {
                                          var6 = this.bA;
                                          var7 = this.gP[2];
                                          var6[var7] += aa[this.gP[2]] + aa[this.gP[2]] * this.gS[this.gP[2]];
                                       } else {
                                          this.aY += aa[this.gP[2]] + aa[this.gP[2]] * this.gS[this.gP[2]];
                                          if (this.aY > 99999999) {
                                             this.aY = 99999999;
                                          }
                                       }

                                       if (this.gP[2] < this.getLength(this.hD)) {
                                          var6 = this.hD;
                                          var7 = this.gP[2];
                                          var10002 = var6[var7]++;
                                          if (this.hD[this.gP[2]] >= 999999999) {
                                             this.hD[this.gP[2]] = 999999999;
                                          }
                                       }

                                       this.ac();

                                       for(var7 = 0; var7 < this.getLength(this.gG); ++var7) {
                                          this.gG[var7] = 0;
                                       }

                                       this.gG[this.gP[2]] = 1;
                                       this.fQ[5] = 255;
                                    }
                                 }
                              }
                           case 98:
                           case 99:
                           default:
                              this.gu = false;
                        }
                     }
                  } else if (this.fz[1] >= 1) {
                     var6 = this.fz;
                     var10002 = var6[1]++;
                     if (this.fz[1] > this.getLength(dv) - 1) {
                        this.fz[1] = 0;
                        this.gu = false;
                     }
                  } else if (this.fx[14] >= 1) {
                     var6 = this.fx;
                     var10002 = var6[14]++;
                     if (this.fx[14] > this.getLength(dv) - 1) {
                        this.fx[14] = 0;
                        if (this.bB[8] == 0) {
                           this.screenTransition();
                           this.bB[8] = 1;
                           this.gU = true;

                           for(var7 = 0; var7 < this.getLength(this.gV); ++var7) {
                              this.gV[var7] = 0;
                           }

                           Sound.getInstance().setVolume(50);
                        } else if (this.aL >= 900000) {
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 10000;
                        } else {
                           this.screenTransition();
                           this.menuType = 0;
                           this.j = true;
                        }
                     }
                  } else {
                     if (this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                        if (!this.gs[0]) {
                           Sound.getInstance().play(10);
                           this.gs[0] = true;
                        }
                     } else {
                        this.gs[0] = false;
                     }

                     if (this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                        if (!this.gs[1]) {
                           Sound.getInstance().play(10);
                           this.gs[1] = true;
                        }
                     } else {
                        this.gs[1] = false;
                     }

                     if (this.S() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                        Sound.getInstance().play(14);
                        var6 = this.fz;
                        var10002 = var6[0]++;
                     } else if (this.S() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                        Sound.getInstance().play(11);
                        var6 = this.fz;
                        var10002 = var6[1]++;
                     } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                        if (this.bf >= 1) {
                           Sound.getInstance().play(11);
                           var6 = this.fx;
                           var10002 = var6[14]++;
                        }
                     } else if (this.T()) {
                        this.fz[1] = 0;
                        this.gu = false;
                     }
                  }
               }
            } else if (this.gw != 3 && this.gw != 4) {
               if (this.gw != 5 && this.gw != 6 && this.gw != 8 && this.gw != 9 && this.gw != 10) {
                  if (this.gw == 7) {
                     if (this.gv[1] >= 1) {
                        if (this.fz[0] >= 1) {
                           var6 = this.fz;
                           var10002 = var6[0]++;
                           if (this.fz[0] > this.getLength(dv) - 1) {
                              this.fz[0] = 0;
                              this.gu = false;
                              this.eb = true;
                              this.ed = 0;
                              this.fE = 5;
                           }
                        } else if (this.fz[1] >= 1) {
                           var6 = this.fz;
                           var10002 = var6[1]++;
                           if (this.fz[1] > this.getLength(dv) - 1) {
                              this.fz[1] = 0;
                              this.gu = false;
                           }
                        } else {
                           if (this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                              if (!this.gs[0]) {
                                 Sound.getInstance().play(10);
                                 this.gs[0] = true;
                              }
                           } else {
                              this.gs[0] = false;
                           }

                           if (this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                              if (!this.gs[1]) {
                                 Sound.getInstance().play(10);
                                 this.gs[1] = true;
                              }
                           } else {
                              this.gs[1] = false;
                           }

                           if (this.S() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                              Sound.getInstance().play(11);
                              var6 = this.fz;
                              var10002 = var6[0]++;
                           } else if (this.S() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                              Sound.getInstance().play(11);
                              var6 = this.fz;
                              var10002 = var6[1]++;
                           } else if (this.T()) {
                              this.fz[1] = 0;
                              this.gu = false;
                           }
                        }
                     }
                  } else if (this.gw == 9999) {
                     if (this.gv[1] >= 1) {
                        if (this.fz[0] >= 1) {
                           var6 = this.fz;
                           var10002 = var6[0]++;
                           if (this.fz[0] > this.getLength(dv) - 1) {
                              this.fz[0] = 0;
                              this.gu = false;
                              if (this.bl == 29 && this.bn != 0) {
                                 var9 = 1;
                              } else {
                                 var9 = 0;
                              }

                              if (this.ho[this.bl + var9][0] != 0 && this.ho[this.bl + var9][0] != 6) {
                                 if (this.ho[this.bl + var9][0] == 1) {
                                    var7 = this.aL;
                                    this.aL = this.ho[var9 + this.bl][1] + var7;
                                    if (this.aL >= 999999) {
                                       this.aL = 999999;
                                    }
                                 } else if (this.ho[this.bl + var9][0] >= 2 && this.ho[this.bl + var9][0] <= 5) {
                                    if (this.ho[this.bl + var9][0] == 2) {
                                       var10 = var2;
                                    } else if (this.ho[this.bl + var9][0] == 3) {
                                       var10 = 3;
                                    } else if (this.ho[this.bl + var9][0] == 4) {
                                       var10 = 4;
                                    } else {
                                       var10 = var2;
                                       if (this.ho[this.bl + var9][0] == 5) {
                                          var10 = 1;
                                       }
                                    }

                                    var6 = this.bA;
                                    var5 = var6[var10];
                                    var6[var10] = this.ho[var9 + this.bl][1] + var5;
                                    if (this.bA[var10] >= 9999) {
                                       this.bA[var10] = 9999;
                                    }
                                 } else if (this.ho[var9 + this.bl][0] == 7) {
                                    this.bn = 1;
                                    this.by[1] = 1;
                                    this.bC[this.bJ[17][13]] = 0;
                                    this.bE[0] = 1;
                                 }
                              } else {
                                 var7 = this.aY;
                                 this.aY = this.ho[var9 + this.bl][1] + var7;
                                 if (this.aY >= 99999999) {
                                    this.aY = 99999999;
                                 }
                              }

                              ++this.bl;
                           }
                        } else {
                           if (this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                              if (!this.gs[0]) {
                                 Sound.getInstance().play(10);
                                 this.gs[0] = true;
                              }
                           } else {
                              this.gs[0] = false;
                           }

                           if (this.S() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                              Sound.getInstance().play(11);
                              var6 = this.fz;
                              var10002 = var6[0]++;
                           }
                        }
                     }
                  } else if (this.gw == 10000 && this.gv[1] >= 30) {
                     this.gv[1] = 30;
                     if (this.S()) {
                        this.gu = false;
                        if (this.gw == 8) {
                           this.screenTransition();
                           this.gw = 9;
                           this.gu = true;

                           for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
                              this.gv[var7] = 0;
                           }

                           for(var7 = var3; var7 < this.getLength(this.ah); ++var7) {
                              if (this.ah[var7].isLoaded()) {
                                 this.ah[var7].reset();
                              }
                           }
                        }
                     }
                  }
               } else if (this.gv[1] >= 30) {
                  this.gv[1] = 30;
                  if (this.S()) {
                     this.gu = false;
                     if (this.gw == 8) {
                        this.screenTransition();
                        this.gw = 9;
                        this.gu = true;

                        for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
                           this.gv[var7] = 0;
                        }

                        for(var7 = var1; var7 < this.getLength(this.ah); ++var7) {
                           if (this.ah[var7].isLoaded()) {
                              this.ah[var7].reset();
                           }
                        }
                     }
                  }
               }
            } else if (this.gv[1] >= 1) {
               if (this.fz[0] >= 1) {
                  var6 = this.fz;
                  var10002 = var6[0]++;
                  if (this.fz[0] > this.getLength(dv) - 1) {
                     this.fz[0] = 0;
                     switch (this.getScene()) {
                        case 100:
                           if (this.screen == 9) {
                              if (this.aL < 30) {
                                 this.screenTransition();
                                 this.gw = 1;

                                 for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
                                    this.gv[var7] = 0;
                                 }

                                 for(var7 = var5; var7 < this.getLength(this.ah); ++var7) {
                                    if (this.ah[var7].isLoaded()) {
                                       this.ah[var7].reset();
                                    }
                                 }

                                 return;
                              } else {
                                 this.aL -= 30;
                                 var4 = 0;

                                 for(var7 = 0; var7 < 10; ++var7) {
                                    var4 += cB[10] * this.bO[var7][10] / 100;
                                 }

                                 this.aM = var4 + ad[10] + this.bx[10] * 10;
                                 ++this.hG;
                                 if (this.hG >= 999999999) {
                                    this.hG = 999999999;
                                 }

                                 this.ac();
                              }
                           }
                        case 98:
                        case 99:
                        default:
                           this.gu = false;
                     }
                  }
               } else if (this.fz[1] >= 1) {
                  var6 = this.fz;
                  var10002 = var6[1]++;
                  if (this.fz[1] > this.getLength(dv) - 1) {
                     this.fz[1] = 0;
                     this.gu = false;
                  }
               } else if (this.fx[14] >= 1) {
                  var6 = this.fx;
                  var10002 = var6[14]++;
                  if (this.fx[14] > this.getLength(dv) - 1) {
                     this.fx[14] = 0;
                     if (this.bB[8] == 0) {
                        this.screenTransition();
                        this.bB[8] = 1;
                        this.gU = true;

                        for(var7 = 0; var7 < this.getLength(this.gV); ++var7) {
                           this.gV[var7] = 0;
                        }

                        Sound.getInstance().setVolume(50);
                     } else if (this.aL >= 900000) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 10000;
                     } else {
                        this.screenTransition();
                        this.menuType = 0;
                        this.j = true;
                     }
                  }
               } else {
                  if (this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                     if (!this.gs[0]) {
                        Sound.getInstance().play(10);
                        this.gs[0] = true;
                     }
                  } else {
                     this.gs[0] = false;
                  }

                  if (this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                     if (!this.gs[1]) {
                        Sound.getInstance().play(10);
                        this.gs[1] = true;
                     }
                  } else {
                     this.gs[1] = false;
                  }

                  if (this.S() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                     Sound.getInstance().play(11);
                     var6 = this.fz;
                     var10002 = var6[0]++;
                  } else if (this.S() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                     Sound.getInstance().play(11);
                     var6 = this.fz;
                     var10002 = var6[1]++;
                  } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                     if (this.bf >= 1) {
                        Sound.getInstance().play(11);
                        var6 = this.fx;
                        var10002 = var6[14]++;
                     }
                  } else if (this.T()) {
                     this.fz[1] = 0;
                     this.gu = false;
                  }
               }
            }
         } else if (this.gv[1] >= 1) {
            if (this.fz[0] >= 1) {
               var6 = this.fz;
               var10002 = var6[0]++;
               if (this.fz[0] > this.getLength(dv) - 1) {
                  this.fz[0] = 0;
                  if (this.gw == 1) {
                     this.screenTransition();
                     this.gu = false;
                     this.menuType = 0;
                     this.j = true;
                  } else if (this.gw == 99 && this.be >= 1) {
                     this.eE[13] = true;
                     this.gA[0] = 0;
                     this.gR = 1;
                     this.gu = false;
                  }
               }
            } else if (this.fz[1] >= 1) {
               var6 = this.fz;
               var10002 = var6[1]++;
               if (this.fz[1] > this.getLength(dv) - 1) {
                  this.fz[1] = 0;
                  this.gu = false;
               }
            } else if (this.fx[14] >= 1) {
               var6 = this.fx;
               var10002 = var6[14]++;
               if (this.fx[14] > this.getLength(dv) - 1) {
                  this.fx[14] = 0;
                  if (this.bB[8] == 0) {
                     this.screenTransition();
                     this.bB[8] = 1;
                     this.gU = true;

                     for(var7 = 0; var7 < this.getLength(this.gV); ++var7) {
                        this.gV[var7] = 0;
                     }

                     Sound.getInstance().setVolume(50);
                  } else if (this.aL >= 900000) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 10000;
                  } else {
                     this.screenTransition();
                     this.menuType = 0;
                     this.j = true;
                  }
               }
            } else if (this.fx[15] >= 1) {
               var6 = this.fx;
               var10002 = var6[15]++;
               if (this.fx[15] > this.getLength(dv) - 1) {
                  this.fx[15] = 0;
                  if (this.be >= 1) {
                     this.eE[13] = true;
                     this.gA[0] = 0;
                     this.gR = 1;
                  }

                  this.gu = false;
               }
            } else {
               if (this.R() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                  if (!this.gs[0]) {
                     Sound.getInstance().play(10);
                     this.gs[0] = true;
                  }
               } else {
                  this.gs[0] = false;
               }

               if (this.R() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                  if (!this.gs[1]) {
                     Sound.getInstance().play(10);
                     this.gs[1] = true;
                  }
               } else {
                  this.gs[1] = false;
               }

               if (this.gw == 1) {
                  if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
                     if (!this.gp[14]) {
                        this.gp[14] = true;
                        Sound.getInstance().play(10);
                     }
                  } else {
                     this.gp[14] = false;
                  }
               }

               if (this.S() && this.b(this.fA[0][0], this.fA[0][1], this.fA[0][2], this.fA[0][3])) {
                  Sound.getInstance().play(11);
                  var6 = this.fz;
                  var10002 = var6[0]++;
               } else if (this.S() && this.b(this.fA[1][0], this.fA[1][1], this.fA[1][2], this.fA[1][3])) {
                  Sound.getInstance().play(11);
                  var6 = this.fz;
                  var10002 = var6[1]++;
               } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
                  if (this.gw == 1 && this.bf >= 1) {
                     Sound.getInstance().play(11);
                     var6 = this.fx;
                     var10002 = var6[14]++;
                  }
               } else if (this.S() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3]) && !this.dV) {
                  if (this.gw == 99 && this.be >= 1) {
                     Sound.getInstance().play(11);
                     var6 = this.fx;
                     var10002 = var6[15]++;
                     this.gA[0] = 0;
                     this.gR = 1;
                  }
               } else if (this.T()) {
                  this.fz[1] = 0;
                  this.gu = false;
               }
            }
         }
      } else {
         this.gu = false;

         for(var7 = 0; var7 < this.getLength(this.gv); ++var7) {
            this.gv[var7] = 0;
         }

         for(var7 = var4; var7 < this.getLength(this.ah); ++var7) {
            if (this.ah[var7].isLoaded()) {
               this.ah[var7].reset();
            }
         }
      }

   }

   void powerUpLoad() {
      this.ct = 0;

      int var1;
      for(var1 = 0; var1 < this.getLength(this.gp); ++var1) {
         this.gp[var1] = false;
      }

      for(var1 = 0; var1 < 10; ++var1) {
         if (this.bk[var1] - 2 <= -1) {
            this.eV[var1] = 0;
         } else {
            this.eV[var1] = this.bw[this.bk[var1] - 2];
         }
      }

      this.gp[3] = true;
      //jp.co.ponos.library.a.a.b().f();

      int var2;
      for(var1 = 0; var1 < this.getLength(this.fw); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.fw[var1]); ++var2) {
            this.fw[var1][var2] = 0;
         }
      }

      for(var1 = 0; var1 < this.getLength(this.gG); ++var1) {
         this.gG[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gA); ++var1) {
         this.gA[var1] = 0;
      }

      this.fw[0][0] = 4;
      this.fw[0][1] = 365;
      this.fw[0][2] = 383;
      this.fw[0][3] = 89;
      this.fw[1][0] = this.getWidth() / 2 - 164 + 285 - 10;
      this.fw[1][1] = 294;
      this.fw[1][2] = 89;
      this.fw[1][3] = 89;
      this.fw[5][0] = 4;
      this.fw[5][1] = 541;
      this.fw[5][2] = 95;
      this.fw[5][3] = 95;
      this.fw[13][0] = this.excessWidth + 344;
      this.fw[13][1] = 560;
      this.fw[13][2] = 247;
      this.fw[13][3] = 88;
      this.fw[14][0] = this.excessWidth + 680;
      this.fw[14][1] = 552;
      this.fw[14][2] = 88;
      this.fw[14][3] = 88;
      this.fw[15][0] = this.excessWidth + 626;
      this.fw[15][1] = 0;
      this.fw[15][2] = 88;
      this.fw[15][3] = 88;
      this.bC[0] = 1;

      for(var1 = 0; var1 < this.getLength(this.bK); ++var1) {
         this.bK[var1] = -1;
      }

      if (!this.gF[0]) {
         for(var1 = 0; var1 < this.getLength(this.gm); ++var1) {
            this.gm[var1] = 0;
         }

         this.gm[1] = 297;
         this.fR[0] = 0;

         for(var1 = 0; var1 < this.getLength(this.fQ); ++var1) {
            this.fQ[var1] = 0;
         }

         if (this.gQ == 0) {
            this.fQ[0] = this.getLength(cu) - 1;
         }

         for(var1 = 0; var1 < this.getLength(this.eE); ++var1) {
            this.eE[var1] = false;
         }

         this.eE[0] = true;

         for(var1 = 0; var1 < this.getLength(this.fS); ++var1) {
            this.fS[var1] = 0;
         }
      } else {
         this.gF[1] = true;
         if (this.fS[2] + this.fS[5] <= -1) {
            this.fS[3] = this.gE[-(this.fS[2] + this.fS[5]) - 1];
            this.bC[this.gE[-(this.fS[2] + this.fS[5]) - 1]] = 1;
         } else if (this.fS[2] + this.fS[5] - (this.gC[1] + 1) >= 0) {
            this.fS[3] = this.gE[this.fS[2] + this.fS[5] - this.gC[1] - 1];
            this.bC[this.gE[this.fS[2] + this.fS[5] - this.gC[1] - 1]] = 1;
         }

         this.fS[5] = 0;
         this.eE[11] = false;
      }

      for(var1 = 0; var1 < this.getLength(this.ag); ++var1) {
         if (this.ag[var1].isLoaded()) {
            this.ag[var1].reset();
         }
      }

      for(var1 = 0; var1 < this.getLength(this.eh); ++var1) {
         this.eh[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.ei); ++var1) {
         this.ei[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.bL); ++var1) {
         this.bL[var1] = 0;
      }

      for(var1 = 0; var1 < 26; ++var1) {
         if (this.bq[this.bJ[var1][15]] >= this.bJ[var1][0]) {
            this.bL[var1] = this.bJ[var1][13];
         }
      }

      boolean var10 = true;

      for(var1 = 0; var1 < 26; ++var1) {
         if (this.bL[var1] != 0) {
            var10 = false;
         }
      }

      if (var10) {
         this.bL[0] = 1;
      }

      int var3;
      for(var1 = 0; var1 < this.getLength(this.bL); ++var1) {
         for(var2 = this.getLength(this.bL) - 1; var2 > var1; --var2) {
            if (this.bL[var2] < this.bL[var2 - 1]) {
               var3 = this.bL[var2];
               this.bL[var2] = this.bL[var2 - 1];
               this.bL[var2 - 1] = var3;
            }
         }
      }

      var1 = 0;
      var3 = -1;
      int var4 = 0;

      int var9;
      for(var2 = 0; var4 < this.getLength(this.bL); var3 = var9) {
         int var7 = var2;
         int var8 = var1;
         var9 = var3;
         if (this.bL[var4] > var3) {
            var9 = this.bL[var4];
            var3 = var2;
            if (this.fS[3] != this.bL[var4]) {
               if (this.gQ == 0) {
                  this.gE[var2] = this.bL[var4];
               }

               var3 = var2 + 1;
            }

            var8 = var1 + 1;
            var7 = var3;
         }

         ++var4;
         var2 = var7;
         var1 = var8;
      }

      if (this.gQ >= 1) {
         var3 = 0;

         for(var2 = 0; var2 < this.getLength(this.fS); ++var2) {
            this.fS[var2] = this.gT[var2];
            var3 = var2 + 1;
         }

         this.eh[0] = this.gT[var3];
      }

      if (this.fS[3] >= 1) {
         var1 = 2;
      }

      this.gy = 200;
      this.gC[0] = var1;
      this.gC[2] = var1 - 1;
      this.eh[0] = -(this.gy * this.gC[0]);
      this.fS[0] = this.gC[0];
      this.fS[2] = 0;
      this.fS[1] = this.gy * 100 + this.eh[0] / this.gy;
      if (this.gQ >= 1) {
         var2 = 0;

         for(var1 = 0; var1 < this.getLength(this.fS); ++var1) {
            this.fS[var1] = this.gT[var1];
            var2 = var1 + 1;
         }

         this.eh[0] = this.gT[var2];
      }

      for(var1 = 0; var1 < 26; ++var1) {
         if (this.bJ[var1][13] == this.fS[3] && this.bq[this.bJ[var1][15]] >= this.bJ[var1][0] && (var1 != 17 || this.bn != 0) && (var1 != 16 || this.bD[0] != 0)) {
            for(var2 = 0; var2 < this.getLength(this.bK); ++var2) {
               if (this.bK[var2] == -1) {
                  this.bK[var2] = var1;
                  break;
               }
            }
         }
      }

      for(var1 = 0; var1 < this.getLength(this.bK) - 1; ++var1) {
         for(var2 = this.getLength(this.bK) - 1; var2 > var1; --var2) {
            if (this.bK[var2] != -1 && this.bK[var2 - 1] != -1 && this.bJ[this.bK[var2]][14] < this.bJ[this.bK[var2 - 1]][14]) {
               var3 = this.bK[var2];
               this.bK[var2] = this.bK[var2 - 1];
               this.bK[var2 - 1] = var3;
            }
         }
      }

      if (this.fS[3] == 1) {
         this.gB[1] = 1;
         this.ag[0].a(this.cU[0], "FONT_SYSTEM_BOLD", 30, 1);
         this.gB[0] = 0;
         this.gA[0] = 1;
         this.gC[1] = 0;
         var1 = 1;
      } else {
         this.gB[1] = 0;
         var1 = 0;
      }

      for(var2 = 0; var2 < 26; ++var2) {
         if (this.bK[var2] != -1) {
            if (this.bw[this.bK[var2]] == 0) {
               this.ag[var1].a(this.cT[this.bK[var2]][0][0], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.bw[this.bK[var2]] == 1) {
               this.ag[var1].a(this.cT[this.bK[var2]][1][0], "FONT_SYSTEM_BOLD", 30, 1);
            }

            this.gB[0] = var1 + 1;
            if (this.fS[3] >= 1) {
               this.gA[0] = var1 + 1;
               this.gC[1] = var1;
            }

            ++var1;
         }
      }

      if (this.fS[3] == 0) {
         for(var2 = var1; var2 < this.getLength(this.cV) + var1; this.gC[1] = var2++) {
            this.ag[var2].a(this.cV[var2 - var1][0], "FONT_SYSTEM_BOLD", 30, 1);
            this.gA[0] = var2 + 1;
         }
      }

      int[] var5 = this.gA;
      int[] var6 = this.gA;
      var1 = this.gA[0];
      var6[1] = var1;
      var5[2] = var1;

      for(var1 = this.gA[2]; var1 < this.getLength(this.cD) + this.gA[2]; ++var1) {
         this.ag[var1].a(this.cD[var1 - this.gA[2]], "FONT_SYSTEM_BOLD", 30, 1);
         this.gA[3] = var1 + 1;
      }

      if (this.fS[3] == 0) {
         if (this.fS[2] > -1 && this.fS[2] < this.gC[1] + 1) {
            if (this.fS[2] >= this.gB[1] && this.fS[2] < this.gB[0]) {
               for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
                  if (this.bw[this.fS[2]] == 0) {
                     if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && !this.ag[var1].isLoaded()) {
                        this.ag[var1].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  } else if (this.bw[this.fS[2]] == 1 && this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && !this.ag[var1].isLoaded()) {
                     this.ag[var1].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.gA[4] = var1 + 1;
               }
            } else if (this.fS[2] - this.gB[0] >= 0) {
               for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
                  if (!this.ag[var1].isLoaded()) {
                     this.ag[var1].a(this.cV[this.fS[2] - this.gB[0]][var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.gA[4] = var1 + 1;
               }
            }
         } else if (this.fS[3] == 0) {
            for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
               this.ag[var1].a(this.dp[0][var1 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         } else {
            for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
               this.ag[var1].a(this.dp[1][var1 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }
      } else if (this.fS[3] >= 1) {
         if (this.fS[2] > -1 && this.fS[2] < this.gC[1] + 1) {
            if (this.fS[2] < this.gB[1]) {
               for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
                  if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && !this.ag[var1].isLoaded()) {
                     this.ag[var1].a(this.cU[var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.gA[4] = var1 + 1;
               }
            } else if (this.fS[2] < this.gB[0]) {
               for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
                  if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
                     if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                        if (!this.ag[var1].isLoaded()) {
                           this.ag[var1].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     } else if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1 && !this.ag[var1].isLoaded()) {
                        this.ag[var1].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var1 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }

                  this.gA[4] = var1 + 1;
               }
            }
         } else if (this.fS[3] == 0) {
            for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
               this.ag[var1].a(this.dp[0][var1 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         } else {
            for(var1 = this.gA[3]; var1 < this.gA[3] + 3; ++var1) {
               this.ag[var1].a(this.dp[1][var1 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }
      }

      if (!this.ag[this.gA[4]].isLoaded()) {
         if (this.fS[3] == 0) {
            if (this.fS[2] < this.gB[0]) {
               this.ag[this.gA[4]].a(this.cY[0], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.fS[2] - this.gB[0] >= 0 && this.fS[2] - this.gB[0] <= 2) {
               this.ag[this.gA[4]].a(this.cY[1], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.fS[2] - this.gB[0] >= 3 && this.fS[2] - this.gB[0] <= 4) {
               this.ag[this.gA[4]].a(this.cY[2], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.fS[2] - this.gB[0] == 5) {
               this.ag[this.gA[4]].a(this.cY[3], "FONT_SYSTEM_BOLD", 30, 1);
            } else {
               this.ag[this.gA[4]].a(this.cY[4], "FONT_SYSTEM_BOLD", 30, 1);
            }
         } else if (this.fS[2] < this.gB[1]) {
            this.ag[this.gA[4]].a(this.cY[7], "FONT_SYSTEM_BOLD", 30, 1);
         } else {
            this.ag[this.gA[4]].a(this.cY[5], "FONT_SYSTEM_BOLD", 30, 1);
         }
      }

      this.gA[5] = this.gA[4] + 1;
      if (!this.ag[this.gA[5]].isLoaded()) {
         this.ag[this.gA[5]].a(this.cD[6], "FONT_SYSTEM_BOLD", 30, 1);
      }

      this.ct = 0;

      for(var1 = 0; var1 < this.getLength(this.ek); ++var1) {
         this.ek[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fx); ++var1) {
         this.fx[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.eK); ++var1) {
         this.eK[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.hk); ++var1) {
         this.hk[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fC); ++var1) {
         this.fC[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fy); ++var1) {
         this.fy[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.fz); ++var1) {
         this.fz[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.gZ); ++var1) {
         this.gZ[var1] = 0;
      }

      for(var1 = 0; var1 < this.getLength(this.go); ++var1) {
         for(var2 = 0; var2 < this.getLength(this.go[var1]); ++var2) {
            if (var2 == 0) {
               this.go[var1][var2] = 229;
            } else if (var2 == 1) {
               this.go[var1][var2] = 184;
            }
         }
      }

      this.go[0][0] = 328;
      this.go[0][1] = 263;
      if (!this.gF[0]) {
         if (this.ae[6].isLoaded()) {
            this.ae[6].reset();
         }

         if (!this.ae[6].isLoaded()) {
            this.ae[6].load(MyUtility.getString(String.format("img%03d.png", 21)), MyUtility.getString(String.format("img%03d.imgcut", 21)));
         }
      }

      if (this.fS[3] == 0) {
         if (this.ae[7].isLoaded()) {
            this.ae[7].reset();
         }

         if (!this.ae[7].isLoaded()) {
            this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 22)), MyUtility.getString(String.format("img%03d.imgcut", 22)));
         }

         if (this.ae[8].isLoaded()) {
            this.ae[8].reset();
         }

         if (!this.ae[8].isLoaded()) {
            this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 23)), MyUtility.getString(String.format("img%03d.imgcut", 23)));
         }
      } else if (this.fS[3] >= 1) {
         if (this.ae[7].isLoaded()) {
            this.ae[7].reset();
         }

         if (!this.ae[7].isLoaded()) {
            this.ae[7].load(MyUtility.getString(String.format("img%03d.png", 26)), MyUtility.getString(String.format("img%03d.imgcut", 26)));
         }

         if (this.ae[8].isLoaded()) {
            this.ae[8].reset();
         }

         if (!this.ae[8].isLoaded()) {
            this.ae[8].load(MyUtility.getString(String.format("img%03d.png", 27)), MyUtility.getString(String.format("img%03d.imgcut", 27)));
         }
      }

      if (!this.gF[0]) {
         if (this.ae[9].isLoaded()) {
            this.ae[9].reset();
         }

         if (!this.ae[9].isLoaded()) {
            this.ae[9].load(MyUtility.getString(String.format("img%03d.png", 28)), MyUtility.getString(String.format("img%03d.imgcut", 28)));
         }

         if (!this.ae[10].isLoaded()) {
            this.ae[10].reset();
         }

         if (!this.ae[10].isLoaded()) {
            this.ae[10].load(MyUtility.getString(String.format("img%03d.png", 25)), MyUtility.getString(String.format("img%03d.imgcut", 25)));
         }
      }

      for(var1 = 0; var1 < this.gC[1] + 1; ++var1) {
         if (this.ae[var1 + 11].isLoaded()) {
            this.ae[var1 + 11].reset();
         }

         if (var1 < this.gB[1]) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_g.png", 0)), MyUtility.getString(String.format("udi%03d_g.imgcut", 0)));
            }
         } else if (var1 < this.gB[0]) {
            if (!this.ae[var1 + 11].isLoaded()) {
               if (this.bw[this.bK[var1 - this.gB[1]]] == 0) {
                  this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[var1 - this.gB[1]])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[var1 - this.gB[1]])));
               } else {
                  this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[var1 - this.gB[1]])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[var1 - this.gB[1]])));
               }
            }
         } else if (var1 - this.gB[0] == 0 && this.bx[0] + 1 < this.bi) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
            }
         } else if (var1 - this.gB[0] == 0) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
            }
         } else if (var1 - this.gB[0] == 1 && this.bx[2] + 1 < 10) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
            }
         } else if (var1 - this.gB[0] == 1) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
            }
         } else if (this.bx[var1 - this.gB[0] + 1] + 1 < this.bi) {
            if (!this.ae[var1 + 11].isLoaded()) {
               this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_s_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_s_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
            }
         } else if (!this.ae[var1 + 11].isLoaded()) {
            this.ae[var1 + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", var1 - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", var1 - this.gB[0], MyUtility.getString("lang"))));
         }
      }

      this.gz = 0;
      this.gF[0] = false;
      this.hI = false;
   }

   boolean powerupProcess() {
      boolean var1 = false;
      int[] var2 = this.eh;
      var2[0] += this.ek[0];
      var2 = this.eh;
      var2[1] -= this.ek[0];
      var2 = this.ek;
      var2[0] = (int)((double)var2[0] * 0.9);
      if (this.eh[0] >= this.gy / 2 - this.gy - 20) {
         this.eh[0] = this.gy / 2 - this.gy - 20;
         this.eh[1] = this.gy * 100;
         this.ek[0] = 0;
      } else if (this.eh[0] < -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20)) {
         this.eh[0] = -(this.gy * (this.gC[0] + this.gC[1] + this.gC[2]) + this.gy / 2 - 20);
         this.ek[0] = 0;
         this.eh[1] = this.gy * 100;
      }

      if (this.R() && !this.eE[0] && !this.eE[1] && !this.eE[11] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.gI && this.fx[1] == 0 && !this.eb && this.fx[0] == 0) {
         if (this.K() - this.O() > -10 && this.K() - this.O() < 10 && !this.hI) {
            this.ek[0] = 0;
         } else {
            this.hI = true;
         }

         if (this.hI) {
            this.ek[0] = this.K() - this.O();
            if (this.ek[0] != 0 && !this.eE[9]) {
               this.eE[9] = true;
               this.ct = 0;
            }
         }
      } else {
         this.hI = false;
         if (this.ek[0] >= 0 && this.ek[0] < 8 || this.ek[0] > -8 && this.ek[0] <= 0) {
            this.ek[0] = 0;
            if (this.eh[0] % this.gy != 0) {
               if (-this.eh[0] % this.gy >= this.gy / 2) {
                  this.eh[0] -= (this.eh[0] % this.gy + this.gy + 4) / 4;
                  if ((this.eh[0] % this.gy + this.gy + 4) / 4 == 0) {
                     this.eh[0] = (this.eh[0] / this.gy - 1) * this.gy;
                  }
               } else {
                  this.eh[0] -= (this.eh[0] % this.gy - 4) / 4;
                  if ((this.eh[0] % this.gy - 4) / 4 == 0) {
                     this.eh[0] = this.eh[0] / this.gy * this.gy;
                  }
               }
            }
         }

         if (!this.S()) {
            this.eE[9] = false;
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && this.fx[0] == 0) {
         if (this.ek[0] < 0) {
            if (this.fS[0] != -(this.eh[0] / this.gy)) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.ek[0] > 0) {
            if (this.fS[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
               Sound.getInstance().play(10);
            }

            this.gp[3] = false;
         } else if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.gp[3]) {
            Sound.getInstance().play(10);
            this.gp[3] = true;
         }
      }

      if (this.fS[0] != -(this.eh[0] / this.gy)) {
         this.fS[0] = -(this.eh[0] / this.gy);
      }

      if (this.fS[1] != (this.gy * 100 + this.eh[0]) / this.gy) {
         this.fS[1] = (this.gy * 100 + this.eh[0]) / this.gy;
      }

      int var3;
      if (-this.eh[0] % this.gy >= this.gy / 2) {
         if (this.fS[0] + 1 - this.gC[0] != this.fS[2]) {
            this.fS[2] = this.fS[0] + 1 - this.gC[0];
            if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
               if (this.fS[2] < this.gB[1]) {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     this.ag[var3].a(this.cU[var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  this.ag[this.gA[4]].a(this.cY[7], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fS[2] < this.gB[0]) {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
                        if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                           this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                        } else if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1) {
                           this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                        }
                     }
                  }

                  if (this.fS[3] == 0) {
                     this.ag[this.gA[4]].a(this.cY[0], "FONT_SYSTEM_BOLD", 30, 1);
                  } else if (this.fS[3] >= 1) {
                     this.ag[this.gA[4]].a(this.cY[5], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               } else {
                  for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                     this.ag[var3].a(this.cV[this.fS[2] - this.gB[0]][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }

                  if (this.fS[2] - this.gB[0] >= 0 && this.fS[2] - this.gB[0] <= 2) {
                     this.ag[this.gA[4]].a(this.cY[1], "FONT_SYSTEM_BOLD", 30, 1);
                  } else if (this.fS[2] - this.gB[0] >= 3 && this.fS[2] - this.gB[0] <= 4) {
                     this.ag[this.gA[4]].a(this.cY[2], "FONT_SYSTEM_BOLD", 30, 1);
                  } else if (this.fS[2] - this.gB[0] == 5) {
                     this.ag[this.gA[4]].a(this.cY[3], "FONT_SYSTEM_BOLD", 30, 1);
                  } else {
                     this.ag[this.gA[4]].a(this.cY[4], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }
            } else if (this.fS[3] == 0) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.dp[0][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.dp[1][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         }
      } else if (this.fS[0] - this.gC[0] != this.fS[2]) {
         this.fS[2] = this.fS[0] - this.gC[0];
         if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
            if (this.fS[2] < this.gB[1]) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.cU[var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
               }

               this.ag[this.gA[4]].a(this.cY[7], "FONT_SYSTEM_BOLD", 30, 1);
            } else if (this.fS[2] < this.gB[0]) {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
                     if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                        this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     } else if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1) {
                        this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                     }
                  }
               }

               if (this.fS[3] == 0) {
                  this.ag[this.gA[4]].a(this.cY[0], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fS[3] >= 1) {
                  this.ag[this.gA[4]].a(this.cY[5], "FONT_SYSTEM_BOLD", 30, 1);
               }
            } else {
               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  this.ag[var3].a(this.cV[this.fS[2] - this.gB[0]][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
               }

               if (this.fS[2] - this.gB[0] >= 0 && this.fS[2] - this.gB[0] <= 2) {
                  this.ag[this.gA[4]].a(this.cY[1], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fS[2] - this.gB[0] >= 3 && this.fS[2] - this.gB[0] <= 4) {
                  this.ag[this.gA[4]].a(this.cY[2], "FONT_SYSTEM_BOLD", 30, 1);
               } else if (this.fS[2] - this.gB[0] == 5) {
                  this.ag[this.gA[4]].a(this.cY[3], "FONT_SYSTEM_BOLD", 30, 1);
               } else {
                  this.ag[this.gA[4]].a(this.cY[4], "FONT_SYSTEM_BOLD", 30, 1);
               }
            }
         } else if (this.fS[3] == 0) {
            for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
               this.ag[var3].a(this.dp[0][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         } else {
            for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
               this.ag[var3].a(this.dp[1][var3 - this.gA[3]], "FONT_SYSTEM_BOLD", 30, 1);
            }
         }
      }

      var2 = this.fQ;
      var2[5] -= 10;
      if (this.fQ[5] <= 0) {
         this.fQ[5] = 0;
      }

      int var10002;
      int var4;
      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.eE[9] && !this.gF[0] && !this.gF[1] && !this.eb && !this.gI) {
         if (this.fx[0] >= 1) {
            var2 = this.fx;
            var10002 = var2[0]++;
            if (this.fx[0] > this.getLength(dv) - 1) {
               this.fx[0] = 0;
               if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
                  if (this.fS[2] < this.gB[1]) {
                     if (this.aY >= hn) {
                        this.aY -= hn;
                        if (this.bd == 0) {
                           this.screenTransition();

                           for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                              this.gG[var3] = 0;
                           }

                           this.gG[this.fS[2]] = 1;
                           this.fQ[5] = 255;
                           this.gx = 1;
                           this.gu = true;
                           this.gw = 0;
                           return var1;
                        }
                     } else if (this.be >= 1) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 99;
                        return var1;
                     }
                  } else if (this.fS[2] < this.gB[0]) {
                     if (this.bq[this.bJ[this.bK[this.fS[2] - this.gB[1]]][15]] >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][0]) {
                        if (this.bu[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                           if (this.fS[3] == 0) {
                              if (this.aY >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                                 this.aY -= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                                 this.bu[this.bK[this.fS[2] - this.gB[1]]] = 1;
                                 if (this.bh == 0) {
                                    for(var3 = 0; var3 < this.getLength(this.bk); ++var3) {
                                       if (this.bk[var3] == -1) {
                                          this.bk[var3] = this.bK[this.fS[2] - this.gB[1]] + 2;
                                          break;
                                       }
                                    }

                                    int var5;
                                    for(var3 = 0; var3 < this.getLength(this.bk); var3 = var5 + 1) {
                                       if (this.bk[var3] == -1) {
                                          var5 = var3;
                                       } else {
                                          var4 = 0;

                                          while(true) {
                                             var5 = var3;
                                             if (var4 >= this.getLength(this.bk)) {
                                                break;
                                             }

                                             if (this.bk[var4] != -1 && var3 != var4 && var3 < var4 && this.bk[var3] > this.bk[var4]) {
                                                this.eH[0] = this.bk[var4];
                                                this.bk[var4] = this.bk[var3];
                                                this.bk[var3] = this.eH[0];
                                                var5 = 0;
                                                break;
                                             }

                                             ++var4;
                                          }
                                       }
                                    }
                                 }

                                 for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                    this.gG[var3] = 0;
                                 }

                                 this.gG[this.fS[2]] = 1;
                                 this.fQ[5] = 255;
                                 boolean var6 = false;

                                 for(var3 = 0; var3 < 9; ++var3) {
                                    if (this.bu[var3] == 0) {
                                       var6 = true;
                                    }
                                 }

                                 if (!var6) {
                                    this.screenTransition();
                                    this.gu = true;
                                    this.gw = 8;
                                    return var1;
                                 }
                              } else if (this.be >= 1) {
                                 this.screenTransition();
                                 this.gu = true;
                                 this.gw = 99;
                                 return var1;
                              }
                           } else if (this.bJ[this.bK[this.fS[2] - this.gB[1]]][12] == 0) {
                              this.aY -= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
                              if (this.bh == 0) {
                                 this.screenTransition();
                                 this.gu = true;
                                 this.gw = 0;
                                 this.bh = 1;
                                 this.bu[this.bK[this.fS[2] - this.gB[1]]] = 1;
                                 this.gx = 0;
                                 this.ac();

                                 for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                    this.gG[var3] = 0;
                                 }

                                 this.gG[this.fS[2]] = 1;
                                 this.fQ[5] = 255;
                                 return var1;
                              }

                              this.bu[this.bK[this.fS[2] - this.gB[1]]] = 1;
                              this.ac();

                              for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                 this.gG[var3] = 0;
                              }

                              this.gG[this.fS[2]] = 1;
                              this.fQ[5] = 255;
                           } else if (this.bJ[this.bK[this.fS[2] - this.gB[1]]][12] >= 1) {
                              if (this.aL >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                                 this.screenTransition();
                                 this.gu = true;
                                 this.gw = 2;
                              } else {
                                 this.screenTransition();
                                 this.gu = true;
                                 this.gw = 1;
                              }

                              return var1;
                           }
                        } else if (this.aY >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1)) {
                           this.aY -= this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1);
                           var2 = this.bv;
                           var3 = this.bK[this.fS[2] - this.gB[1]];
                           var10002 = var2[var3]++;
                           if (this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 == 10) {
                              this.bw[this.bK[this.fS[2] - this.gB[1]]] = 1;
                              if (this.ae[this.fS[2] + 11].isLoaded()) {
                                 this.ae[this.fS[2] + 11].reset();
                              }

                              if (!this.ae[this.fS[2] + 11].isLoaded()) {
                                 if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                                    this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[this.fS[2] - this.gB[1]])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[this.fS[2] - this.gB[1]])));
                                 } else {
                                    this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[this.fS[2] - this.gB[1]])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[this.fS[2] - this.gB[1]])));
                                 }
                              }

                              this.ag[this.fS[2]].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][0], "FONT_SYSTEM_BOLD", 30, 1);

                              for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                                 if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1) {
                                    this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                                 }
                              }

                              for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                 this.gG[var3] = 0;
                              }

                              this.gG[this.fS[2]] = 1;
                              this.fQ[5] = 255;
                              if (this.bc[1] == 0) {
                                 this.screenTransition();
                                 this.gu = true;
                                 this.gw = 10;
                                 this.bc[1] = 1;
                                 return var1;
                              }
                           } else {
                              for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                 this.gG[var3] = 0;
                              }

                              this.gG[this.fS[2]] = 1;
                              this.fQ[5] = 255;
                           }
                        } else if (this.be >= 1) {
                           this.screenTransition();
                           this.gu = true;
                           this.gw = 99;
                           return var1;
                        }
                     }
                  } else if (this.fS[2] - this.gB[0] == 0) {
                     if (this.aY >= ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1)) {
                        this.aY -= ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1);
                        var2 = this.bx;
                        var10002 = var2[0]++;
                        var2 = this.bx;
                        var10002 = var2[1]++;
                        if (this.bx[0] + 1 >= this.bi) {
                           if (this.ae[this.fS[2] + 11].isLoaded()) {
                              this.ae[this.fS[2] + 11].reset();
                           }

                           if (!this.ae[this.fS[2] + 11].isLoaded()) {
                              this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", this.fS[2] - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", this.fS[2] - this.gB[0], MyUtility.getString("lang"))));
                           }
                        }

                        for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                           this.gG[var3] = 0;
                        }

                        this.gG[this.fS[2]] = 1;
                        this.fQ[5] = 255;
                     } else if (this.be >= 1) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 99;
                        return var1;
                     }
                  } else if (this.fS[2] - this.gB[0] >= 1) {
                     if (this.fS[2] - this.gB[0] == 1) {
                        if (this.bx[2] + 1 < 10) {
                           if (this.aY >= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                              this.aY -= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1);
                              var2 = this.bx;
                              var3 = this.fS[2] - this.gB[0] + 1;
                              var10002 = var2[var3]++;
                              if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 >= 10) {
                                 if (this.ae[this.fS[2] + 11].isLoaded()) {
                                    this.ae[this.fS[2] + 11].reset();
                                 }

                                 if (!this.ae[this.fS[2] + 11].isLoaded()) {
                                    this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", this.fS[2] - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", this.fS[2] - this.gB[0], MyUtility.getString("lang"))));
                                 }
                              }

                              for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                                 this.gG[var3] = 0;
                              }

                              this.gG[this.fS[2]] = 1;
                              this.fQ[5] = 255;
                           } else if (this.be >= 1) {
                              this.screenTransition();
                              this.gu = true;
                              this.gw = 99;
                              return var1;
                           }
                        }
                     } else if (this.aY >= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                        this.aY -= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1);
                        var2 = this.bx;
                        var3 = this.fS[2] - this.gB[0] + 1;
                        var10002 = var2[var3]++;
                        if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 >= this.bi) {
                           if (this.ae[this.fS[2] + 11].isLoaded()) {
                              this.ae[this.fS[2] + 11].reset();
                           }

                           if (!this.ae[this.fS[2] + 11].isLoaded()) {
                              this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_sg_%s.png", this.fS[2] - this.gB[0], MyUtility.getString("lang"))), MyUtility.getString(String.format("udi%03d_sg_%s.imgcut", this.fS[2] - this.gB[0], MyUtility.getString("lang"))));
                           }
                        }

                        var4 = 0;

                        for(var3 = 0; var3 < 10; ++var3) {
                           var4 += cB[10] * this.bO[var3][10] / 100;
                        }

                        if (this.fS[2] - this.gB[0] + 1 == 10) {
                           this.aM += 10;
                           if (this.aM >= ad[10] + this.bx[10] * 10 + var4) {
                              this.aM = var4 + ad[10] + this.bx[10] * 10;
                           }
                        }

                        for(var3 = 0; var3 < this.getLength(this.gG); ++var3) {
                           this.gG[var3] = 0;
                        }

                        this.gG[this.fS[2]] = 1;
                        this.fQ[5] = 255;
                     } else if (this.be >= 1) {
                        this.screenTransition();
                        this.gu = true;
                        this.gw = 99;
                        return var1;
                     }
                  }
               }
            }
         } else if (this.fx[1] >= 1) {
            var2 = this.fx;
            var10002 = var2[1]++;
            if (this.fx[1] > this.getLength(dv) - 1) {
               this.fx[1] = 0;
               this.gI = true;
            }
         } else if (this.fx[2] >= 1) {
            var2 = this.fx;
            var10002 = var2[2]++;
            if (this.fx[2] > this.getLength(dv) - 1) {
               this.fx[2] = 0;
               if (this.fS[2] + this.fS[5] <= -1 || this.fS[2] + this.fS[5] >= this.gC[1] + 1) {
                  this.gF[0] = true;
               }
            }
         } else if (this.fx[5] >= 1) {
            var2 = this.fx;
            var10002 = var2[5]++;
            this.eE[10] = true;
            if (this.fx[5] > this.getLength(dv) - 1) {
               this.fx[5] = 0;
               this.eE[1] = true;
            }
         } else if (this.fx[13] >= 1) {
            var2 = this.fx;
            var10002 = var2[13]++;
            if (this.fx[13] > this.getLength(dv) - 1) {
               this.fx[13] = 0;
               if (this.be >= 1) {
                  this.eE[13] = true;
               }
            }
         } else if (this.fx[14] >= 1) {
            var2 = this.fx;
            var10002 = var2[14]++;
            if (this.fx[14] > this.getLength(dv) - 1) {
               this.fx[14] = 0;
               if (this.bB[8] == 0) {
                  this.screenTransition();
                  this.bB[8] = 1;
                  this.gU = true;

                  for(var3 = 0; var3 < this.getLength(this.gV); ++var3) {
                     this.gV[var3] = 0;
                  }

                  Sound.getInstance().setVolume(50);
                  return var1;
               } else {
                  if (this.aL >= 900000) {
                     this.screenTransition();
                     this.gu = true;
                     this.gw = 10000;
                  } else {
                     this.screenTransition();
                     this.menuType = 0;
                     this.j = true;
                  }

                  return var1;
               }
            }
         } else if (this.fx[15] >= 1) {
            var2 = this.fx;
            var10002 = var2[15]++;
            if (this.fx[15] > this.getLength(dv) - 1) {
               this.fx[15] = 0;
               if (this.be >= 1) {
                  this.eE[13] = true;
               }
            }
         } else {
            if ((this.fS[2] <= -1 || this.fS[2] >= this.gC[1] + 1) && this.R() && this.b(this.getWidth() / 2 - this.go[this.fS[0]][0] / 2 + this.gy * this.fS[0] + this.eh[0] - (328 - this.go[this.fS[0]][0]), 347 - this.go[this.fS[0]][1], this.go[this.fS[0]][0], this.go[this.fS[0]][1])) {
               if (!this.gp[2]) {
                  Sound.getInstance().play(10);
                  this.gp[2] = true;
               }
            } else {
               this.gp[2] = false;
            }

            if (this.R() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
               if ((this.gp[0] || this.fS[2] > -1 && this.fS[2] < this.gC[1] + 1) && !this.gp[0] && this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && this.fS[2] >= this.gB[1]) {
                  if (this.fS[2] < this.gB[0]) {
                     if (this.bq[this.bJ[this.bK[this.fS[2] - this.gB[1]]][15]] >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][0] && this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 < this.bi) {
                        Sound.getInstance().play(10);
                        this.gp[0] = true;
                     }
                  } else if (this.fS[2] - this.gB[0] == 0) {
                     if (this.bx[0] + 1 < this.bi) {
                        Sound.getInstance().play(10);
                        this.gp[0] = true;
                     }
                  } else if (this.fS[2] - this.gB[0] == 1) {
                     if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < 10) {
                        Sound.getInstance().play(10);
                        this.gp[0] = true;
                     }
                  } else if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < this.bi) {
                     Sound.getInstance().play(10);
                     this.gp[0] = true;
                  }
               }
            } else {
               this.gp[0] = false;
            }

            if (this.bq[0] >= 48) {
               if (this.R() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
                  if (!this.gp[1] && this.fS[2] >= this.gB[1] && this.fS[2] < this.gB[0] && this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 >= 10 && this.eh[0] % this.gy == 0 && this.ek[0] == 0) {
                     Sound.getInstance().play(10);
                     this.gp[1] = true;
                  }
               } else {
                  this.gp[1] = false;
               }
            }

            if (this.R() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               if (!this.eE[9] && !this.gp[5]) {
                  Sound.getInstance().play(10);
                  this.gp[5] = true;
               }
            } else {
               this.gp[5] = false;
            }

            if (this.fx[2] == 0 && this.fS[0] - 2 >= 0 && this.fS[2] <= 0 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.S() && this.b(this.getWidth() / 2 - this.go[this.fS[0] - 1][0] / 2 + this.gy * (this.fS[0] - 1) + this.eh[0] - (328 - this.go[this.fS[0] - 1][0] + (328 - this.go[this.fS[0] - 1 + 1][0]) / 2), 347 - this.go[this.fS[0] - 1][1], this.go[this.fS[0] - 1][0], this.go[this.fS[0] - 1][1])) {
               var2 = this.fx;
               var10002 = var2[2]++;
               this.fS[5] = -1;
               this.eE[11] = true;
               Sound.getInstance().play(11);
            }

            if (this.fx[2] == 0 && this.fS[0] - 2 <= this.gC[1] && this.fS[2] >= this.gC[1] && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.S() && this.b(this.getWidth() / 2 - this.go[this.fS[0] + 1][0] / 2 + this.gy * (this.fS[0] + 1) + this.eh[0] + (328 - this.go[this.fS[0] + 1][0]), 347 - this.go[this.fS[0] + 1][1], this.go[this.fS[0] + 1][0], this.go[this.fS[0] + 1][1])) {
               var2 = this.fx;
               var10002 = var2[2]++;
               this.fS[5] = 1;
               Sound.getInstance().play(11);
               this.eE[11] = true;
            }

            if (this.fx[2] == 0 && (this.fS[2] <= -1 || this.fS[2] >= this.gC[1] + 1) && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.S() && this.b(this.getWidth() / 2 - this.go[this.fS[0]][0] / 2 + this.gy * this.fS[0] + this.eh[0] - (328 - this.go[this.fS[0]][0]), 347 - this.go[this.fS[0]][1], this.go[this.fS[0]][0], this.go[this.fS[0]][1])) {
               var2 = this.fx;
               var10002 = var2[2]++;
               this.fS[5] = 0;
               Sound.getInstance().play(11);
               this.eE[11] = true;
            } else if (!this.eE[11] && this.S() && this.b(this.fw[0][0], this.fw[0][1], this.fw[0][2], this.fw[0][3])) {
               if (this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.fS[2] > -1 && this.fS[2] < this.gC[1] + 1) {
                  if (this.fS[2] < this.gB[1]) {
                     if (this.bd == 0) {
                        if (this.aY >= hn) {
                           Sound.getInstance().play(14);
                        } else {
                           Sound.getInstance().play(15);
                           this.ct = 50;
                        }

                        var2 = this.fx;
                        var10002 = var2[0]++;
                     }
                  } else if (this.fS[2] < this.gB[0]) {
                     if (this.bq[this.bJ[this.bK[this.fS[2] - this.gB[1]]][15]] >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][0]) {
                        if (this.bu[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                           if (this.fS[3] == 0) {
                              if (this.aY >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                                 Sound.getInstance().play(14);
                              } else {
                                 Sound.getInstance().play(15);
                                 this.ct = 50;
                              }
                           } else if (this.bJ[this.bK[this.fS[2] - this.gB[1]]][12] == 0) {
                              if (this.aY >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                                 Sound.getInstance().play(14);
                              } else {
                                 Sound.getInstance().play(15);
                                 this.ct = 50;
                              }
                           } else if (this.bJ[this.bK[this.fS[2] - this.gB[1]]][12] >= 1) {
                              if (this.aL >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][1]) {
                                 Sound.getInstance().play(11);
                              } else {
                                 Sound.getInstance().play(11);
                              }
                           }

                           var2 = this.fx;
                           var10002 = var2[0]++;
                        } else if (this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 < this.bi) {
                           if (this.aY >= this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1)) {
                              Sound.getInstance().play(14);
                           } else {
                              Sound.getInstance().play(15);
                              this.ct = 50;
                           }

                           var2 = this.fx;
                           var10002 = var2[0]++;
                        }
                     }
                  } else if (this.fS[2] - this.gB[0] == 0) {
                     if (this.bx[0] + 1 < this.bi) {
                        if (this.aY >= ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1)) {
                           Sound.getInstance().play(14);
                        } else {
                           Sound.getInstance().play(15);
                           this.ct = 50;
                        }

                        var2 = this.fx;
                        var10002 = var2[0]++;
                     }
                  } else if (this.fS[2] - this.gB[0] >= 1) {
                     if (this.fS[2] - this.gB[0] == 1) {
                        if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < 10) {
                           if (this.aY >= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                              Sound.getInstance().play(14);
                           } else {
                              Sound.getInstance().play(15);
                              this.ct = 50;
                           }

                           var2 = this.fx;
                           var10002 = var2[0]++;
                        }
                     } else if (this.bx[this.fS[2] - this.gB[0] + 1] + 1 < this.bi) {
                        if (this.aY >= ac[this.fS[2] - this.gB[0]][(this.bx[this.fS[2] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[0] + 1] + 1) / 10 + 1)) {
                           Sound.getInstance().play(14);
                        } else {
                           Sound.getInstance().play(15);
                           this.ct = 50;
                        }

                        var2 = this.fx;
                        var10002 = var2[0]++;
                     }
                  }
               }
            } else if (this.S() && this.b(this.fw[1][0], this.fw[1][1], this.fw[1][2], this.fw[1][3])) {
               if (this.bq[0] >= 48 && this.eh[0] % this.gy == 0 && this.ek[0] == 0 && !this.eE[9] && this.fS[2] >= 0 && this.fS[2] <= this.gC[1] && this.fS[2] >= this.gB[1] && this.fS[2] < this.gB[0] && this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1 >= 10) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[1]++;
               }
            } else if (this.S() && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
               if (!this.eE[9]) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[5]++;
                  this.eE[10] = true;
               }
            } else if (this.S() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3])) {
               if (this.be >= 1) {
                  var2 = this.fx;
                  var10002 = var2[13]++;
                  Sound.getInstance().play(11);
                  this.gR = 0;
                  this.gA[0] = 0;
               }
            } else if (this.S() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3])) {
               if (this.bf >= 1) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[14]++;
               }
            } else if (this.S() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3]) && !this.dV) {
               if (this.be >= 1) {
                  Sound.getInstance().play(11);
                  var2 = this.fx;
                  var10002 = var2[15]++;
                  this.gA[0] = 0;
                  this.gR = 1;
               }
            } else if (this.T() && !this.eE[9]) {
               this.eE[10] = true;
               this.eE[1] = true;
            }

            if (this.R() && this.b(this.fw[13][0], this.fw[13][1], this.fw[13][2], this.fw[13][3]) && this.be >= 1) {
               if (!this.gp[13]) {
                  this.gp[13] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[13] = false;
            }

            if (this.R() && this.b(this.fw[14][0], this.fw[14][1], this.fw[14][2], this.fw[14][3]) && this.bf >= 1) {
               if (!this.gp[14]) {
                  this.gp[14] = true;
                  Sound.getInstance().play(10);
               }
            } else {
               this.gp[14] = false;
            }

            if (this.be >= 1) {
               if (this.R() && this.b(this.fw[15][0], this.fw[15][1], this.fw[15][2], this.fw[15][3]) && this.bf >= 1) {
                  if (!this.gp[15]) {
                     this.gp[15] = true;
                     Sound.getInstance().play(10);
                  }
               } else {
                  this.gp[15] = false;
               }
            }
         }
      }

      if (this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
         if (this.fS[2] < this.gB[1]) {
            if (this.bd == 0) {
               this.gz = hn;
            }
         } else if (this.fS[2] < this.gB[0]) {
            if (this.bq[this.bJ[this.bK[this.fS[2] - this.gB[1]]][15]] < this.bJ[this.bK[this.fS[2] - this.gB[1]]][0]) {
               this.gz = 0;
            } else if (this.bu[this.bK[this.fS[2] - this.gB[1]]] == 0) {
               this.gz = this.bJ[this.bK[this.fS[2] - this.gB[1]]][1];
            } else {
               this.gz = this.bJ[this.bK[this.fS[2] - this.gB[1]]][(this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) % 10 + 2] * ((this.bv[this.bK[this.fS[2] - this.gB[1]]] + 1) / 10 + 1);
            }
         } else if (this.fS[2] - this.gB[1] - this.gB[0] == 0) {
            this.gz = ac[0][(this.bx[0] + 1) % 10] * ((this.bx[0] + 1) / 10 + 1);
         } else if (this.fS[2] - this.gB[1] - this.gB[0] >= 1) {
            this.gz = ac[this.fS[2] - this.gB[1] - this.gB[0]][(this.bx[this.fS[2] - this.gB[1] - this.gB[0] + 1] + 1) % 10] * ((this.bx[this.fS[2] - this.gB[1] - this.gB[0] + 1] + 1) / 10 + 1);
         }
      }

      if (this.gI) {
         ++this.gH;
         if (this.gH > this.getLength(cC) - 1) {
            this.gH = 0;
            this.gI = false;
         }

         if (cC[this.gH] == 100 && this.fS[2] >= 0 && this.fS[2] <= this.gC[1]) {
            if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
               this.bw[this.bK[this.fS[2] - this.gB[1]]] = 1;
               this.ag[this.fS[2]].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][0], "FONT_SYSTEM_BOLD", 30, 1);

               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1) {
                     this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][1][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }

               for(var3 = 0; var3 < 10; ++var3) {
                  if (this.bk[var3] == this.bK[this.fS[2] - this.gB[1]] + 2) {
                     this.eV[var3] = 1;
                  }
               }
            } else if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 1) {
               this.bw[this.bK[this.fS[2] - this.gB[1]]] = 0;
               this.ag[this.fS[2]].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][0], "FONT_SYSTEM_BOLD", 30, 1);

               for(var3 = this.gA[3]; var3 < this.gA[3] + 3; ++var3) {
                  if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                     this.ag[var3].a(this.cT[this.bK[this.fS[2] - this.gB[1]]][0][var3 - this.gA[3] + 1], "FONT_SYSTEM_BOLD", 30, 1);
                  }
               }

               for(var3 = 0; var3 < 10; ++var3) {
                  if (this.bk[var3] == this.bK[this.fS[2] - this.gB[1]] + 2) {
                     this.eV[var3] = 0;
                  }
               }
            }

            if (this.ae[this.fS[2] + 11].isLoaded()) {
               this.ae[this.fS[2] + 11].reset();
            }

            if (this.ae[this.fS[2] + 11].isLoaded()) {
               this.ae[this.fS[2] + 11].reset();
            }

            if (!this.ae[this.fS[2] + 11].isLoaded()) {
               if (this.bw[this.bK[this.fS[2] - this.gB[1]]] == 0) {
                  this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_f.png", this.bK[this.fS[2] - this.gB[1]])), MyUtility.getString(String.format("udi%03d_f.imgcut", this.bK[this.fS[2] - this.gB[1]])));
               } else {
                  this.ae[this.fS[2] + 11].load(MyUtility.getString(String.format("udi%03d_c.png", this.bK[this.fS[2] - this.gB[1]])), MyUtility.getString(String.format("udi%03d_c.imgcut", this.bK[this.fS[2] - this.gB[1]])));
               }
            }
         }
      }

      if (this.eE[0]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[0] = this.gm[0] * 2 + 1;
         if (this.gm[0] >= 297) {
            this.gm[0] = 297;
            this.gm[1] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = this.getWidth();
            if (this.gm[1] <= 0) {
               this.eE[0] = false;
               this.fQ[2] = 0;
               this.gQ = 0;
            }
         } else {
            this.fP = fM[this.fQ[2]];
         }
      } else if (this.eE[1]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         this.gm[1] = this.gm[1] * 2 + 1;
         if (this.gm[1] >= 297) {
            this.gm[1] = 297;
            this.gm[0] /= 2;
         }

         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fQ[2] = this.getLength(fM) - 1;
            this.fP = 0;
            if (this.gm[0] <= 0) {
               this.fQ[2] = 0;
               this.screenTransition();
               this.screen = 5;
               this.fF = -1;
               this.eE[1] = false;
               return var1;
            }
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }
      } else if (this.gF[0]) {
         var2 = this.fQ;
         var10002 = var2[6]++;
         if (this.fQ[6] > this.getLength(fM) - 1) {
            this.fP = 0;
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[6]];
         }

         if (this.fQ[6] > this.getLength(fM)) {
            this.fQ[6] = 0;
            this.screenTransition();
            this.screen = 7;
            this.fF = -1;
            return var1;
         }
      } else if (this.gF[1]) {
         var2 = this.fQ;
         var10002 = var2[6]++;
         if (this.fQ[6] > this.getLength(fM) - 1) {
            this.fQ[6] = this.getLength(fM) - 1;
            this.fP = this.getWidth();
            this.fQ[6] = 0;
            this.gF[1] = false;
         } else {
            this.fP = fM[this.fQ[6]];
         }
      }

      if (this.eE[13]) {
         var2 = this.fQ;
         var10002 = var2[2]++;
         if (this.fQ[2] > this.getLength(fM) - 1) {
            this.fP = 0;
         } else {
            this.fP = fM[this.getLength(fM) - 1 - this.fQ[2]];
         }

         if (this.fQ[2] > this.getLength(fM)) {
            this.fP = 0;
            this.fQ[2] = 0;
            this.screenTransition();
            this.screen = 999;
            this.fF = -1;
            this.gQ = 2;
            var4 = 0;

            for(var3 = 0; var3 < this.getLength(this.fS); ++var3) {
               this.gT[var3] = this.fS[var3];
               var4 = var3 + 1;
            }

            this.gT[var4] = this.eh[0];
            return var1;
         }
      }

      var2 = this.fQ;
      var10002 = var2[0]--;
      if (this.fQ[0] <= 0) {
         this.fQ[0] = 0;
      }

      var2 = this.fQ;
      var10002 = var2[3]++;
      var2 = this.fQ;
      var10002 = var2[4]++;
      --this.ct;
      if (this.ct <= 0) {
         this.ct = 0;
      }

      for(var3 = 0; var3 < this.getLength(this.go); ++var3) {
         for(var4 = 0; var4 < this.getLength(this.go[var3]); ++var4) {
            if (var4 == 0) {
               if (var3 == this.fS[0]) {
                  this.go[var3][var4] = this.eh[0] % this.gy * 100 / this.gy * 99 / 100 + 328;
                  if (this.eh[0] > 0) {
                     this.go[var3][var4] = 328 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
                  }
               } else if (var3 == this.fS[0] + 1) {
                  this.go[var3][var4] = 229 - this.eh[0] % this.gy * 100 / this.gy * 99 / 100;
               } else {
                  this.go[var3][var4] = 229;
               }

               if (this.go[var3][var4] >= 328) {
                  this.go[var3][var4] = 328;
               } else if (this.go[var3][var4] <= 229) {
                  this.go[var3][var4] = 229;
               }
            } else if (var4 == 1) {
               if (var3 == this.fS[0]) {
                  this.go[var3][var4] = this.eh[0] % this.gy * 100 / this.gy * 79 / 100 + 263;
                  if (this.eh[0] > 0) {
                     this.go[var3][var4] = 263 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
                  }
               } else if (var3 == this.fS[0] + 1) {
                  this.go[var3][var4] = 184 - this.eh[0] % this.gy * 100 / this.gy * 79 / 100;
               } else {
                  this.go[var3][var4] = 184;
               }

               if (this.go[var3][var4] >= 263) {
                  this.go[var3][var4] = 263;
               } else if (this.go[var3][var4] <= 184) {
                  this.go[var3][var4] = 184;
               }
            }
         }
      }

      if (!this.eE[0] && !this.eE[1] && !this.eE[13] && !this.gF[0] && !this.gF[1] && !this.eb && !this.gI && !this.eE[9]) {
         if ((this.R() || this.S()) && this.b(this.fw[5][0], this.fw[5][1], this.fw[5][2], this.fw[5][3])) {
            this.eE[10] = true;
         } else if (this.fx[5] == 0 && !this.eE[1]) {
            this.eE[10] = false;
         }
      } else if (this.fx[5] == 0 && !this.eE[1]) {
         this.eE[10] = false;
      }

      var1 = true;
      return var1;
   }
}
